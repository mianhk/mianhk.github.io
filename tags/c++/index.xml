<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C++ - 标签 - mianhk's notes</title><link>http://yuguocong.cn/tags/c++/</link><description>C++ - 标签 - mianhk's notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>gcyu25@gmail.com (mianhk)</managingEditor><webMaster>gcyu25@gmail.com (mianhk)</webMaster><lastBuildDate>Sun, 24 Jun 2018 22:02:20 +0800</lastBuildDate><atom:link href="http://yuguocong.cn/tags/c++/" rel="self" type="application/rss+xml"/><item><title>面试总结-C++</title><link>http://yuguocong.cn/posts/sumary/interview_cpp/</link><pubDate>Sun, 24 Jun 2018 22:02:20 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/sumary/interview_cpp/</guid><description>编程基础 C++ 内存管理方式 堆、栈、自由存储区、全局/静态存储区、常量存储区 自由存储区存储malloc申请的内存 (1)从静态存储区域分配 。内存在程</description></item><item><title>剑指offer-刷题总结</title><link>http://yuguocong.cn/posts/algorithm/re_sword_to_offer/</link><pubDate>Wed, 20 Jun 2018 21:40:02 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/re_sword_to_offer/</guid><description><![CDATA[<blockquote>
<p>重刷剑指offer总结</p>
</blockquote>
<!-- raw HTML omitted -->]]></description></item><item><title>LeetCode-60-Permutation-Sequence</title><link>http://yuguocong.cn/posts/algorithm/leetcode-60-permutation-sequence/</link><pubDate>Tue, 06 Feb 2018 17:32:24 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-60-permutation-sequence/</guid><description><![CDATA[LeetCode-60-Permutation-Sequence The set [1,2,3,…,n] contains a total of n! unique permutations. By listing and labeling all of the permutations in order, We get the following sequence (ie, for n = 3): &#34;123&#34; &#34;132&#34; &#34;213&#34; &#34;231&#34; &#34;312&#34; &#34;321&#34; Given n and k, return the kth permutation sequence. 同样是排列 组合的问题，这次不]]></description></item><item><title>LeetCode-56and57-Merge-Intervals</title><link>http://yuguocong.cn/posts/algorithm/leetcode-56-merge-intervals/</link><pubDate>Tue, 30 Jan 2018 16:00:00 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-56-merge-intervals/</guid><description>LeetCode-56-Merge-Intervals Given a collection of intervals, merge all overlapping intervals. For example, Given [1,3],[2,6],[8,10],[15,18], return [1,6],[8,10],[15,18]. 如例子中所示，每个数组的前后分别表示开始和结束，工作是合并有重叠的数组。例如，由于[1,3]和[2,6]有重</description></item><item><title>LeetCode-55-Jump-Game</title><link>http://yuguocong.cn/posts/algorithm/leetcode-55-jump-game/</link><pubDate>Tue, 30 Jan 2018 15:39:55 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-55-jump-game/</guid><description>LeetCode-55-Jump-Game Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Determine if you are able to reach the last index. For example: A = [2,3,1,1,4], return true. A = [3,2,1,0,4], return false. 由题可知，数组的位置表示从该位置可</description></item><item><title>LeetCode-53-Maximum-Subarray</title><link>http://yuguocong.cn/posts/algorithm/leetcode-53-maximum-subarray/</link><pubDate>Fri, 26 Jan 2018 17:57:03 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-53-maximum-subarray/</guid><description>LeetCode-53-Maximum-Subarray Find the contiguous subarray within an array (containing at least one number) which has the largest sum. For example, given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6. 最长子序列，又是一个动态规划的问题，关于动态规划，我们最主要的是要维护D</description></item><item><title>LeetCode-52-N-Queens-II</title><link>http://yuguocong.cn/posts/algorithm/leetcode-52-n-queens-ii/</link><pubDate>Fri, 26 Jan 2018 17:00:24 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-52-n-queens-ii/</guid><description>LeetCode-52-N-Queens-II Follow up for N-Queens problem. Now, instead outputting board configurations, return the total number of distinct solutions. 只返回N皇后问题结果的种数。 因此不需要每一个字符串置位了，只需要判断一个位置的横竖，斜45度和斜135度</description></item><item><title>LeetCode-51-N-Queens</title><link>http://yuguocong.cn/posts/algorithm/leetcode-51-n-queens/</link><pubDate>Fri, 26 Jan 2018 10:12:49 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-51-n-queens/</guid><description>LeetCode-51-N-Queens 经典的N皇后问题，重点是全排列的问题，但是这里由于N皇后的不重复行、列、斜的要求，在排列的过程中，比如从行开始排列，只能保证同行不重复，所</description></item><item><title>LeetCode-49-Group-Anagrams</title><link>http://yuguocong.cn/posts/algorithm/leetcode-49-group-anagrams/</link><pubDate>Thu, 25 Jan 2018 21:44:37 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-49-group-anagrams/</guid><description><![CDATA[LeetCode-49-Group-Anagrams Given an array of strings, group anagrams together. For example, given: [&ldquo;eat&rdquo;, &ldquo;tea&rdquo;, &ldquo;tan&rdquo;, &ldquo;ate&rdquo;, &ldquo;nat&rdquo;, &ldquo;bat&rdquo;], Return: [ [&#34;ate&#34;, &#34;eat&#34;,&#34;tea&#34;], [&#34;nat&#34;,&#34;tan&#34;], [&#34;bat&#34;] ] 输入一个字符串数组，输出的是：将相同字符的字符串放在一个数组的二维数组。相同字符的处理，基]]></description></item><item><title>Leetcode-48-Rotate-Image</title><link>http://yuguocong.cn/posts/algorithm/leetcode-48-rotate-image/</link><pubDate>Thu, 25 Jan 2018 20:44:32 +0800</pubDate><author>作者</author><guid>http://yuguocong.cn/posts/algorithm/leetcode-48-rotate-image/</guid><description>Leetcode-48-Rotate-Image ou are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise). Note: You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation. Example : Given input matrix = [ [1,2,3], [4,5,6], [7,8,9] ], rotate the input matrix in-place such that it becomes: [</description></item></channel></rss>