[
  {
    "title": "无标题",
    "description": "UNIONUNION使用规则：UNION必须由两条或两条以上的SELECT语句组成，语句之间用关键字UNION分隔（因此，如果组合4条SELECT语句，将要使用3个UNION关键字）UNION中的每个查询必须包含相同的列、表达式或聚集函数列数据类型必须兼容：类型不必完全相同，但必须是DBMS可...",
    "created_at": "2019-05-08T01:36:53.000Z",
    "updated_at": "2019-05-08T08:08:43.000Z",
    "published_at": null,
    "format": "lake",
    "slug": "lf8gfx",
    "last_editor": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "large_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "followers_count": 3,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2019-05-01T07:47:16.000Z",
      "_serializer": "v2.user"
    },
    "body": ""
  },
  {
    "title": "一会就删的标题",
    "description": "title: MySQL学习总结2-表连接date: 2019-1-16 11:27:21categories: MySQLtags: [MySQL,学习]在关系型数据库里面，每个实体有自己的一张表，所有属性都是这张表的字段，表与表之间根据关联字段&quot;连接&quot;在一起。   什么...",
    "created_at": "2019-05-07T09:08:06.000Z",
    "updated_at": "2019-05-07T09:54:50.000Z",
    "published_at": "2019-05-07T09:54:50.000Z",
    "format": "lake",
    "slug": "kc2v6z",
    "last_editor": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "large_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "followers_count": 3,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2019-05-01T07:47:16.000Z",
      "_serializer": "v2.user"
    },
    "body": "title: MySQL学习总结2-表连接<br />date: 2019-1-16 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n> 在关系型数据库里面，每个实体有自己的一张表，所有属性都是这张表的字段，表与表之间根据关联字段\"连接\"在一起。   \n\n\n\n\n<a name=\"d7333afa\"></a>\n# 什么是连接\n\n**两张表根据关联字段，组合成一个数据集。当两张表的关联字段不匹配时，例如表A和表B，处理方式为：**\n\n- 只返回两张表匹配的记录，内连接（inner join）。\n- 返回匹配的记录，以及表 A 多余的记录，左连接（left join）。\n- 返回匹配的记录，以及表 B 多余的记录，右连接（right join）。\n- 返回匹配的记录，以及表 A 和表 B 各自的多余记录，全连接（full join）。\n\n这里看到了阮一峰老师的一个总结，引用了图片：<br />             ![](https://cdn.nlark.com/yuque/0/2019/jpeg/187932/1548247519305-bff75e42-9992-499e-9c1b-d75b9e56fe13.jpeg#align=left&display=inline&height=295&originHeight=295&originWidth=602&size=0&status=done&width=602)\n\n<a name=\"80bb3ed3\"></a>\n# 内连接（inner join）\n\n- MySQL默认的连接就是内连接，可以省略inner。\n- 有条件的内连接：\n\nwhere：数据过滤，理解上，数据交叉连接完成后再进行过滤。<br />on：在连接时，就对数据进行判断。<br />using：要求负责连接的两个实体之间的字段名称一致。<br />     在有同名字段时，使用using，通用条件时，使用on，在数据过滤时（不是连接的过滤）时，使用where。\n<a name=\"382f77cb\"></a>\n# 外连接（outer join）\n连接的数据不真实存在。意思是外连接的两个表，存在单个表中没有的数据。\n<a name=\"81255524\"></a>\n## 左连接（left join）\n在连接时，出现了左边表连接不到右边表的情况，则左边表的数据会被保留，而右边表的数据连接不到左表的情况，会被抛弃。\n<a name=\"92bb0331\"></a>\n## 右连接（right join）\n在连接时，出现了左边表连接不到右边表的情况，则数据会被抛弃，而右边表的数据连接不到左表的情况，会被保留。\n<a name=\"c078d866\"></a>\n## 全连接（full join）\n"
  },
  {
    "id": 1648286,
    "slug": "mwklk2",
    "title": "语雀编写，自动部署博客",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title: 语雀编写，自动部署博客<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n<a name=\"TEfth\"></a>\n# 相关的坑总结：\n<a name=\"a7EDy\"></a>\n## Postman的使用\n这个是怪自己http没有学好了，Get请求是加在Head上的，搞了半天，觉得不太会用。获取repo的ID，本来还看了官方的api，觉得就是这么回事，但还是搞了半天，直接在服务器上curl了一下，但总是各种返回不成功。\n\n\n\n\n<a name=\"g9sba\"></a>\n## 配置文件的修改\n脚本总是用不上\n\nReferrence:<br />[https://segmentfault.com/a/1190000017797561](https://segmentfault.com/a/1190000017797561)<br />[https://lkc.im/archives/1d99.html](https://lkc.im/archives/1d99.html)<br />[https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/](https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/)\n\n\n",
    "body_draft": "title: 语雀编写，自动部署博客<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n<a name=\"TEfth\"></a>\n# 相关的坑总结：\n<a name=\"a7EDy\"></a>\n## Postman的使用\n这个是怪自己http没有学好了，Get请求是加在Head上的，搞了半天，觉得不太会用。获取repo的ID，本来还看了官方的api，觉得就是这么回事，但还是搞了半天，直接在服务器上curl了一下，但总是各种返回不成功。\n\n\n\n\n<a name=\"g9sba\"></a>\n## 配置文件的修改\n脚本总是用不上\n\nReferrence:<br />[https://segmentfault.com/a/1190000017797561](https://segmentfault.com/a/1190000017797561)<br />[https://lkc.im/archives/1d99.html](https://lkc.im/archives/1d99.html)<br />[https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/](https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/)\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>title: 语雀编写，自动部署博客</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: MySQL<span data-lake-element=\"cursor\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [MySQL,学习]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22JHmR4%22%7D\" id=\"JHmR4\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"TEfth\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">相关的坑总结：</h1><h2 id=\"a7EDy\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Postman的使用</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这个是怪自己http没有学好了，Get请求是加在Head上的，搞了半天，觉得不太会用。获取repo的ID，本来还看了官方的api，觉得就是这么回事，但还是搞了半天，直接在服务器上curl了一下，但总是各种返回不成功。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"g9sba\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">配置文件的修改</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">脚本总是用不上</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">Referrence:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\" rel=\"noopener noreferrer\">https://segmentfault.com/a/1190000017797561</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://lkc.im/archives/1d99.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://lkc.im/archives/1d99.html</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/\" target=\"_blank\" rel=\"noopener noreferrer\">https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><p><span>title: 语雀编写，自动部署博客</span></p><p>categories: MySQL<cursor /></p><p>tags: [MySQL,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22JHmR4%22%7D\"></card><p><br /></p><h1 id=\"TEfth\">相关的坑总结：</h1><h2 id=\"a7EDy\">Postman的使用</h2><p>这个是怪自己http没有学好了，Get请求是加在Head上的，搞了半天，觉得不太会用。获取repo的ID，本来还看了官方的api，觉得就是这么回事，但还是搞了半天，直接在服务器上curl了一下，但总是各种返回不成功。</p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><h2 id=\"g9sba\">配置文件的修改</h2><p>脚本总是用不上</p><p><br /></p><p>Referrence:</p><p><a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">https://segmentfault.com/a/1190000017797561</a></p><p><a href=\"https://lkc.im/archives/1d99.html\" target=\"_blank\">https://lkc.im/archives/1d99.html</a></p><p><a href=\"https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/\" target=\"_blank\">https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/</a></p><p><br /></p><p><br /></p>",
    "body_draft_lake": "<!doctype lake><p><span>title: 语雀编写，自动部署博客</span></p><p>categories: MySQL<cursor /></p><p>tags: [MySQL,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22JHmR4%22%7D\"></card><p><br /></p><h1 id=\"TEfth\">相关的坑总结：</h1><h2 id=\"a7EDy\">Postman的使用</h2><p>这个是怪自己http没有学好了，Get请求是加在Head上的，搞了半天，觉得不太会用。获取repo的ID，本来还看了官方的api，觉得就是这么回事，但还是搞了半天，直接在服务器上curl了一下，但总是各种返回不成功。</p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><h2 id=\"g9sba\">配置文件的修改</h2><p>脚本总是用不上</p><p><br /></p><p>Referrence:</p><p><a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">https://segmentfault.com/a/1190000017797561</a></p><p><a href=\"https://lkc.im/archives/1d99.html\" target=\"_blank\">https://lkc.im/archives/1d99.html</a></p><p><a href=\"https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/\" target=\"_blank\">https://x-d.xyz/2019/04/02/yuque/Hexo%E5%8D%9A%E5%AE%A2%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C%EF%BC%8C%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/</a></p><p><br /></p><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-10T09:58:59.000Z",
    "deleted_at": null,
    "created_at": "2019-05-07T07:33:41.000Z",
    "updated_at": "2020-09-06T15:29:40.000Z",
    "published_at": "2019-05-10T09:58:59.000Z",
    "first_published_at": "2019-05-09T07:14:14.000Z",
    "word_count": 176,
    "cover": null,
    "description": "title: 语雀编写，自动部署博客categories: MySQLtags: [MySQL,学习]相关的坑总结：Postman的使用这个是怪自己http没有学好了，Get请求是加在Head上的，搞了半天，觉得不太会用。获取repo的ID，本来还看了官方的api，觉得就是这么回事，但还是搞了...",
    "custom_description": null,
    "hits": 40,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1613725,
    "slug": "pkq8u1",
    "title": "go语言学习-极客时间",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title: go语言学习-极客时间<br />date: 2019-05-07 11:25:46<br />categories: Go<br />tags: [Go,学习]\n\n---\n\n\n<a name=\"GHSXx\"></a>\n# 第一个go程序\n\n- go语言主函数没有返回值，需要使用os包， `os.exit()` ，也不能直接函数传参。\n\n<a name=\"ZC31x\"></a>\n# 变量、常量和其他语言的区别\n\n- 赋值可以自动类型推断： `a:=1` ，怎么方便怎么来就行\n- 快速连续赋值\n\n```\nconst (\n\tMonday=itoa+1\n  Tuesday\n  Wednesday\n)\n\nconst(\n\tOpen=1<<itoa\n  Close\n  Pending\n)\n```\n\n\n<a name=\"0WEDs\"></a>\n# 运算符\n\n- 算数运算符：没有前置的++、--\n- 比较运算符：用 `==` 比较时，相同维数的数组可以比较\n- 逻辑运算符\n- 位运算符： `&^` ：按位清零\n\n```\n1 &^ 0 --1\n1&^ 1 --0\n0&^1 --0\n0&^0 --0\n```\n<a name=\"SEhok\"></a>\n# 条件和循环\n\n- 循环：只支持 `for` ，并且没有括号，while条件的写法为\n\n```go\nfor n<5{\n\tn++\n  fmt.Println(n)\n}\n```\n\n- 条件：条件一定要是个布尔值或表达式。支持在if语句中对变量赋值\n- switch条件：条件表达式不限制为常量或者整数；单个case中，可以出现多个结果选项，使用逗号分隔；不需要break；可以不设定switch之后的条件表达式\n<a name=\"gwMfp\"></a>\n# 数组和切片\n<a name=\"zr8tw\"></a>\n## 数组\n\n- 数组的声明：声明同时初始化：`arr3:=[...]int{1,3,4,5} `  \n-  数组的遍历\n- 数组截取：a[index_begin(包含),index_end(不包含)]\n<a name=\"49EoL\"></a>\n## 切片\n\n- 切片的声明方式：与数组的声明有点相似\n```go\nvar s0 []int\ns1:=[]int{}\ns2:=[]int{1,2,3}\ns2:=make([]int,2,4)  //([]type,len,cap)  len个元素会被初始化为零值，\n                       cap中其它未初始化的元素不能访问\n```\n\n\n- 切片的增长方式：类似于c++的vector。\n- 切片共享存储结构：切片截取后，计算cap得到的结果。其实切片截取，指向的是内部共享的切片存储空间。所以修改截取的切片的数据，其他截取的相同区域也会发生改变。这是一个容易出错的问题。\n<a name=\"1gHlK\"></a>\n## 切片和数组的区别\n\n- 容量是否可伸缩\n- 是否可以进行比较\n<a name=\"on0MB\"></a>\n# Map基础\n\n- Map声明方式\n\n```go\nm:=map[string]int{\"one\":1,\"two\":2,\"three\":3}\nm1:=map[string]int{}\nm1[\"one\"]=1\nm2:=make(map[string]int,10)  //10表示初始化的cap,不需要初始化len\n```\n\n- 元素访问：当访问的key不存在时，仍然会返回零值，编程时需要根据nil来判断元素是否存在\n<a name=\"hmFCq\"></a>\n# Map与工厂模式\n\n- Map的value可以是一个方法\n- 与Go的Dock type接口方式一起，可以方便的实现单一方法对象的工厂模式\n- Go内置集合中没有Set，可以通过map实现` mySet:=**map**[int]bool{} `   \n<a name=\"3XQVx\"></a>\n# 字符串\n\n- string是数据类型，不是引用或指针类型。零值不是空，而是空字符串。\n- string是只读的byte slice，不能重复赋值。len函数可以表示它所包含的byte数\n- string的byte数组可以存放任何数据\n<a name=\"aSMYD\"></a>\n## Unicode和UTF-8\n\n- Unicode是一种字符集（code point）\n- UTF-8是Unicode的存储实现（转换为）\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png#align=left&display=inline&height=270&name=image.png&originHeight=398&originWidth=671&size=46907&status=done&width=456)\n\n<a name=\"gy3wV\"></a>\n# Go语言的函数\n\n- 函数可以返回多个值\n- 所有参数都是值传递：slice，map，channel会有传引用的错觉\n- 函数可以作为变量的值\n- 函数可以作为参数和返回值\n\n<a name=\"5TwaL\"></a>\n# 可变参数及defer\n\n- 延迟执行函数：defer。类似于其他语言中的finally，主要作用是最后关闭一些资源或者关闭一些锁\n\n<a name=\"QNCoJ\"></a>\n# 行为的定义和实现\n\n<a name=\"8hlP5\"></a>\n## 封装数据和行为\n\n```go\ntype Employee struct{\n\tId string\n  Name string\n  Age int\n}\n实例的创建和初始化\ne:=Employee{\"0\",\"Bob\",20}\ne1:=Employee{Name:\"Mike\",Age:30}\ne2:=new(Employee)  //这里返回的是实例的指针\ne2.Id=\"2\"  //通过实例的指针访问指针不需要“->”\n```\n\n<a name=\"0w95L\"></a>\n## 行为（方法）定义\n\n```go\nfunc (e Employee)String1() string{\n\treturn fmt.Sprintf(\"ID:%s-Name:%s-Age:%d\",e.Id,e.Name,e.Age)\n}\n\n//推荐使用的方式，类似于c++的引用\nfunc (e *Employee)String() string{\n\treturn fmt.Sprintf(\"ID:%s-Name:%s-Age:%d\",e.Id,e.Name,e.Age)\n}\n```\n\n<a name=\"sTcmz\"></a>\n# Go语言的相关接口\n<a name=\"VSi4q\"></a>\n## Duck Type\n方法签名是一样的，就认为是这样的\n\n- 接口是非入侵性的，实现不依赖于接口定义\n- 接口的定义可以包含在接口使用者包内\n<a name=\"8FFfL\"></a>\n## 接口变量\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png#align=left&display=inline&height=338&name=image.png&originHeight=338&originWidth=701&size=40266&status=done&width=701)\n\n\n<a name=\"cvQdN\"></a>\n## 自定义类型\n\n```go\ntype IntConv func (op int) int\n```\n\n<a name=\"70UD5\"></a>\n# 扩展与复用\n\n<a name=\"1sY91\"></a>\n# 不一样的接口类型，一样的多态\n\n<a name=\"j94PF\"></a>\n## 空接口与断言\n\n- 空接口可以表示任何类型\n- 通过断言来将空接口转换为制定类型 `v,ok:=p.(int) //ok=true时为转换成功` \n\n<a name=\"xDFda\"></a>\n## Go接口最佳实践\n\n- 倾向于使用小的接口定义，很多接口只包含一个方法。实现的负担较小。\n\n```go\nType Reader interface{\n\tRead(p []byte)(n int,err error)\n}\nType Writer interface{\n\tWrite(p []byte)(n int,err error)\n}\n```\n\n\n- 较大的接口定义，可以由多个小接口定义组合而成。\n\n```go\nType ReadWrite interface{\n\tReader\n  Writer\n}\n```\n\n- 只依赖于必要功能的最小接口，方法才能更多的被复用\n\n```go\nfunc StoreData(reader Reader) error{}\n```\n\n<a name=\"KwICQ\"></a>\n# 编写好的错误处理\n\n- 没有异常机制\n- error类型实现了error接口\n- 可以通过errors.New来快速创建错误实例\n<a name=\"ZeszK\"></a>\n# panic和recover\n<a name=\"W2cvc\"></a>\n## panic\n\n- panic用于不可恢复的错误\n- panic退出前会执行defer指定的内容\n<a name=\"hUDIy\"></a>\n## panic vs os.Exit\n\n- os.Exit退出时不会调用defer指定的函数\n- os.Exit退出时不会输出当前调用栈信息\n<a name=\"htxUf\"></a>\n## recover\n\n```\ndefer func(){\n\tif err:=recover();err!=nil{\n  \t//恢复错误\n  }\n}()\n```\n\n- 不要强制恢复错误，有的时候“Let it crash”可能更好，让程序重启来恢复。\n\n<a name=\"GXKen\"></a>\n# 构建可复用的模块（包）\n<a name=\"Ps2yh\"></a>\n## package\n\n- 基本复用模块单元：以**首字母大写**来表名可被包外代码访问\n- 代码在package可以和所在的目录了不一致（相对于Java而言）\n- 同一目录里的Go代码的package要保持一致\n<a name=\"32DTD\"></a>\n## init方法\n\n- 在main被执行前，所有依赖的package的init方法都会被执行\n- 不同包的init函数按照包导入的依赖关系决定执行顺序\n- 每个包可以有多个init函数\n- 包的每个源文件也可以有多个init函数，比较特殊\n<a name=\"CPKNr\"></a>\n## go get\n\n- 通过go get来获取远程依赖\n\n```\ngo get -u 强制从网络更新远程依赖\n```\n\n- 注意代码在Github上的组织形式，以适应go get：直接以代码路径开始，不要有src\n\n<a name=\"uCTgI\"></a>\n# 依赖管理\n<a name=\"na3Of\"></a>\n## Go未解决的依赖问题\n\n- 同一环境下，不同项目使用同一包的不同版本\n- 无法管理对包的特定版本的依赖\n<a name=\"X32MI\"></a>\n## vendor路径\nGo1.5 release版本，vendor目录被添加到除了GOPATH和GOROOT以外的依赖目录查找方案。查找依赖包路径的解决方案：\n\n1. 当前包下的vendor目录\n1. 向上级目录查找，直到找到src下的vendor目录\n1. 在GOPATH下面查找依赖包\n1. 在GOROOT目录下查找\n\n其他第三方依赖管理工具：godep，glide，**dep**<br />**\n<a name=\"L5ePp\"></a>\n# 协程机制\n<a name=\"Ph7TU\"></a>\n## 线程vs协程\n\n- 创建时默认的stack大小：JAVA 1M vs Goroutine 2K\n- 和KSE（Kernel Space Entity）：java Thread是1:1；GO M:N\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png#align=left&display=inline&height=432&name=image.png&originHeight=432&originWidth=618&size=110172&status=done&width=618)\n\n\n<a name=\"30Cx3\"></a>\n# 共享内存并发机制\n<a name=\"OFEOj\"></a>\n## Lock\n<a name=\"OKldk\"></a>\n## WaitGroup\n相当于Java的join\n<a name=\"49kQI\"></a>\n# CSP并发机制\n<a name=\"58HdC\"></a>\n## CSP vs Actor\n\n- 和Actor的直接通讯不同，CSP模式是通过Channel进行通讯的，更松耦合一些\n- Go中Channel是有容量限制并且独立于处理Goroutine，而如Erlang，Actor模式中的mailbox容量是无限的，接收进程也总是被动地处理消息。\n<a name=\"xvZt3\"></a>\n## Channel\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png#align=left&display=inline&height=910&name=image.png&originHeight=910&originWidth=1703&size=565338&status=done&width=1703)<br />两种情况：一种是一直等待，一种Buffered Channel ，更松耦合的Channel，消息发送方可以在容量没满的时候一直放，满了之后需要等待。对于接收方来说，只要Channel内有消息就可以一直接收。\n\n<a name=\"2SBcu\"></a>\n# 多路选择和超时\n<a name=\"sLxEu\"></a>\n## select\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png#align=left&display=inline&height=301&name=image.png&originHeight=301&originWidth=861&size=79632&status=done&width=861)<br />运行到select时，当任一个事件准备好了，就可以对应响应。当不想一直等待某事件时，可以进行超时控制。\n\n<a name=\"SkpQa\"></a>\n# channel的关闭和广播\n解决怎么知道channel数据完了的问题\n<a name=\"qC5Nf\"></a>\n## channel的关闭\n\n- 向关闭的channel发送数据，会导致panic\n- v,ok<-ch；ok为bool值，true表示正常接收，false表示通道关闭\n- 所有的channel接收者都会在channel关闭时，立即从阻塞等待中返回且上述ok值为false。这个广播机制常被利用，进行向多个订阅者发送信号，如：退出信号。\n\n<a name=\"BOlOq\"></a>\n# 任务的取消\n\n<a name=\"PIyuM\"></a>\n# Context与任务取消\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png#align=left&display=inline&height=372&name=image.png&originHeight=298&originWidth=786&size=58395&status=done&width=982.4999853596094)\n\n<a name=\"444Se\"></a>\n## Context\n\n- 根Context：通过context.Background()创建\n- 子Context：context.WithCancel(parentContext)创建\n- ctx,cancel：context.WithCancel(context.Background())\n- 当前Context被取消时，基于他的子context也会被取消\n- 接收取消通知<-ctx.Done()\n\n还有一些其他的方法\n\n<a name=\"jDWbp\"></a>\n# 典型并发任务\n<a name=\"2KmYh\"></a>\n## 只运行一次（常见的并发任务）\n在常见的多任务环境下，只执行一次。单例模式（懒汉式，线程安全）\n\n```go\ntype Singleton struct {\n\n}\n\nvar singleInstance *Singleton\nvar once sync.Once\n\nfunc GetSingletonObj() *Singleton{\n\tonce.Do(func() {    //传入创建方法\n\t\tfmt.Println(\"Create Obj\")\n\t\tsingleInstance=new(Singleton)\n\t})\n\treturn singleInstance\n}\n\n```\n\n<a name=\"kGIsw\"></a>\n## 所需任意任务完成\n<a name=\"YYXIC\"></a>\n## 所有任务完成\n<a name=\"jgefL\"></a>\n## 对象池\n数据库连接，网络连接，经常将这些对象池化，避免重复创建。\n<a name=\"tAhWo\"></a>\n## sync.pool对象缓存\n从名字来看，像是go语言提供的池。其实是对象的缓存<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png#align=left&display=inline&height=517&name=image.png&originHeight=414&originWidth=846&size=118933&status=done&width=1057.4999842420223)\n\n- 如果私有对象不存在则保存为私有对象\n- 如果私有对象存在，就放入当前Processor子池的共享池中\n\n使用：<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png#align=left&display=inline&height=341&name=image.png&originHeight=273&originWidth=497&size=37422&status=done&width=621.2499907426537)\n\n**sync.pool对象的生命周期---**sync.pool不能作为对象池的原因\n\n- GC会清除sync.pool缓存的对象\n- sync.pool对象的缓存有效期为下一次GC之前\n\n总结：\n\n- 适合于通过复用，降低复杂对象的创建和GC代价\n- 协程安全，会有锁的开销\n- 声明周期受GC影响，不适合于做连接池等，需自己管理生命周期资源的池化\n- 所以具体要看锁的开销大，还是初始化的开销大\n\n<a name=\"UbsS7\"></a>\n# 测试\n<a name=\"FECf9\"></a>\n## 单元测试\n表格测试\n<a name=\"cOhz8\"></a>\n### 内置单元测试框架\n\n- Fail，Error：该测试失败，该测试继续，其他测试继续执行\n- FailNow，Fatal：该测试失败，该测试中止，其他测试继续执行\n\n代码覆盖率\n<a name=\"Z0rO4\"></a>\n## Benchmark\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png#align=left&display=inline&height=491&name=image.png&originHeight=393&originWidth=679&size=77590&status=done&width=848.7499873526397)<br />以Benchmark开头，参数类型稍有不同。<br />通过ResetTimer和StopTimer将测试代码隔开\n\n命令行下运行：\n\n\n<a name=\"o10fu\"></a>\n## BBD\nBehavior Driven Development<br />常用框架：goconvey\n\n<a name=\"1pJFI\"></a>\n## 反射编程\n\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png#align=left&display=inline&height=390&name=image.png&originHeight=312&originWidth=820&size=64732&status=done&width=1024.99998472631)\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png#align=left&display=inline&height=356&name=image.png&originHeight=285&originWidth=755&size=35453&status=done&width=943.7499859370294)\n\n\n\n\n<a name=\"yvkPS\"></a>\n## 万能程序\nDeepEqual<br />比较切片和map<br />与配置相关的，要求灵活性和复用性时，可以<br />反射的\n\n<a name=\"KEsq1\"></a>\n## 不安全编程\nunsafe，一般涉及到库的交互，与c语言交互。<br />“不安全”行为危险性：Go语言中不支持强制类型转换。下列操作看似可以，实际不能转换，而且实际使用起来很危险。\n\n```\ni:=10\nf:=*(*floa64)(unsafe.Pointer(&i))\n```\n\n场景2：用到内置的Atomic操作，指针原子操作，并发读写\n\n<a name=\"KmB4n\"></a>\n# 架构模式\n<a name=\"dsFK1\"></a>\n## Pipe-Filter架构\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png#align=left&display=inline&height=510&name=image.png&originHeight=408&originWidth=782&size=86362&status=done&width=977.4999854341152)\n\n- 非常适合与数据处理及数据分析系统![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png#align=left&display=inline&height=474&name=image.png&originHeight=379&originWidth=690&size=86777&status=done&width=862.4999871477487)\n<a name=\"UVtCE\"></a>\n## micro kernel\n特点：易于拓展，错误隔离，保持架构一致性<br />要点：\n\n- 内核包含公共流程或通用逻辑\n- 将可变成或可扩展部分规划为扩展点\n- 抽象扩展点行为，定义接口\n- 利用插件进行扩展\n\n生产过程任务的开发\n<a name=\"N5rRp\"></a>\n## 内置json解析\n远程过程调用等过程中，会用json，以及在配置文件中，很多使用json\n\n\n<a name=\"RFIdh\"></a>\n## easyjson\ngo内置的，一般适用于配置文件解析，对于qps较高，运用了反射，效率较低。尽量使用高性能的json解析\n\n<a name=\"wincH\"></a>\n## HTTP服务\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png#align=left&display=inline&height=442&name=image.png&originHeight=354&originWidth=862&size=103367&status=done&width=1077.499983943999)<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png#align=left&display=inline&height=445&name=image.png&originHeight=356&originWidth=771&size=101595&status=done&width=963.7499856390061)\n\n\n<a name=\"s0G6x\"></a>\n## 构建Restful服务\n更好的router，httprouter<br />面向资源的架构（Resource Oriented Architecture）\n\n<a name=\"TpHAz\"></a>\n## 性能分析工具\n\n\n\n\n\n\n学习函数式编程：《计算机程序的构造和解释》functional programming<br />《Restful Web Service》<br />《Go程序设计语言》<br />《面向模式的软件架构》1,2,3本\n",
    "body_draft": "title: go语言学习-极客时间<br />date: 2019-05-07 11:25:46<br />categories: Go<br />tags: [Go,学习]\n\n---\n\n\n<a name=\"GHSXx\"></a>\n# 第一个go程序\n\n- go语言主函数没有返回值，需要使用os包， `os.exit()` ，也不能直接函数传参。\n\n<a name=\"ZC31x\"></a>\n# 变量、常量和其他语言的区别\n\n- 赋值可以自动类型推断： `a:=1` ，怎么方便怎么来就行\n- 快速连续赋值\n\n```\nconst (\n\tMonday=itoa+1\n  Tuesday\n  Wednesday\n)\n\nconst(\n\tOpen=1<<itoa\n  Close\n  Pending\n)\n```\n\n\n<a name=\"0WEDs\"></a>\n# 运算符\n\n- 算数运算符：没有前置的++、--\n- 比较运算符：用 `==` 比较时，相同维数的数组可以比较\n- 逻辑运算符\n- 位运算符： `&^` ：按位清零\n\n```\n1 &^ 0 --1\n1&^ 1 --0\n0&^1 --0\n0&^0 --0\n```\n<a name=\"SEhok\"></a>\n# 条件和循环\n\n- 循环：只支持 `for` ，并且没有括号，while条件的写法为\n\n```go\nfor n<5{\n\tn++\n  fmt.Println(n)\n}\n```\n\n- 条件：条件一定要是个布尔值或表达式。支持在if语句中对变量赋值\n- switch条件：条件表达式不限制为常量或者整数；单个case中，可以出现多个结果选项，使用逗号分隔；不需要break；可以不设定switch之后的条件表达式\n<a name=\"gwMfp\"></a>\n# 数组和切片\n<a name=\"zr8tw\"></a>\n## 数组\n\n- 数组的声明：声明同时初始化：`arr3:=[...]int{1,3,4,5} `  \n-  数组的遍历\n- 数组截取：a[index_begin(包含),index_end(不包含)]\n<a name=\"49EoL\"></a>\n## 切片\n\n- 切片的声明方式：与数组的声明有点相似\n```go\nvar s0 []int\ns1:=[]int{}\ns2:=[]int{1,2,3}\ns2:=make([]int,2,4)  //([]type,len,cap)  len个元素会被初始化为零值，\n                       cap中其它未初始化的元素不能访问\n```\n\n\n- 切片的增长方式：类似于c++的vector。\n- 切片共享存储结构：切片截取后，计算cap得到的结果。其实切片截取，指向的是内部共享的切片存储空间。所以修改截取的切片的数据，其他截取的相同区域也会发生改变。这是一个容易出错的问题。\n<a name=\"1gHlK\"></a>\n## 切片和数组的区别\n\n- 容量是否可伸缩\n- 是否可以进行比较\n<a name=\"on0MB\"></a>\n# Map基础\n\n- Map声明方式\n\n```go\nm:=map[string]int{\"one\":1,\"two\":2,\"three\":3}\nm1:=map[string]int{}\nm1[\"one\"]=1\nm2:=make(map[string]int,10)  //10表示初始化的cap,不需要初始化len\n```\n\n- 元素访问：当访问的key不存在时，仍然会返回零值，编程时需要根据nil来判断元素是否存在\n<a name=\"hmFCq\"></a>\n# Map与工厂模式\n\n- Map的value可以是一个方法\n- 与Go的Dock type接口方式一起，可以方便的实现单一方法对象的工厂模式\n- Go内置集合中没有Set，可以通过map实现` mySet:=**map**[int]bool{} `   \n<a name=\"3XQVx\"></a>\n# 字符串\n\n- string是数据类型，不是引用或指针类型。零值不是空，而是空字符串。\n- string是只读的byte slice，不能重复赋值。len函数可以表示它所包含的byte数\n- string的byte数组可以存放任何数据\n<a name=\"aSMYD\"></a>\n## Unicode和UTF-8\n\n- Unicode是一种字符集（code point）\n- UTF-8是Unicode的存储实现（转换为）\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png#align=left&display=inline&height=270&name=image.png&originHeight=398&originWidth=671&size=46907&status=done&width=456)\n\n<a name=\"gy3wV\"></a>\n# Go语言的函数\n\n- 函数可以返回多个值\n- 所有参数都是值传递：slice，map，channel会有传引用的错觉\n- 函数可以作为变量的值\n- 函数可以作为参数和返回值\n\n<a name=\"5TwaL\"></a>\n# 可变参数及defer\n\n- 延迟执行函数：defer。类似于其他语言中的finally，主要作用是最后关闭一些资源或者关闭一些锁\n\n<a name=\"QNCoJ\"></a>\n# 行为的定义和实现\n\n<a name=\"8hlP5\"></a>\n## 封装数据和行为\n\n```go\ntype Employee struct{\n\tId string\n  Name string\n  Age int\n}\n实例的创建和初始化\ne:=Employee{\"0\",\"Bob\",20}\ne1:=Employee{Name:\"Mike\",Age:30}\ne2:=new(Employee)  //这里返回的是实例的指针\ne2.Id=\"2\"  //通过实例的指针访问指针不需要“->”\n```\n\n<a name=\"0w95L\"></a>\n## 行为（方法）定义\n\n```go\nfunc (e Employee)String1() string{\n\treturn fmt.Sprintf(\"ID:%s-Name:%s-Age:%d\",e.Id,e.Name,e.Age)\n}\n\n//推荐使用的方式，类似于c++的引用\nfunc (e *Employee)String() string{\n\treturn fmt.Sprintf(\"ID:%s-Name:%s-Age:%d\",e.Id,e.Name,e.Age)\n}\n```\n\n<a name=\"sTcmz\"></a>\n# Go语言的相关接口\n<a name=\"VSi4q\"></a>\n## Duck Type\n方法签名是一样的，就认为是这样的\n\n- 接口是非入侵性的，实现不依赖于接口定义\n- 接口的定义可以包含在接口使用者包内\n<a name=\"8FFfL\"></a>\n## 接口变量\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png#align=left&display=inline&height=338&name=image.png&originHeight=338&originWidth=701&size=40266&status=done&width=701)\n\n\n<a name=\"cvQdN\"></a>\n## 自定义类型\n\n```go\ntype IntConv func (op int) int\n```\n\n<a name=\"70UD5\"></a>\n# 扩展与复用\n\n<a name=\"1sY91\"></a>\n# 不一样的接口类型，一样的多态\n\n<a name=\"j94PF\"></a>\n## 空接口与断言\n\n- 空接口可以表示任何类型\n- 通过断言来将空接口转换为制定类型 `v,ok:=p.(int) //ok=true时为转换成功` \n\n<a name=\"xDFda\"></a>\n## Go接口最佳实践\n\n- 倾向于使用小的接口定义，很多接口只包含一个方法。实现的负担较小。\n\n```go\nType Reader interface{\n\tRead(p []byte)(n int,err error)\n}\nType Writer interface{\n\tWrite(p []byte)(n int,err error)\n}\n```\n\n\n- 较大的接口定义，可以由多个小接口定义组合而成。\n\n```go\nType ReadWrite interface{\n\tReader\n  Writer\n}\n```\n\n- 只依赖于必要功能的最小接口，方法才能更多的被复用\n\n```go\nfunc StoreData(reader Reader) error{}\n```\n\n<a name=\"KwICQ\"></a>\n# 编写好的错误处理\n\n- 没有异常机制\n- error类型实现了error接口\n- 可以通过errors.New来快速创建错误实例\n<a name=\"ZeszK\"></a>\n# panic和recover\n<a name=\"W2cvc\"></a>\n## panic\n\n- panic用于不可恢复的错误\n- panic退出前会执行defer指定的内容\n<a name=\"hUDIy\"></a>\n## panic vs os.Exit\n\n- os.Exit退出时不会调用defer指定的函数\n- os.Exit退出时不会输出当前调用栈信息\n<a name=\"htxUf\"></a>\n## recover\n\n```\ndefer func(){\n\tif err:=recover();err!=nil{\n  \t//恢复错误\n  }\n}()\n```\n\n- 不要强制恢复错误，有的时候“Let it crash”可能更好，让程序重启来恢复。\n\n<a name=\"GXKen\"></a>\n# 构建可复用的模块（包）\n<a name=\"Ps2yh\"></a>\n## package\n\n- 基本复用模块单元：以**首字母大写**来表名可被包外代码访问\n- 代码在package可以和所在的目录了不一致（相对于Java而言）\n- 同一目录里的Go代码的package要保持一致\n<a name=\"32DTD\"></a>\n## init方法\n\n- 在main被执行前，所有依赖的package的init方法都会被执行\n- 不同包的init函数按照包导入的依赖关系决定执行顺序\n- 每个包可以有多个init函数\n- 包的每个源文件也可以有多个init函数，比较特殊\n<a name=\"CPKNr\"></a>\n## go get\n\n- 通过go get来获取远程依赖\n\n```\ngo get -u 强制从网络更新远程依赖\n```\n\n- 注意代码在Github上的组织形式，以适应go get：直接以代码路径开始，不要有src\n\n<a name=\"uCTgI\"></a>\n# 依赖管理\n<a name=\"na3Of\"></a>\n## Go未解决的依赖问题\n\n- 同一环境下，不同项目使用同一包的不同版本\n- 无法管理对包的特定版本的依赖\n<a name=\"X32MI\"></a>\n## vendor路径\nGo1.5 release版本，vendor目录被添加到除了GOPATH和GOROOT以外的依赖目录查找方案。查找依赖包路径的解决方案：\n\n1. 当前包下的vendor目录\n1. 向上级目录查找，直到找到src下的vendor目录\n1. 在GOPATH下面查找依赖包\n1. 在GOROOT目录下查找\n\n其他第三方依赖管理工具：godep，glide，**dep**<br />**\n<a name=\"L5ePp\"></a>\n# 协程机制\n<a name=\"Ph7TU\"></a>\n## 线程vs协程\n\n- 创建时默认的stack大小：JAVA 1M vs Goroutine 2K\n- 和KSE（Kernel Space Entity）：java Thread是1:1；GO M:N\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png#align=left&display=inline&height=432&name=image.png&originHeight=432&originWidth=618&size=110172&status=done&width=618)\n\n\n<a name=\"30Cx3\"></a>\n# 共享内存并发机制\n<a name=\"OFEOj\"></a>\n## Lock\n<a name=\"OKldk\"></a>\n## WaitGroup\n相当于Java的join\n<a name=\"49kQI\"></a>\n# CSP并发机制\n<a name=\"58HdC\"></a>\n## CSP vs Actor\n\n- 和Actor的直接通讯不同，CSP模式是通过Channel进行通讯的，更松耦合一些\n- Go中Channel是有容量限制并且独立于处理Goroutine，而如Erlang，Actor模式中的mailbox容量是无限的，接收进程也总是被动地处理消息。\n<a name=\"xvZt3\"></a>\n## Channel\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png#align=left&display=inline&height=910&name=image.png&originHeight=910&originWidth=1703&size=565338&status=done&width=1703)<br />两种情况：一种是一直等待，一种Buffered Channel ，更松耦合的Channel，消息发送方可以在容量没满的时候一直放，满了之后需要等待。对于接收方来说，只要Channel内有消息就可以一直接收。\n\n<a name=\"2SBcu\"></a>\n# 多路选择和超时\n<a name=\"sLxEu\"></a>\n## select\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png#align=left&display=inline&height=301&name=image.png&originHeight=301&originWidth=861&size=79632&status=done&width=861)<br />运行到select时，当任一个事件准备好了，就可以对应响应。当不想一直等待某事件时，可以进行超时控制。\n\n<a name=\"SkpQa\"></a>\n# channel的关闭和广播\n解决怎么知道channel数据完了的问题\n<a name=\"qC5Nf\"></a>\n## channel的关闭\n\n- 向关闭的channel发送数据，会导致panic\n- v,ok<-ch；ok为bool值，true表示正常接收，false表示通道关闭\n- 所有的channel接收者都会在channel关闭时，立即从阻塞等待中返回且上述ok值为false。这个广播机制常被利用，进行向多个订阅者发送信号，如：退出信号。\n\n<a name=\"BOlOq\"></a>\n# 任务的取消\n\n<a name=\"PIyuM\"></a>\n# Context与任务取消\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png#align=left&display=inline&height=372&name=image.png&originHeight=298&originWidth=786&size=58395&status=done&width=982.4999853596094)\n\n<a name=\"444Se\"></a>\n## Context\n\n- 根Context：通过context.Background()创建\n- 子Context：context.WithCancel(parentContext)创建\n- ctx,cancel：context.WithCancel(context.Background())\n- 当前Context被取消时，基于他的子context也会被取消\n- 接收取消通知<-ctx.Done()\n\n还有一些其他的方法\n\n<a name=\"jDWbp\"></a>\n# 典型并发任务\n<a name=\"2KmYh\"></a>\n## 只运行一次（常见的并发任务）\n在常见的多任务环境下，只执行一次。单例模式（懒汉式，线程安全）\n\n```go\ntype Singleton struct {\n\n}\n\nvar singleInstance *Singleton\nvar once sync.Once\n\nfunc GetSingletonObj() *Singleton{\n\tonce.Do(func() {    //传入创建方法\n\t\tfmt.Println(\"Create Obj\")\n\t\tsingleInstance=new(Singleton)\n\t})\n\treturn singleInstance\n}\n\n```\n\n<a name=\"kGIsw\"></a>\n## 所需任意任务完成\n<a name=\"YYXIC\"></a>\n## 所有任务完成\n<a name=\"jgefL\"></a>\n## 对象池\n数据库连接，网络连接，经常将这些对象池化，避免重复创建。\n<a name=\"tAhWo\"></a>\n## sync.pool对象缓存\n从名字来看，像是go语言提供的池。其实是对象的缓存<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png#align=left&display=inline&height=517&name=image.png&originHeight=414&originWidth=846&size=118933&status=done&width=1057.4999842420223)\n\n- 如果私有对象不存在则保存为私有对象\n- 如果私有对象存在，就放入当前Processor子池的共享池中\n\n使用：<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png#align=left&display=inline&height=341&name=image.png&originHeight=273&originWidth=497&size=37422&status=done&width=621.2499907426537)\n\n**sync.pool对象的生命周期---**sync.pool不能作为对象池的原因\n\n- GC会清除sync.pool缓存的对象\n- sync.pool对象的缓存有效期为下一次GC之前\n\n总结：\n\n- 适合于通过复用，降低复杂对象的创建和GC代价\n- 协程安全，会有锁的开销\n- 声明周期受GC影响，不适合于做连接池等，需自己管理生命周期资源的池化\n- 所以具体要看锁的开销大，还是初始化的开销大\n\n<a name=\"UbsS7\"></a>\n# 测试\n<a name=\"FECf9\"></a>\n## 单元测试\n表格测试\n<a name=\"cOhz8\"></a>\n### 内置单元测试框架\n\n- Fail，Error：该测试失败，该测试继续，其他测试继续执行\n- FailNow，Fatal：该测试失败，该测试中止，其他测试继续执行\n\n代码覆盖率\n<a name=\"Z0rO4\"></a>\n## Benchmark\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png#align=left&display=inline&height=491&name=image.png&originHeight=393&originWidth=679&size=77590&status=done&width=848.7499873526397)<br />以Benchmark开头，参数类型稍有不同。<br />通过ResetTimer和StopTimer将测试代码隔开\n\n命令行下运行：\n\n\n<a name=\"o10fu\"></a>\n## BBD\nBehavior Driven Development<br />常用框架：goconvey\n\n<a name=\"1pJFI\"></a>\n## 反射编程\n\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png#align=left&display=inline&height=390&name=image.png&originHeight=312&originWidth=820&size=64732&status=done&width=1024.99998472631)\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png#align=left&display=inline&height=356&name=image.png&originHeight=285&originWidth=755&size=35453&status=done&width=943.7499859370294)\n\n\n\n\n<a name=\"yvkPS\"></a>\n## 万能程序\nDeepEqual<br />比较切片和map<br />与配置相关的，要求灵活性和复用性时，可以<br />反射的\n\n<a name=\"KEsq1\"></a>\n## 不安全编程\nunsafe，一般涉及到库的交互，与c语言交互。<br />“不安全”行为危险性：Go语言中不支持强制类型转换。下列操作看似可以，实际不能转换，而且实际使用起来很危险。\n\n```\ni:=10\nf:=*(*floa64)(unsafe.Pointer(&i))\n```\n\n场景2：用到内置的Atomic操作，指针原子操作，并发读写\n\n<a name=\"KmB4n\"></a>\n# 架构模式\n<a name=\"dsFK1\"></a>\n## Pipe-Filter架构\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png#align=left&display=inline&height=510&name=image.png&originHeight=408&originWidth=782&size=86362&status=done&width=977.4999854341152)\n\n- 非常适合与数据处理及数据分析系统![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png#align=left&display=inline&height=474&name=image.png&originHeight=379&originWidth=690&size=86777&status=done&width=862.4999871477487)\n<a name=\"UVtCE\"></a>\n## micro kernel\n特点：易于拓展，错误隔离，保持架构一致性<br />要点：\n\n- 内核包含公共流程或通用逻辑\n- 将可变成或可扩展部分规划为扩展点\n- 抽象扩展点行为，定义接口\n- 利用插件进行扩展\n\n生产过程任务的开发\n<a name=\"N5rRp\"></a>\n## 内置json解析\n远程过程调用等过程中，会用json，以及在配置文件中，很多使用json\n\n\n<a name=\"RFIdh\"></a>\n## easyjson\ngo内置的，一般适用于配置文件解析，对于qps较高，运用了反射，效率较低。尽量使用高性能的json解析\n\n<a name=\"wincH\"></a>\n## HTTP服务\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png#align=left&display=inline&height=442&name=image.png&originHeight=354&originWidth=862&size=103367&status=done&width=1077.499983943999)<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png#align=left&display=inline&height=445&name=image.png&originHeight=356&originWidth=771&size=101595&status=done&width=963.7499856390061)\n\n\n<a name=\"s0G6x\"></a>\n## 构建Restful服务\n更好的router，httprouter<br />面向资源的架构（Resource Oriented Architecture）\n\n<a name=\"TpHAz\"></a>\n## 性能分析工具\n\n\n\n\n\n\n学习函数式编程：《计算机程序的构造和解释》functional programming<br />《Restful Web Service》<br />《Go程序设计语言》<br />《面向模式的软件架构》1,2,3本\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>title: </span>go语言学习-极客时间</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>date: </span>2019-05-07 11:25:46</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: Go</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [Go,学习]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22Wlkoq%22%7D\" id=\"Wlkoq\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"GHSXx\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">第一个go程序</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>go语言主函数没有返回值，需要使用os包， <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">os.exit()</code> ，也不能直接函数传参。</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"ZC31x\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">变量、常量和其他语言的区别</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>赋值可以自动类型推断： <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">a:=1</code> ，怎么方便怎么来就行</li><li>快速连续赋值</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22const%20(%5Cn%5CtMonday%3Ditoa%2B1%5Cn%20%20Tuesday%5Cn%20%20Wednesday%5Cn)%5Cn%5Cnconst(%5Cn%5CtOpen%3D1%3C%3Citoa%5Cn%20%20Close%5Cn%20%20Pending%5Cn)%22%2C%22id%22%3A%22CRtoU%22%7D\" id=\"CRtoU\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const (\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    Monday=itoa+1\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Tuesday\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Wednesday\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const(\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    Open=1&lt;&lt;itoa\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Close\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Pending\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">)</span></span></pre></div></div></div><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><h1 id=\"0WEDs\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">运算符</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>算数运算符：没有前置的++、--</li><li>比较运算符：用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">==</code> 比较时，相同维数的数组可以比较</li><li>逻辑运算符</li><li>位运算符： <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&amp;^</code> ：按位清零</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%221%20%26%5E%200%20--1%5Cn1%26%5E%201%20--0%5Cn0%26%5E1%20--0%5Cn0%26%5E0%20--0%22%2C%22id%22%3A%22BN0fm%22%7D\" id=\"BN0fm\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1 &amp;^ 0 --1\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1&amp;^ 1 --0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0&amp;^1 --0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0&amp;^0 --0</span></span></pre></div></div></div><h1 id=\"SEhok\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">条件和循环</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>循环：只支持 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">for</code> ，并且没有括号，while条件的写法为</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22for%20n%3C5%7B%5Cn%5Ctn%2B%2B%5Cn%20%20fmt.Println(n)%5Cn%7D%22%2C%22id%22%3A%229M9Wv%22%7D\" id=\"9M9Wv\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for n&lt;5{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    n++\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  fmt.Println(n)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>条件：条件一定要是个布尔值或表达式。支持在if语句中对变量赋值</li><li>switch条件：条件表达式不限制为常量或者整数；单个case中，可以出现多个结果选项，使用逗号分隔；不需要break；可以不设定switch之后的条件表达式</li></ul><h1 id=\"gwMfp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">数组和切片</h1><h2 id=\"zr8tw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">数组</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>数组的声明：声明同时初始化：`arr3:=[...]int{<span style=\"color: #0000ff;\">1</span>,<span style=\"color: #0000ff;\">3</span>,<span style=\"color: #0000ff;\">4</span>,<span style=\"color: #0000ff;\">5</span>} ` &nbsp;</li><li> 数组的遍历</li><li>数组截取：a[index_begin(包含),index_end(不包含)]</li></ul><h2 id=\"49EoL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">切片</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>切片的声明方式：与数组的声明有点相似</li></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22var%20s0%20%5B%5Dint%5Cns1%3A%3D%5B%5Dint%7B%7D%5Cns2%3A%3D%5B%5Dint%7B1%2C2%2C3%7D%5Cns2%3A%3Dmake(%5B%5Dint%2C2%2C4)%20%20%2F%2F(%5B%5Dtype%2Clen%2Ccap)%20%20len%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BC%9A%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E9%9B%B6%E5%80%BC%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20cap%E4%B8%AD%E5%85%B6%E5%AE%83%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%22%2C%22id%22%3A%22Veqag%22%7D\" id=\"Veqag\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">var s0 []int\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">s1:=[]int{}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">s2:=[]int{1,2,3}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">s2:=make([]int,2,4)  //([]type,len,cap)  len个元素会被初始化为零值，\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                       cap中其它未初始化的元素不能访问</span></span></pre></div></div></div><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><li>切片的增长方式：类似于c++的vector。</li><li>切片共享存储结构：切片截取后，计算cap得到的结果。其实切片截取，指向的是内部共享的切片存储空间。所以修改截取的切片的数据，其他截取的相同区域也会发生改变。这是一个容易出错的问题。</li></ul><h2 id=\"1gHlK\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">切片和数组的区别</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>容量是否可伸缩</li><li>是否可以进行比较</li></ul><h1 id=\"on0MB\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">Map基础</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><span style=\"background-color: transparent;\">Map声明方式</span></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22m%3A%3Dmap%5Bstring%5Dint%7B%5C%22one%5C%22%3A1%2C%5C%22two%5C%22%3A2%2C%5C%22three%5C%22%3A3%7D%5Cnm1%3A%3Dmap%5Bstring%5Dint%7B%7D%5Cnm1%5B%5C%22one%5C%22%5D%3D1%5Cnm2%3A%3Dmake(map%5Bstring%5Dint%2C10)%20%20%2F%2F10%E8%A1%A8%E7%A4%BA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84cap%2C%E4%B8%8D%E9%9C%80%E8%A6%81%E5%88%9D%E5%A7%8B%E5%8C%96len%22%2C%22id%22%3A%22SxFdF%22%7D\" id=\"SxFdF\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">m:=map[string]int{\"one\":1,\"two\":2,\"three\":3}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">m1:=map[string]int{}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">m1[\"one\"]=1\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">m2:=make(map[string]int,10)  //10表示初始化的cap,不需要初始化len</span></span></pre></div></div></div><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>元素访问：当访问的key不存在时，仍然会返回零值，编程时需要根据nil来判断元素是否存在</li></ul><h1 id=\"hmFCq\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">Map与工厂模式</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>Map的value可以是一个方法</li><li>与Go的Dock type接口方式一起，可以方便的实现单一方法对象的工厂模式</li><li>Go内置集合中没有Set，可以通过map实现` mySet:=<strong>map</strong>[int]bool{} ` &nbsp; </li></ul><h1 id=\"3XQVx\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">字符串</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>string是数据类型，不是引用或指针类型。<span>零值不是空，而是空字符串。</span></li><li>string是只读的byte slice，不能重复赋值。len函数可以表示它所包含的byte数</li><li>string的byte数组可以存放任何数据</li></ul><h2 id=\"aSMYD\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Unicode和UTF-8</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>Unicode是一种字符集（code point）</li><li>UTF-8是Unicode的存储实现（转换为）</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png%22%2C%22originWidth%22%3A671%2C%22originHeight%22%3A398%2C%22name%22%3A%22image.png%22%2C%22size%22%3A46907%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A456%2C%22height%22%3A270%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 456px; height: 270px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"gy3wV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">Go语言的函数</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>函数可以返回多个值</li><li>所有参数都是值传递：slice，map，channel会有传引用的错觉</li><li>函数可以作为变量的值</li><li>函数可以作为参数和返回值</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"5TwaL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">可变参数及defer</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>延迟执行函数：defer。类似于其他语言中的finally，主要作用是最后关闭一些资源或者关闭一些锁</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"QNCoJ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">行为的定义和实现</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"8hlP5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">封装数据和行为</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20Employee%20struct%7B%5Cn%5CtId%20string%5Cn%20%20Name%20string%5Cn%20%20Age%20int%5Cn%7D%5Cn%E5%AE%9E%E4%BE%8B%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%5Cne%3A%3DEmployee%7B%5C%220%5C%22%2C%5C%22Bob%5C%22%2C20%7D%5Cne1%3A%3DEmployee%7BName%3A%5C%22Mike%5C%22%2CAge%3A30%7D%5Cne2%3A%3Dnew(Employee)%20%20%2F%2F%E8%BF%99%E9%87%8C%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%8C%87%E9%92%88%5Cne2.Id%3D%5C%222%5C%22%20%20%2F%2F%E9%80%9A%E8%BF%87%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%8C%87%E9%92%88%E8%AE%BF%E9%97%AE%E6%8C%87%E9%92%88%E4%B8%8D%E9%9C%80%E8%A6%81%E2%80%9C-%3E%E2%80%9D%22%2C%22id%22%3A%22PeBnD%22%7D\" id=\"PeBnD\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type Employee struct{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    Id string\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Name string\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Age int\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">实例的创建和初始化\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e:=Employee{\"0\",\"Bob\",20}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e1:=Employee{Name:\"Mike\",Age:30}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e2:=new(Employee)  //这里返回的是实例的指针\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e2.Id=\"2\"  //通过实例的指针访问指针不需要“-&gt;”</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"0w95L\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">行为（方法）定义</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20(e%20Employee)String1()%20string%7B%5Cn%5Ctreturn%20fmt.Sprintf(%5C%22ID%3A%25s-Name%3A%25s-Age%3A%25d%5C%22%2Ce.Id%2Ce.Name%2Ce.Age)%5Cn%7D%5Cn%5Cn%2F%2F%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8Ec%2B%2B%E7%9A%84%E5%BC%95%E7%94%A8%5Cnfunc%20(e%20*Employee)String()%20string%7B%5Cn%5Ctreturn%20fmt.Sprintf(%5C%22ID%3A%25s-Name%3A%25s-Age%3A%25d%5C%22%2Ce.Id%2Ce.Name%2Ce.Age)%5Cn%7D%22%2C%22id%22%3A%22Vfv3i%22%7D\" id=\"Vfv3i\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func (e Employee)String1() string{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return fmt.Sprintf(\"ID:%s-Name:%s-Age:%d\",e.Id,e.Name,e.Age)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//推荐使用的方式，类似于c++的引用\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func (e *Employee)String() string{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return fmt.Sprintf(\"ID:%s-Name:%s-Age:%d\",e.Id,e.Name,e.Age)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"sTcmz\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">Go语言的相关接口</h1><h2 id=\"VSi4q\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Duck Type</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">方法签名是一样的，就认为是这样的</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>接口是非入侵性的，实现不依赖于接口定义</li><li>接口的定义可以包含在接口使用者包内</li></ul><h2 id=\"8FFfL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">接口变量</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png%22%2C%22originWidth%22%3A701%2C%22originHeight%22%3A338%2C%22name%22%3A%22image.png%22%2C%22size%22%3A40266%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A701%2C%22height%22%3A338%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 701px; height: 338px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"cvQdN\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">自定义类型</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20IntConv%20func%20(op%20int)%20int%22%2C%22id%22%3A%22zeDxa%22%7D\" id=\"zeDxa\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type IntConv func (op int) int</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"70UD5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">扩展与复用</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"1sY91\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">不一样的接口类型，一样的多态</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br><span data-lake-element=\"cursor\"></span></p><h2 id=\"j94PF\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">空接口与断言</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>空接口可以表示任何类型</li><li>通过断言来将空接口转换为制定类型 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">v,ok:=p.(int) //ok=true时为转换成功</code>&nbsp;</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"xDFda\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Go接口最佳实践</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>倾向于使用小的接口定义，很多接口只包含一个方法。实现的负担较小。</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22Type%20Reader%20interface%7B%5Cn%5CtRead(p%20%5B%5Dbyte)(n%20int%2Cerr%20error)%5Cn%7D%5CnType%20Writer%20interface%7B%5Cn%5CtWrite(p%20%5B%5Dbyte)(n%20int%2Cerr%20error)%5Cn%7D%22%2C%22id%22%3A%22O7ZGt%22%7D\" id=\"O7ZGt\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Type Reader interface{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    Read(p []byte)(n int,err error)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Type Writer interface{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    Write(p []byte)(n int,err error)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><li>较大的接口定义，可以由多个小接口定义组合而成。</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22Type%20ReadWrite%20interface%7B%5Cn%5CtReader%5Cn%20%20Writer%5Cn%7D%22%2C%22id%22%3A%222qY5U%22%7D\" id=\"2qY5U\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Type ReadWrite interface{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    Reader\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  Writer\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>只依赖于必要功能的最小接口，方法才能更多的被复用</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20StoreData(reader%20Reader)%20error%7B%7D%22%2C%22id%22%3A%22bnhb0%22%7D\" id=\"bnhb0\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func StoreData(reader Reader) error{}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"KwICQ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">编写好的错误处理</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>没有异常机制</li><li>error类型实现了error接口</li><li>可以通过errors.New来快速创建错误实例</li></ul><h1 id=\"ZeszK\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">panic和recover</h1><h2 id=\"W2cvc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">panic</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>panic用于不可恢复的错误</li><li>panic退出前会执行defer指定的内容</li></ul><h2 id=\"hUDIy\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">panic vs os.Exit</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>os.Exit退出时不会调用defer指定的函数</li><li>os.Exit退出时不会输出当前调用栈信息</li></ul><h2 id=\"htxUf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">recover</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22defer%20func()%7B%5Cn%5Ctif%20err%3A%3Drecover()%3Berr!%3Dnil%7B%5Cn%20%20%5Ct%2F%2F%E6%81%A2%E5%A4%8D%E9%94%99%E8%AF%AF%5Cn%20%20%7D%5Cn%7D()%22%2C%22id%22%3A%22CxpYD%22%7D\" id=\"CxpYD\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">defer func(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if err:=recover();err!=nil{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    //恢复错误\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}()</span></span></pre></div></div></div><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>不要强制恢复错误，有的时候“Let it crash”可能更好，让程序重启来恢复。</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"GXKen\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">构建可复用的模块（包）</h1><h2 id=\"Ps2yh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">package</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>基本复用模块单元：以<strong>首字母大写</strong>来表名可被包外代码访问</li><li>代码在package可以和所在的目录了不一致（相对于Java而言）</li><li>同一目录里的Go代码的package要保持一致</li></ul><h2 id=\"32DTD\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">init方法</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>在main被执行前，所有依赖的package的init方法都会被执行</li><li>不同包的init函数按照包导入的依赖关系决定执行顺序</li><li>每个包可以有多个init函数</li><li>包的每个源文件也可以有多个init函数，比较特殊</li></ul><h2 id=\"CPKNr\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">go get</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>通过go get来获取远程依赖</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22go%20get%20-u%20%E5%BC%BA%E5%88%B6%E4%BB%8E%E7%BD%91%E7%BB%9C%E6%9B%B4%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BE%9D%E8%B5%96%22%2C%22id%22%3A%22NICDd%22%7D\" id=\"NICDd\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">go get -u 强制从网络更新远程依赖</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>注意代码在Github上的组织形式，以适应go get：直接以代码路径开始，不要有src</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"uCTgI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">依赖管理</h1><h2 id=\"na3Of\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Go未解决的依赖问题</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>同一环境下，不同项目使用同一包的不同版本</li><li>无法管理对包的特定版本的依赖</li></ul><h2 id=\"X32MI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">vendor路径</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">Go1.5 release版本，vendor目录被添加到除了GOPATH和GOROOT以外的依赖目录查找方案。查找依赖包路径的解决方案：</p><ol start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>当前包下的vendor目录</li><li>向上级目录查找，直到找到src下的vendor目录</li><li>在GOPATH下面查找依赖包</li><li>在GOROOT目录下查找</li></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其他第三方依赖管理工具：godep，glide，<strong>dep</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><br></strong></p><h1 id=\"L5ePp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">协程机制</h1><h2 id=\"Ph7TU\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">线程vs协程</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>创建时默认的stack大小：JAVA 1M vs Goroutine 2K</li><li>和KSE（Kernel Space Entity）：java Thread是1:1；GO M:N</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png%22%2C%22originWidth%22%3A618%2C%22originHeight%22%3A432%2C%22name%22%3A%22image.png%22%2C%22size%22%3A110172%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A618%2C%22height%22%3A432%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 618px; height: 432px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"30Cx3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">共享内存并发机制</h1><h2 id=\"OFEOj\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Lock</h2><h2 id=\"OKldk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">WaitGroup</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">相当于Java的join</p><h1 id=\"49kQI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">CSP并发机制</h1><h2 id=\"58HdC\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">CSP vs Actor</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>和Actor的直接通讯不同，CSP模式是通过Channel进行通讯的，更松耦合一些</li><li>Go中Channel是有容量限制并且独立于处理Goroutine，而如Erlang，Actor模式中的mailbox容量是无限的，接收进程也总是被动地处理消息。</li></ul><h2 id=\"xvZt3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Channel</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png%22%2C%22originWidth%22%3A1703%2C%22originHeight%22%3A910%2C%22name%22%3A%22image.png%22%2C%22size%22%3A565338%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1703%2C%22height%22%3A910%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 416px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">两种情况：一种是一直等待，一种Buffered Channel ，更松耦合的Channel，消息发送方可以在容量没满的时候一直放，满了之后需要等待。对于接收方来说，只要Channel内有消息就可以一直接收。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"2SBcu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">多路选择和超时</h1><h2 id=\"sLxEu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">select</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png%22%2C%22originWidth%22%3A861%2C%22originHeight%22%3A301%2C%22name%22%3A%22image.png%22%2C%22size%22%3A79632%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A861%2C%22height%22%3A301%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 272px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">运行到select时，当任一个事件准备好了，就可以对应响应。当不想一直等待某事件时，可以进行超时控制。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"SkpQa\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">channel的关闭和广播</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">解决怎么知道channel数据完了的问题</p><h2 id=\"qC5Nf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">channel的关闭</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>向关闭的channel发送数据，会导致panic</li><li>v,ok&lt;-ch；ok为bool值，true表示正常接收，false表示通道关闭</li><li>所有的channel接收者都会在channel关闭时，立即从阻塞等待中返回且上述ok值为false。这个广播机制常被利用，进行向多个订阅者发送信号，如：退出信号。</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"BOlOq\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">任务的取消</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"PIyuM\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">Context与任务取消</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png%22%2C%22originWidth%22%3A786%2C%22originHeight%22%3A298%2C%22name%22%3A%22image.png%22%2C%22size%22%3A58395%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A982.4999853596094%2C%22height%22%3A372%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 295px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"444Se\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Context</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>根Context：通过context.Background()创建</li><li>子Context：context.WithCancel(parentContext)创建</li><li>ctx,cancel：context.WithCancel(context.Background())</li><li>当前Context被取消时，基于他的子context也会被取消</li><li>接收取消通知&lt;-ctx.Done()</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">还有一些其他的方法</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"jDWbp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">典型并发任务</h1><h2 id=\"2KmYh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">只运行一次（常见的并发任务）</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">在常见的多任务环境下，只执行一次。单例模式（懒汉式，线程安全）</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20Singleton%20struct%20%7B%5Cn%5Cn%7D%5Cn%5Cnvar%20singleInstance%20*Singleton%5Cnvar%20once%20sync.Once%5Cn%5Cnfunc%20GetSingletonObj()%20*Singleton%7B%5Cn%5Ctonce.Do(func()%20%7B%20%20%20%20%2F%2F%E4%BC%A0%E5%85%A5%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95%5Cn%5Ct%5Ctfmt.Println(%5C%22Create%20Obj%5C%22)%5Cn%5Ct%5CtsingleInstance%3Dnew(Singleton)%5Cn%5Ct%7D)%5Cn%5Ctreturn%20singleInstance%5Cn%7D%5Cn%22%2C%22id%22%3A%22ReUd8%22%7D\" id=\"ReUd8\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type Singleton struct {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">var singleInstance *Singleton\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">var once sync.Once\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func GetSingletonObj() *Singleton{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    once.Do(func() {    //传入创建方法\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        fmt.Println(\"Create Obj\")\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        singleInstance=new(Singleton)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    })\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return singleInstance\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"kGIsw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">所需任意任务完成</h2><h2 id=\"YYXIC\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">所有任务完成</h2><h2 id=\"jgefL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">对象池</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">数据库连接，网络连接，经常将这些对象池化，避免重复创建。</p><h2 id=\"tAhWo\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">sync.pool对象缓存</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">从名字来看，像是go语言提供的池。其实是对象的缓存</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png%22%2C%22originWidth%22%3A846%2C%22originHeight%22%3A414%2C%22name%22%3A%22image.png%22%2C%22size%22%3A118933%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1057.4999842420223%2C%22height%22%3A517%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 380px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>如果私有对象不存在则保存为私有对象</li><li>如果私有对象存在，就放入当前Processor子池的共享池中</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">使用：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png%22%2C%22originWidth%22%3A497%2C%22originHeight%22%3A273%2C%22name%22%3A%22image.png%22%2C%22size%22%3A37422%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A621.2499907426537%2C%22height%22%3A341%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 621.25px; height: 341px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>sync.pool对象的生命周期---</strong><span class=\"lake-fontsize-11\" data-mce-style=\"font-size: 11px\" style=\"font-size: 14px;\">sync.pool不能作为对象池的原因</span></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>GC会清除<span class=\"lake-fontsize-11\" data-mce-style=\"font-size: 11px\" style=\"font-size: 14px;\">sync.pool</span>缓存的对象</li><li><span class=\"lake-fontsize-11\" data-mce-style=\"font-size: 11px\" style=\"font-size: 14px;\">sync.pool</span>对象的缓存有效期为下一次GC之前</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">总结：</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>适合于通过复用，降低复杂对象的创建和GC代价</li><li>协程安全，会有锁的开销</li><li>声明周期受GC影响，不适合于做连接池等，需自己管理生命周期资源的池化</li><li>所以具体要看锁的开销大，还是初始化的开销大</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"UbsS7\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">测试</h1><h2 id=\"FECf9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">单元测试</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">表格测试</p><h3 id=\"cOhz8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">内置单元测试框架</h3><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>Fail，Error：该测试失败，该测试继续，其他测试继续执行</li><li>FailNow，Fatal：该测试失败，该测试中止，其他测试继续执行</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">代码覆盖率</p><h2 id=\"Z0rO4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Benchmark</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png%22%2C%22originWidth%22%3A679%2C%22originHeight%22%3A393%2C%22name%22%3A%22image.png%22%2C%22size%22%3A77590%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A848.7499873526397%2C%22height%22%3A491%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 450px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">以Benchmark开头，参数类型稍有不同。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">通过ResetTimer和StopTimer将测试代码隔开</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">命令行下运行：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22%22%2C%22code%22%3A%22%22%2C%22id%22%3A%222Zn5M%22%7D\" id=\"2Zn5M\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"o10fu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">BBD</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">Behavior Driven Development</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">常用框架：goconvey</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"1pJFI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">反射编程</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png%22%2C%22originWidth%22%3A820%2C%22originHeight%22%3A312%2C%22name%22%3A%22image.png%22%2C%22size%22%3A64732%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1024.99998472631%2C%22height%22%3A390%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 296px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png%22%2C%22originWidth%22%3A755%2C%22originHeight%22%3A285%2C%22name%22%3A%22image.png%22%2C%22size%22%3A35453%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A943.7499859370294%2C%22height%22%3A356%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 293px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"yvkPS\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">万能程序</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DeepEqual</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">比较切片和map</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">与配置相关的，要求灵活性和复用性时，可以</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">反射的</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"KEsq1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">不安全编程</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">unsafe，一般涉及到库的交互，与c语言交互。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">“不安全”行为危险性：Go语言中不支持强制类型转换。下列操作看似可以，实际不能转换，而且实际使用起来很危险。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22i%3A%3D10%5Cnf%3A%3D*(*floa64)(unsafe.Pointer(%26i))%22%2C%22id%22%3A%22TSgk0%22%7D\" id=\"TSgk0\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i:=10\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">f:=*(*floa64)(unsafe.Pointer(&amp;i))</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">场景2：用到内置的Atomic操作，指针原子操作，并发读写</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"KmB4n\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">架构模式</h1><h2 id=\"dsFK1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Pipe-Filter架构</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png%22%2C%22originWidth%22%3A782%2C%22originHeight%22%3A408%2C%22name%22%3A%22image.png%22%2C%22size%22%3A86362%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A977.4999854341152%2C%22height%22%3A510%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 406px; visibility: visible;\"></span></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>非常适合与数据处理及数据分析系统<span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png%22%2C%22originWidth%22%3A690%2C%22originHeight%22%3A379%2C%22name%22%3A%22image.png%22%2C%22size%22%3A86777%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A862.4999871477487%2C%22height%22%3A474%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 752px; height: 413px; visibility: visible;\"></span></li></ul><h2 id=\"UVtCE\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">micro kernel</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span style=\"background-color: transparent;\">特点：易于拓展，错误隔离，保持架构一致性</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">要点：</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>内核包含公共流程或通用逻辑</li><li>将可变成或可扩展部分规划为扩展点</li><li>抽象扩展点行为，定义接口</li><li>利用插件进行扩展</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">生产过程任务的开发</p><h2 id=\"N5rRp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">内置json解析</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">远程过程调用等过程中，会用json，以及在配置文件中，很多使用json</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"RFIdh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">easyjson</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">go内置的，一般适用于配置文件解析，对于qps较高，运用了反射，效率较低。尽量使用高性能的json解析</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"wincH\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">HTTP服务</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png%22%2C%22originWidth%22%3A862%2C%22originHeight%22%3A354%2C%22name%22%3A%22image.png%22%2C%22size%22%3A103367%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1077.499983943999%2C%22height%22%3A442%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 319px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png%22%2C%22originWidth%22%3A771%2C%22originHeight%22%3A356%2C%22name%22%3A%22image.png%22%2C%22size%22%3A101595%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A963.7499856390061%2C%22height%22%3A445%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"width: 778px; height: 359px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"s0G6x\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">构建Restful服务</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">更好的router，httprouter</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">面向资源的架构（Resource Oriented Architecture）</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"TpHAz\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">性能分析工具</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">学习函数式编程：《计算机程序的构造和解释》functional programming</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">《Restful Web Service》</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">《Go程序设计语言》</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">《面向模式的软件架构》1,2,3本</p></div>",
    "body_lake": "<!doctype lake><p><span>title: </span>go语言学习-极客时间</p><p><span>date: </span>2019-05-07 11:25:46</p><p>categories: Go</p><p>tags: [Go,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22Wlkoq%22%7D\"></card><p><br /></p><h1 id=\"GHSXx\">第一个go程序</h1><ul><li>go语言主函数没有返回值，需要使用os包， <code>os.exit()</code> ，也不能直接函数传参。</li></ul><p><br /></p><h1 id=\"ZC31x\">变量、常量和其他语言的区别</h1><ul><li>赋值可以自动类型推断： <code>a:=1</code> ，怎么方便怎么来就行</li><li>快速连续赋值</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22const%20(%5Cn%5CtMonday%3Ditoa%2B1%5Cn%20%20Tuesday%5Cn%20%20Wednesday%5Cn)%5Cn%5Cnconst(%5Cn%5CtOpen%3D1%3C%3Citoa%5Cn%20%20Close%5Cn%20%20Pending%5Cn)%22%2C%22id%22%3A%22CRtoU%22%7D\"></card><ul><p><br /></p></ul><h1 id=\"0WEDs\">运算符</h1><ul><li>算数运算符：没有前置的++、--</li><li>比较运算符：用 <code>==</code> 比较时，相同维数的数组可以比较</li><li>逻辑运算符</li><li>位运算符： <code>&amp;^</code> ：按位清零</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%221%20%26%5E%200%20--1%5Cn1%26%5E%201%20--0%5Cn0%26%5E1%20--0%5Cn0%26%5E0%20--0%22%2C%22id%22%3A%22BN0fm%22%7D\"></card><h1 id=\"SEhok\">条件和循环</h1><ul><li>循环：只支持 <code>for</code> ，并且没有括号，while条件的写法为</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22for%20n%3C5%7B%5Cn%5Ctn%2B%2B%5Cn%20%20fmt.Println(n)%5Cn%7D%22%2C%22id%22%3A%229M9Wv%22%7D\"></card><ul><li>条件：条件一定要是个布尔值或表达式。支持在if语句中对变量赋值</li><li>switch条件：条件表达式不限制为常量或者整数；单个case中，可以出现多个结果选项，使用逗号分隔；不需要break；可以不设定switch之后的条件表达式</li></ul><h1 id=\"gwMfp\">数组和切片</h1><h2 id=\"zr8tw\">数组</h2><ul><li>数组的声明：声明同时初始化：`arr3:=[...]int{<span style=\"color: #0000ff;\">1</span>,<span style=\"color: #0000ff;\">3</span>,<span style=\"color: #0000ff;\">4</span>,<span style=\"color: #0000ff;\">5</span>} `  </li><li> 数组的遍历</li><li>数组截取：a[index_begin(包含),index_end(不包含)]</li></ul><h2 id=\"49EoL\">切片</h2><ul><li>切片的声明方式：与数组的声明有点相似</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22var%20s0%20%5B%5Dint%5Cns1%3A%3D%5B%5Dint%7B%7D%5Cns2%3A%3D%5B%5Dint%7B1%2C2%2C3%7D%5Cns2%3A%3Dmake(%5B%5Dint%2C2%2C4)%20%20%2F%2F(%5B%5Dtype%2Clen%2Ccap)%20%20len%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BC%9A%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E9%9B%B6%E5%80%BC%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20cap%E4%B8%AD%E5%85%B6%E5%AE%83%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%22%2C%22id%22%3A%22Veqag%22%7D\"></card><ul><p><br /></p><li>切片的增长方式：类似于c++的vector。</li><li>切片共享存储结构：切片截取后，计算cap得到的结果。其实切片截取，指向的是内部共享的切片存储空间。所以修改截取的切片的数据，其他截取的相同区域也会发生改变。这是一个容易出错的问题。</li></ul><h2 id=\"1gHlK\">切片和数组的区别</h2><ul><li>容量是否可伸缩</li><li>是否可以进行比较</li></ul><h1 id=\"on0MB\">Map基础</h1><ul><li><span style=\"background-color: transparent;\">Map声明方式</span></li></ul><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22m%3A%3Dmap%5Bstring%5Dint%7B%5C%22one%5C%22%3A1%2C%5C%22two%5C%22%3A2%2C%5C%22three%5C%22%3A3%7D%5Cnm1%3A%3Dmap%5Bstring%5Dint%7B%7D%5Cnm1%5B%5C%22one%5C%22%5D%3D1%5Cnm2%3A%3Dmake(map%5Bstring%5Dint%2C10)%20%20%2F%2F10%E8%A1%A8%E7%A4%BA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84cap%2C%E4%B8%8D%E9%9C%80%E8%A6%81%E5%88%9D%E5%A7%8B%E5%8C%96len%22%2C%22id%22%3A%22SxFdF%22%7D\"></card><ul><li>元素访问：当访问的key不存在时，仍然会返回零值，编程时需要根据nil来判断元素是否存在</li></ul><h1 id=\"hmFCq\">Map与工厂模式</h1><ul><li>Map的value可以是一个方法</li><li>与Go的Dock type接口方式一起，可以方便的实现单一方法对象的工厂模式</li><li>Go内置集合中没有Set，可以通过map实现` mySet:=<strong>map</strong>[int]bool{} `   </li></ul><h1 id=\"3XQVx\">字符串</h1><ul><li>string是数据类型，不是引用或指针类型。<span>零值不是空，而是空字符串。</span></li><li>string是只读的byte slice，不能重复赋值。len函数可以表示它所包含的byte数</li><li>string的byte数组可以存放任何数据</li></ul><h2 id=\"aSMYD\">Unicode和UTF-8</h2><ul><li>Unicode是一种字符集（code point）</li><li>UTF-8是Unicode的存储实现（转换为）</li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png%22%2C%22originWidth%22%3A671%2C%22originHeight%22%3A398%2C%22name%22%3A%22image.png%22%2C%22size%22%3A46907%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A456%2C%22height%22%3A270%7D\"></card></p><p><br /></p><h1 id=\"gy3wV\">Go语言的函数</h1><ul><li>函数可以返回多个值</li><li>所有参数都是值传递：slice，map，channel会有传引用的错觉</li><li>函数可以作为变量的值</li><li>函数可以作为参数和返回值</li></ul><p><br /></p><h1 id=\"5TwaL\">可变参数及defer</h1><ul><li>延迟执行函数：defer。类似于其他语言中的finally，主要作用是最后关闭一些资源或者关闭一些锁</li></ul><p><br /></p><h1 id=\"QNCoJ\">行为的定义和实现</h1><p><br /></p><h2 id=\"8hlP5\">封装数据和行为</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20Employee%20struct%7B%5Cn%5CtId%20string%5Cn%20%20Name%20string%5Cn%20%20Age%20int%5Cn%7D%5Cn%E5%AE%9E%E4%BE%8B%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%5Cne%3A%3DEmployee%7B%5C%220%5C%22%2C%5C%22Bob%5C%22%2C20%7D%5Cne1%3A%3DEmployee%7BName%3A%5C%22Mike%5C%22%2CAge%3A30%7D%5Cne2%3A%3Dnew(Employee)%20%20%2F%2F%E8%BF%99%E9%87%8C%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%8C%87%E9%92%88%5Cne2.Id%3D%5C%222%5C%22%20%20%2F%2F%E9%80%9A%E8%BF%87%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%8C%87%E9%92%88%E8%AE%BF%E9%97%AE%E6%8C%87%E9%92%88%E4%B8%8D%E9%9C%80%E8%A6%81%E2%80%9C-%3E%E2%80%9D%22%2C%22id%22%3A%22PeBnD%22%7D\"></card><p><br /></p><h2 id=\"0w95L\">行为（方法）定义</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20(e%20Employee)String1()%20string%7B%5Cn%5Ctreturn%20fmt.Sprintf(%5C%22ID%3A%25s-Name%3A%25s-Age%3A%25d%5C%22%2Ce.Id%2Ce.Name%2Ce.Age)%5Cn%7D%5Cn%5Cn%2F%2F%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8Ec%2B%2B%E7%9A%84%E5%BC%95%E7%94%A8%5Cnfunc%20(e%20*Employee)String()%20string%7B%5Cn%5Ctreturn%20fmt.Sprintf(%5C%22ID%3A%25s-Name%3A%25s-Age%3A%25d%5C%22%2Ce.Id%2Ce.Name%2Ce.Age)%5Cn%7D%22%2C%22id%22%3A%22Vfv3i%22%7D\"></card><p><br /></p><h1 id=\"sTcmz\">Go语言的相关接口</h1><h2 id=\"VSi4q\">Duck Type</h2><p>方法签名是一样的，就认为是这样的</p><ul><li>接口是非入侵性的，实现不依赖于接口定义</li><li>接口的定义可以包含在接口使用者包内</li></ul><h2 id=\"8FFfL\">接口变量</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png%22%2C%22originWidth%22%3A701%2C%22originHeight%22%3A338%2C%22name%22%3A%22image.png%22%2C%22size%22%3A40266%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A701%2C%22height%22%3A338%7D\"></card></p><p><br /></p><p><br /></p><h2 id=\"cvQdN\">自定义类型</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20IntConv%20func%20(op%20int)%20int%22%2C%22id%22%3A%22zeDxa%22%7D\"></card><p><br /></p><h1 id=\"70UD5\">扩展与复用</h1><p><br /></p><h1 id=\"1sY91\">不一样的接口类型，一样的多态</h1><p><br /><cursor /></p><h2 id=\"j94PF\">空接口与断言</h2><ul><li>空接口可以表示任何类型</li><li>通过断言来将空接口转换为制定类型 <code>v,ok:=p.(int) //ok=true时为转换成功</code> </li></ul><p><br /></p><h2 id=\"xDFda\">Go接口最佳实践</h2><ul><li>倾向于使用小的接口定义，很多接口只包含一个方法。实现的负担较小。</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22Type%20Reader%20interface%7B%5Cn%5CtRead(p%20%5B%5Dbyte)(n%20int%2Cerr%20error)%5Cn%7D%5CnType%20Writer%20interface%7B%5Cn%5CtWrite(p%20%5B%5Dbyte)(n%20int%2Cerr%20error)%5Cn%7D%22%2C%22id%22%3A%22O7ZGt%22%7D\"></card><ul><p><br /></p><li>较大的接口定义，可以由多个小接口定义组合而成。</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22Type%20ReadWrite%20interface%7B%5Cn%5CtReader%5Cn%20%20Writer%5Cn%7D%22%2C%22id%22%3A%222qY5U%22%7D\"></card><p><br /></p><ul><li>只依赖于必要功能的最小接口，方法才能更多的被复用</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20StoreData(reader%20Reader)%20error%7B%7D%22%2C%22id%22%3A%22bnhb0%22%7D\"></card><p><br /></p><h1 id=\"KwICQ\">编写好的错误处理</h1><ul><li>没有异常机制</li><li>error类型实现了error接口</li><li>可以通过errors.New来快速创建错误实例</li></ul><h1 id=\"ZeszK\">panic和recover</h1><h2 id=\"W2cvc\">panic</h2><ul><li>panic用于不可恢复的错误</li><li>panic退出前会执行defer指定的内容</li></ul><h2 id=\"hUDIy\">panic vs os.Exit</h2><ul><li>os.Exit退出时不会调用defer指定的函数</li><li>os.Exit退出时不会输出当前调用栈信息</li></ul><h2 id=\"htxUf\">recover</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22defer%20func()%7B%5Cn%5Ctif%20err%3A%3Drecover()%3Berr!%3Dnil%7B%5Cn%20%20%5Ct%2F%2F%E6%81%A2%E5%A4%8D%E9%94%99%E8%AF%AF%5Cn%20%20%7D%5Cn%7D()%22%2C%22id%22%3A%22CxpYD%22%7D\"></card><ul><li>不要强制恢复错误，有的时候“Let it crash”可能更好，让程序重启来恢复。</li></ul><p><br /></p><h1 id=\"GXKen\">构建可复用的模块（包）</h1><h2 id=\"Ps2yh\">package</h2><ul><li>基本复用模块单元：以<strong>首字母大写</strong>来表名可被包外代码访问</li><li>代码在package可以和所在的目录了不一致（相对于Java而言）</li><li>同一目录里的Go代码的package要保持一致</li></ul><h2 id=\"32DTD\">init方法</h2><ul><li>在main被执行前，所有依赖的package的init方法都会被执行</li><li>不同包的init函数按照包导入的依赖关系决定执行顺序</li><li>每个包可以有多个init函数</li><li>包的每个源文件也可以有多个init函数，比较特殊</li></ul><h2 id=\"CPKNr\">go get</h2><ul><li>通过go get来获取远程依赖</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22go%20get%20-u%20%E5%BC%BA%E5%88%B6%E4%BB%8E%E7%BD%91%E7%BB%9C%E6%9B%B4%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BE%9D%E8%B5%96%22%2C%22id%22%3A%22NICDd%22%7D\"></card><p><br /></p><ul><li>注意代码在Github上的组织形式，以适应go get：直接以代码路径开始，不要有src</li></ul><p><br /></p><h1 id=\"uCTgI\">依赖管理</h1><h2 id=\"na3Of\">Go未解决的依赖问题</h2><ul><li>同一环境下，不同项目使用同一包的不同版本</li><li>无法管理对包的特定版本的依赖</li></ul><h2 id=\"X32MI\">vendor路径</h2><p>Go1.5 release版本，vendor目录被添加到除了GOPATH和GOROOT以外的依赖目录查找方案。查找依赖包路径的解决方案：</p><ol start=\"1\"><li>当前包下的vendor目录</li><li>向上级目录查找，直到找到src下的vendor目录</li><li>在GOPATH下面查找依赖包</li><li>在GOROOT目录下查找</li></ol><p><br /></p><p>其他第三方依赖管理工具：godep，glide，<strong>dep</strong></p><p><strong><br /></strong></p><h1 id=\"L5ePp\">协程机制</h1><h2 id=\"Ph7TU\">线程vs协程</h2><ul><li>创建时默认的stack大小：JAVA 1M vs Goroutine 2K</li><li>和KSE（Kernel Space Entity）：java Thread是1:1；GO M:N</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png%22%2C%22originWidth%22%3A618%2C%22originHeight%22%3A432%2C%22name%22%3A%22image.png%22%2C%22size%22%3A110172%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A618%2C%22height%22%3A432%7D\"></card></p><p><br /></p><p><br /></p><h1 id=\"30Cx3\">共享内存并发机制</h1><h2 id=\"OFEOj\">Lock</h2><h2 id=\"OKldk\">WaitGroup</h2><p>相当于Java的join</p><h1 id=\"49kQI\">CSP并发机制</h1><h2 id=\"58HdC\">CSP vs Actor</h2><ul><li>和Actor的直接通讯不同，CSP模式是通过Channel进行通讯的，更松耦合一些</li><li>Go中Channel是有容量限制并且独立于处理Goroutine，而如Erlang，Actor模式中的mailbox容量是无限的，接收进程也总是被动地处理消息。</li></ul><h2 id=\"xvZt3\">Channel</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png%22%2C%22originWidth%22%3A1703%2C%22originHeight%22%3A910%2C%22name%22%3A%22image.png%22%2C%22size%22%3A565338%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1703%2C%22height%22%3A910%7D\"></card></p><p>两种情况：一种是一直等待，一种Buffered Channel ，更松耦合的Channel，消息发送方可以在容量没满的时候一直放，满了之后需要等待。对于接收方来说，只要Channel内有消息就可以一直接收。</p><p><br /></p><h1 id=\"2SBcu\">多路选择和超时</h1><h2 id=\"sLxEu\">select</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png%22%2C%22originWidth%22%3A861%2C%22originHeight%22%3A301%2C%22name%22%3A%22image.png%22%2C%22size%22%3A79632%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A861%2C%22height%22%3A301%7D\"></card></p><p>运行到select时，当任一个事件准备好了，就可以对应响应。当不想一直等待某事件时，可以进行超时控制。</p><p><br /></p><h1 id=\"SkpQa\">channel的关闭和广播</h1><p>解决怎么知道channel数据完了的问题</p><h2 id=\"qC5Nf\">channel的关闭</h2><ul><li>向关闭的channel发送数据，会导致panic</li><li>v,ok&lt;-ch；ok为bool值，true表示正常接收，false表示通道关闭</li><li>所有的channel接收者都会在channel关闭时，立即从阻塞等待中返回且上述ok值为false。这个广播机制常被利用，进行向多个订阅者发送信号，如：退出信号。</li></ul><p><br /></p><h1 id=\"BOlOq\">任务的取消</h1><p><br /></p><h1 id=\"PIyuM\">Context与任务取消</h1><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png%22%2C%22originWidth%22%3A786%2C%22originHeight%22%3A298%2C%22name%22%3A%22image.png%22%2C%22size%22%3A58395%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A982.4999853596094%2C%22height%22%3A372%7D\"></card></p><p><br /></p><h2 id=\"444Se\">Context</h2><ul><li>根Context：通过context.Background()创建</li><li>子Context：context.WithCancel(parentContext)创建</li><li>ctx,cancel：context.WithCancel(context.Background())</li><li>当前Context被取消时，基于他的子context也会被取消</li><li>接收取消通知&lt;-ctx.Done()</li></ul><p><br /></p><p>还有一些其他的方法</p><p><br /></p><h1 id=\"jDWbp\">典型并发任务</h1><h2 id=\"2KmYh\">只运行一次（常见的并发任务）</h2><p>在常见的多任务环境下，只执行一次。单例模式（懒汉式，线程安全）</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20Singleton%20struct%20%7B%5Cn%5Cn%7D%5Cn%5Cnvar%20singleInstance%20*Singleton%5Cnvar%20once%20sync.Once%5Cn%5Cnfunc%20GetSingletonObj()%20*Singleton%7B%5Cn%5Ctonce.Do(func()%20%7B%20%20%20%20%2F%2F%E4%BC%A0%E5%85%A5%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95%5Cn%5Ct%5Ctfmt.Println(%5C%22Create%20Obj%5C%22)%5Cn%5Ct%5CtsingleInstance%3Dnew(Singleton)%5Cn%5Ct%7D)%5Cn%5Ctreturn%20singleInstance%5Cn%7D%5Cn%22%2C%22id%22%3A%22ReUd8%22%7D\"></card><p><br /></p><h2 id=\"kGIsw\">所需任意任务完成</h2><h2 id=\"YYXIC\">所有任务完成</h2><h2 id=\"jgefL\">对象池</h2><p>数据库连接，网络连接，经常将这些对象池化，避免重复创建。</p><h2 id=\"tAhWo\">sync.pool对象缓存</h2><p>从名字来看，像是go语言提供的池。其实是对象的缓存</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png%22%2C%22originWidth%22%3A846%2C%22originHeight%22%3A414%2C%22name%22%3A%22image.png%22%2C%22size%22%3A118933%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1057.4999842420223%2C%22height%22%3A517%7D\"></card></p><p><br /></p><ul><li>如果私有对象不存在则保存为私有对象</li><li>如果私有对象存在，就放入当前Processor子池的共享池中</li></ul><p><br /></p><p>使用：</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png%22%2C%22originWidth%22%3A497%2C%22originHeight%22%3A273%2C%22name%22%3A%22image.png%22%2C%22size%22%3A37422%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A621.2499907426537%2C%22height%22%3A341%7D\"></card></p><p><br /></p><p><strong>sync.pool对象的生命周期---</strong><span class=\"lake-fontsize-11\">sync.pool不能作为对象池的原因</span></p><ul><li>GC会清除<span class=\"lake-fontsize-11\">sync.pool</span>缓存的对象</li><li><span class=\"lake-fontsize-11\">sync.pool</span>对象的缓存有效期为下一次GC之前</li></ul><p><br /></p><p>总结：</p><ul><li>适合于通过复用，降低复杂对象的创建和GC代价</li><li>协程安全，会有锁的开销</li><li>声明周期受GC影响，不适合于做连接池等，需自己管理生命周期资源的池化</li><li>所以具体要看锁的开销大，还是初始化的开销大</li></ul><p><br /></p><h1 id=\"UbsS7\">测试</h1><h2 id=\"FECf9\">单元测试</h2><p>表格测试</p><h3 id=\"cOhz8\">内置单元测试框架</h3><ul><li>Fail，Error：该测试失败，该测试继续，其他测试继续执行</li><li>FailNow，Fatal：该测试失败，该测试中止，其他测试继续执行</li></ul><p><br /></p><p>代码覆盖率</p><h2 id=\"Z0rO4\">Benchmark</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png%22%2C%22originWidth%22%3A679%2C%22originHeight%22%3A393%2C%22name%22%3A%22image.png%22%2C%22size%22%3A77590%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A848.7499873526397%2C%22height%22%3A491%7D\"></card></p><p>以Benchmark开头，参数类型稍有不同。</p><p>通过ResetTimer和StopTimer将测试代码隔开</p><p><br /></p><p>命令行下运行：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22%22%2C%22code%22%3A%22%22%2C%22id%22%3A%222Zn5M%22%7D\"></card><p><br /></p><h2 id=\"o10fu\">BBD</h2><p>Behavior Driven Development</p><p>常用框架：goconvey</p><p><br /></p><h2 id=\"1pJFI\">反射编程</h2><p><br /></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png%22%2C%22originWidth%22%3A820%2C%22originHeight%22%3A312%2C%22name%22%3A%22image.png%22%2C%22size%22%3A64732%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1024.99998472631%2C%22height%22%3A390%7D\"></card></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png%22%2C%22originWidth%22%3A755%2C%22originHeight%22%3A285%2C%22name%22%3A%22image.png%22%2C%22size%22%3A35453%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A943.7499859370294%2C%22height%22%3A356%7D\"></card></p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><h2 id=\"yvkPS\">万能程序</h2><p>DeepEqual</p><p>比较切片和map</p><p>与配置相关的，要求灵活性和复用性时，可以</p><p>反射的</p><p><br /></p><h2 id=\"KEsq1\">不安全编程</h2><p>unsafe，一般涉及到库的交互，与c语言交互。</p><p>“不安全”行为危险性：Go语言中不支持强制类型转换。下列操作看似可以，实际不能转换，而且实际使用起来很危险。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22i%3A%3D10%5Cnf%3A%3D*(*floa64)(unsafe.Pointer(%26i))%22%2C%22id%22%3A%22TSgk0%22%7D\"></card><p><br /></p><p>场景2：用到内置的Atomic操作，指针原子操作，并发读写</p><p><br /></p><h1 id=\"KmB4n\">架构模式</h1><h2 id=\"dsFK1\">Pipe-Filter架构</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png%22%2C%22originWidth%22%3A782%2C%22originHeight%22%3A408%2C%22name%22%3A%22image.png%22%2C%22size%22%3A86362%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A977.4999854341152%2C%22height%22%3A510%7D\"></card></p><ul><li>非常适合与数据处理及数据分析系统<card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png%22%2C%22originWidth%22%3A690%2C%22originHeight%22%3A379%2C%22name%22%3A%22image.png%22%2C%22size%22%3A86777%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A862.4999871477487%2C%22height%22%3A474%7D\"></card></li></ul><h2 id=\"UVtCE\">micro kernel</h2><p><span style=\"background-color: transparent;\">特点：易于拓展，错误隔离，保持架构一致性</span></p><p>要点：</p><ul><li>内核包含公共流程或通用逻辑</li><li>将可变成或可扩展部分规划为扩展点</li><li>抽象扩展点行为，定义接口</li><li>利用插件进行扩展</li></ul><p><br /></p><p>生产过程任务的开发</p><h2 id=\"N5rRp\">内置json解析</h2><p>远程过程调用等过程中，会用json，以及在配置文件中，很多使用json</p><p><br /></p><p><br /></p><h2 id=\"RFIdh\">easyjson</h2><p>go内置的，一般适用于配置文件解析，对于qps较高，运用了反射，效率较低。尽量使用高性能的json解析</p><p><br /></p><h2 id=\"wincH\">HTTP服务</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png%22%2C%22originWidth%22%3A862%2C%22originHeight%22%3A354%2C%22name%22%3A%22image.png%22%2C%22size%22%3A103367%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1077.499983943999%2C%22height%22%3A442%7D\"></card></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png%22%2C%22originWidth%22%3A771%2C%22originHeight%22%3A356%2C%22name%22%3A%22image.png%22%2C%22size%22%3A101595%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A963.7499856390061%2C%22height%22%3A445%7D\"></card></p><p><br /></p><p><br /></p><h2 id=\"s0G6x\">构建Restful服务</h2><p>更好的router，httprouter</p><p>面向资源的架构（Resource Oriented Architecture）</p><p><br /></p><h2 id=\"TpHAz\">性能分析工具</h2><p><br /></p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><p>学习函数式编程：《计算机程序的构造和解释》functional programming</p><p>《Restful Web Service》</p><p>《Go程序设计语言》</p><p>《面向模式的软件架构》1,2,3本</p>",
    "body_draft_lake": "<!doctype lake><p><span>title: </span>go语言学习-极客时间</p><p><span>date: </span>2019-05-07 11:25:46</p><p>categories: Go</p><p>tags: [Go,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22Wlkoq%22%7D\"></card><p><br /></p><h1 id=\"GHSXx\">第一个go程序</h1><ul><li>go语言主函数没有返回值，需要使用os包， <code>os.exit()</code> ，也不能直接函数传参。</li></ul><p><br /></p><h1 id=\"ZC31x\">变量、常量和其他语言的区别</h1><ul><li>赋值可以自动类型推断： <code>a:=1</code> ，怎么方便怎么来就行</li><li>快速连续赋值</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22const%20(%5Cn%5CtMonday%3Ditoa%2B1%5Cn%20%20Tuesday%5Cn%20%20Wednesday%5Cn)%5Cn%5Cnconst(%5Cn%5CtOpen%3D1%3C%3Citoa%5Cn%20%20Close%5Cn%20%20Pending%5Cn)%22%2C%22id%22%3A%22CRtoU%22%7D\"></card><ul><p><br /></p></ul><h1 id=\"0WEDs\">运算符</h1><ul><li>算数运算符：没有前置的++、--</li><li>比较运算符：用 <code>==</code> 比较时，相同维数的数组可以比较</li><li>逻辑运算符</li><li>位运算符： <code>&amp;^</code> ：按位清零</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%221%20%26%5E%200%20--1%5Cn1%26%5E%201%20--0%5Cn0%26%5E1%20--0%5Cn0%26%5E0%20--0%22%2C%22id%22%3A%22BN0fm%22%7D\"></card><h1 id=\"SEhok\">条件和循环</h1><ul><li>循环：只支持 <code>for</code> ，并且没有括号，while条件的写法为</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22for%20n%3C5%7B%5Cn%5Ctn%2B%2B%5Cn%20%20fmt.Println(n)%5Cn%7D%22%2C%22id%22%3A%229M9Wv%22%7D\"></card><ul><li>条件：条件一定要是个布尔值或表达式。支持在if语句中对变量赋值</li><li>switch条件：条件表达式不限制为常量或者整数；单个case中，可以出现多个结果选项，使用逗号分隔；不需要break；可以不设定switch之后的条件表达式</li></ul><h1 id=\"gwMfp\">数组和切片</h1><h2 id=\"zr8tw\">数组</h2><ul><li>数组的声明：声明同时初始化：`arr3:=[...]int{<span style=\"color: #0000ff;\">1</span>,<span style=\"color: #0000ff;\">3</span>,<span style=\"color: #0000ff;\">4</span>,<span style=\"color: #0000ff;\">5</span>} `  </li><li> 数组的遍历</li><li>数组截取：a[index_begin(包含),index_end(不包含)]</li></ul><h2 id=\"49EoL\">切片</h2><ul><li>切片的声明方式：与数组的声明有点相似</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22var%20s0%20%5B%5Dint%5Cns1%3A%3D%5B%5Dint%7B%7D%5Cns2%3A%3D%5B%5Dint%7B1%2C2%2C3%7D%5Cns2%3A%3Dmake(%5B%5Dint%2C2%2C4)%20%20%2F%2F(%5B%5Dtype%2Clen%2Ccap)%20%20len%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BC%9A%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E9%9B%B6%E5%80%BC%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20cap%E4%B8%AD%E5%85%B6%E5%AE%83%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%22%2C%22id%22%3A%22Veqag%22%7D\"></card><ul><p><br /></p><li>切片的增长方式：类似于c++的vector。</li><li>切片共享存储结构：切片截取后，计算cap得到的结果。其实切片截取，指向的是内部共享的切片存储空间。所以修改截取的切片的数据，其他截取的相同区域也会发生改变。这是一个容易出错的问题。</li></ul><h2 id=\"1gHlK\">切片和数组的区别</h2><ul><li>容量是否可伸缩</li><li>是否可以进行比较</li></ul><h1 id=\"on0MB\">Map基础</h1><ul><li><span style=\"background-color: transparent;\">Map声明方式</span></li></ul><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22m%3A%3Dmap%5Bstring%5Dint%7B%5C%22one%5C%22%3A1%2C%5C%22two%5C%22%3A2%2C%5C%22three%5C%22%3A3%7D%5Cnm1%3A%3Dmap%5Bstring%5Dint%7B%7D%5Cnm1%5B%5C%22one%5C%22%5D%3D1%5Cnm2%3A%3Dmake(map%5Bstring%5Dint%2C10)%20%20%2F%2F10%E8%A1%A8%E7%A4%BA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84cap%2C%E4%B8%8D%E9%9C%80%E8%A6%81%E5%88%9D%E5%A7%8B%E5%8C%96len%22%2C%22id%22%3A%22SxFdF%22%7D\"></card><ul><li>元素访问：当访问的key不存在时，仍然会返回零值，编程时需要根据nil来判断元素是否存在</li></ul><h1 id=\"hmFCq\">Map与工厂模式</h1><ul><li>Map的value可以是一个方法</li><li>与Go的Dock type接口方式一起，可以方便的实现单一方法对象的工厂模式</li><li>Go内置集合中没有Set，可以通过map实现` mySet:=<strong>map</strong>[int]bool{} `   </li></ul><h1 id=\"3XQVx\">字符串</h1><ul><li>string是数据类型，不是引用或指针类型。<span>零值不是空，而是空字符串。</span></li><li>string是只读的byte slice，不能重复赋值。len函数可以表示它所包含的byte数</li><li>string的byte数组可以存放任何数据</li></ul><h2 id=\"aSMYD\">Unicode和UTF-8</h2><ul><li>Unicode是一种字符集（code point）</li><li>UTF-8是Unicode的存储实现（转换为）</li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png%22%2C%22originWidth%22%3A671%2C%22originHeight%22%3A398%2C%22name%22%3A%22image.png%22%2C%22size%22%3A46907%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A456%2C%22height%22%3A270%7D\"></card></p><p><br /></p><h1 id=\"gy3wV\">Go语言的函数</h1><ul><li>函数可以返回多个值</li><li>所有参数都是值传递：slice，map，channel会有传引用的错觉</li><li>函数可以作为变量的值</li><li>函数可以作为参数和返回值</li></ul><p><br /></p><h1 id=\"5TwaL\">可变参数及defer</h1><ul><li>延迟执行函数：defer。类似于其他语言中的finally，主要作用是最后关闭一些资源或者关闭一些锁</li></ul><p><br /></p><h1 id=\"QNCoJ\">行为的定义和实现</h1><p><br /></p><h2 id=\"8hlP5\">封装数据和行为</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20Employee%20struct%7B%5Cn%5CtId%20string%5Cn%20%20Name%20string%5Cn%20%20Age%20int%5Cn%7D%5Cn%E5%AE%9E%E4%BE%8B%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%5Cne%3A%3DEmployee%7B%5C%220%5C%22%2C%5C%22Bob%5C%22%2C20%7D%5Cne1%3A%3DEmployee%7BName%3A%5C%22Mike%5C%22%2CAge%3A30%7D%5Cne2%3A%3Dnew(Employee)%20%20%2F%2F%E8%BF%99%E9%87%8C%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%8C%87%E9%92%88%5Cne2.Id%3D%5C%222%5C%22%20%20%2F%2F%E9%80%9A%E8%BF%87%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%8C%87%E9%92%88%E8%AE%BF%E9%97%AE%E6%8C%87%E9%92%88%E4%B8%8D%E9%9C%80%E8%A6%81%E2%80%9C-%3E%E2%80%9D%22%2C%22id%22%3A%22PeBnD%22%7D\"></card><p><br /></p><h2 id=\"0w95L\">行为（方法）定义</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20(e%20Employee)String1()%20string%7B%5Cn%5Ctreturn%20fmt.Sprintf(%5C%22ID%3A%25s-Name%3A%25s-Age%3A%25d%5C%22%2Ce.Id%2Ce.Name%2Ce.Age)%5Cn%7D%5Cn%5Cn%2F%2F%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8Ec%2B%2B%E7%9A%84%E5%BC%95%E7%94%A8%5Cnfunc%20(e%20*Employee)String()%20string%7B%5Cn%5Ctreturn%20fmt.Sprintf(%5C%22ID%3A%25s-Name%3A%25s-Age%3A%25d%5C%22%2Ce.Id%2Ce.Name%2Ce.Age)%5Cn%7D%22%2C%22id%22%3A%22Vfv3i%22%7D\"></card><p><br /></p><h1 id=\"sTcmz\">Go语言的相关接口</h1><h2 id=\"VSi4q\">Duck Type</h2><p>方法签名是一样的，就认为是这样的</p><ul><li>接口是非入侵性的，实现不依赖于接口定义</li><li>接口的定义可以包含在接口使用者包内</li></ul><h2 id=\"8FFfL\">接口变量</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556508509894-85f1967f-80e0-4a9e-9db7-a2b01ba96f30.png%22%2C%22originWidth%22%3A701%2C%22originHeight%22%3A338%2C%22name%22%3A%22image.png%22%2C%22size%22%3A40266%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A701%2C%22height%22%3A338%7D\"></card></p><p><br /></p><p><br /></p><h2 id=\"cvQdN\">自定义类型</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20IntConv%20func%20(op%20int)%20int%22%2C%22id%22%3A%22zeDxa%22%7D\"></card><p><br /></p><h1 id=\"70UD5\">扩展与复用</h1><p><br /></p><h1 id=\"1sY91\">不一样的接口类型，一样的多态</h1><p><br /><cursor /></p><h2 id=\"j94PF\">空接口与断言</h2><ul><li>空接口可以表示任何类型</li><li>通过断言来将空接口转换为制定类型 <code>v,ok:=p.(int) //ok=true时为转换成功</code> </li></ul><p><br /></p><h2 id=\"xDFda\">Go接口最佳实践</h2><ul><li>倾向于使用小的接口定义，很多接口只包含一个方法。实现的负担较小。</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22Type%20Reader%20interface%7B%5Cn%5CtRead(p%20%5B%5Dbyte)(n%20int%2Cerr%20error)%5Cn%7D%5CnType%20Writer%20interface%7B%5Cn%5CtWrite(p%20%5B%5Dbyte)(n%20int%2Cerr%20error)%5Cn%7D%22%2C%22id%22%3A%22O7ZGt%22%7D\"></card><ul><p><br /></p><li>较大的接口定义，可以由多个小接口定义组合而成。</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22Type%20ReadWrite%20interface%7B%5Cn%5CtReader%5Cn%20%20Writer%5Cn%7D%22%2C%22id%22%3A%222qY5U%22%7D\"></card><p><br /></p><ul><li>只依赖于必要功能的最小接口，方法才能更多的被复用</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20StoreData(reader%20Reader)%20error%7B%7D%22%2C%22id%22%3A%22bnhb0%22%7D\"></card><p><br /></p><h1 id=\"KwICQ\">编写好的错误处理</h1><ul><li>没有异常机制</li><li>error类型实现了error接口</li><li>可以通过errors.New来快速创建错误实例</li></ul><h1 id=\"ZeszK\">panic和recover</h1><h2 id=\"W2cvc\">panic</h2><ul><li>panic用于不可恢复的错误</li><li>panic退出前会执行defer指定的内容</li></ul><h2 id=\"hUDIy\">panic vs os.Exit</h2><ul><li>os.Exit退出时不会调用defer指定的函数</li><li>os.Exit退出时不会输出当前调用栈信息</li></ul><h2 id=\"htxUf\">recover</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22defer%20func()%7B%5Cn%5Ctif%20err%3A%3Drecover()%3Berr!%3Dnil%7B%5Cn%20%20%5Ct%2F%2F%E6%81%A2%E5%A4%8D%E9%94%99%E8%AF%AF%5Cn%20%20%7D%5Cn%7D()%22%2C%22id%22%3A%22CxpYD%22%7D\"></card><ul><li>不要强制恢复错误，有的时候“Let it crash”可能更好，让程序重启来恢复。</li></ul><p><br /></p><h1 id=\"GXKen\">构建可复用的模块（包）</h1><h2 id=\"Ps2yh\">package</h2><ul><li>基本复用模块单元：以<strong>首字母大写</strong>来表名可被包外代码访问</li><li>代码在package可以和所在的目录了不一致（相对于Java而言）</li><li>同一目录里的Go代码的package要保持一致</li></ul><h2 id=\"32DTD\">init方法</h2><ul><li>在main被执行前，所有依赖的package的init方法都会被执行</li><li>不同包的init函数按照包导入的依赖关系决定执行顺序</li><li>每个包可以有多个init函数</li><li>包的每个源文件也可以有多个init函数，比较特殊</li></ul><h2 id=\"CPKNr\">go get</h2><ul><li>通过go get来获取远程依赖</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22go%20get%20-u%20%E5%BC%BA%E5%88%B6%E4%BB%8E%E7%BD%91%E7%BB%9C%E6%9B%B4%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BE%9D%E8%B5%96%22%2C%22id%22%3A%22NICDd%22%7D\"></card><p><br /></p><ul><li>注意代码在Github上的组织形式，以适应go get：直接以代码路径开始，不要有src</li></ul><p><br /></p><h1 id=\"uCTgI\">依赖管理</h1><h2 id=\"na3Of\">Go未解决的依赖问题</h2><ul><li>同一环境下，不同项目使用同一包的不同版本</li><li>无法管理对包的特定版本的依赖</li></ul><h2 id=\"X32MI\">vendor路径</h2><p>Go1.5 release版本，vendor目录被添加到除了GOPATH和GOROOT以外的依赖目录查找方案。查找依赖包路径的解决方案：</p><ol start=\"1\"><li>当前包下的vendor目录</li><li>向上级目录查找，直到找到src下的vendor目录</li><li>在GOPATH下面查找依赖包</li><li>在GOROOT目录下查找</li></ol><p><br /></p><p>其他第三方依赖管理工具：godep，glide，<strong>dep</strong></p><p><strong><br /></strong></p><h1 id=\"L5ePp\">协程机制</h1><h2 id=\"Ph7TU\">线程vs协程</h2><ul><li>创建时默认的stack大小：JAVA 1M vs Goroutine 2K</li><li>和KSE（Kernel Space Entity）：java Thread是1:1；GO M:N</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556704202218-7913c997-6b91-48e2-9dc6-49b057a39342.png%22%2C%22originWidth%22%3A618%2C%22originHeight%22%3A432%2C%22name%22%3A%22image.png%22%2C%22size%22%3A110172%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A618%2C%22height%22%3A432%7D\"></card></p><p><br /></p><p><br /></p><h1 id=\"30Cx3\">共享内存并发机制</h1><h2 id=\"OFEOj\">Lock</h2><h2 id=\"OKldk\">WaitGroup</h2><p>相当于Java的join</p><h1 id=\"49kQI\">CSP并发机制</h1><h2 id=\"58HdC\">CSP vs Actor</h2><ul><li>和Actor的直接通讯不同，CSP模式是通过Channel进行通讯的，更松耦合一些</li><li>Go中Channel是有容量限制并且独立于处理Goroutine，而如Erlang，Actor模式中的mailbox容量是无限的，接收进程也总是被动地处理消息。</li></ul><h2 id=\"xvZt3\">Channel</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556705599268-5d3769a6-8c93-4827-a9c2-525810d0cc3a.png%22%2C%22originWidth%22%3A1703%2C%22originHeight%22%3A910%2C%22name%22%3A%22image.png%22%2C%22size%22%3A565338%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1703%2C%22height%22%3A910%7D\"></card></p><p>两种情况：一种是一直等待，一种Buffered Channel ，更松耦合的Channel，消息发送方可以在容量没满的时候一直放，满了之后需要等待。对于接收方来说，只要Channel内有消息就可以一直接收。</p><p><br /></p><h1 id=\"2SBcu\">多路选择和超时</h1><h2 id=\"sLxEu\">select</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1556712290363-e32d5fa7-eb01-4d32-8fed-14ae04a0042d.png%22%2C%22originWidth%22%3A861%2C%22originHeight%22%3A301%2C%22name%22%3A%22image.png%22%2C%22size%22%3A79632%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A861%2C%22height%22%3A301%7D\"></card></p><p>运行到select时，当任一个事件准备好了，就可以对应响应。当不想一直等待某事件时，可以进行超时控制。</p><p><br /></p><h1 id=\"SkpQa\">channel的关闭和广播</h1><p>解决怎么知道channel数据完了的问题</p><h2 id=\"qC5Nf\">channel的关闭</h2><ul><li>向关闭的channel发送数据，会导致panic</li><li>v,ok&lt;-ch；ok为bool值，true表示正常接收，false表示通道关闭</li><li>所有的channel接收者都会在channel关闭时，立即从阻塞等待中返回且上述ok值为false。这个广播机制常被利用，进行向多个订阅者发送信号，如：退出信号。</li></ul><p><br /></p><h1 id=\"BOlOq\">任务的取消</h1><p><br /></p><h1 id=\"PIyuM\">Context与任务取消</h1><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557062963366-c9338325-f390-4dce-ae1d-f0874f9612ba.png%22%2C%22originWidth%22%3A786%2C%22originHeight%22%3A298%2C%22name%22%3A%22image.png%22%2C%22size%22%3A58395%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A982.4999853596094%2C%22height%22%3A372%7D\"></card></p><p><br /></p><h2 id=\"444Se\">Context</h2><ul><li>根Context：通过context.Background()创建</li><li>子Context：context.WithCancel(parentContext)创建</li><li>ctx,cancel：context.WithCancel(context.Background())</li><li>当前Context被取消时，基于他的子context也会被取消</li><li>接收取消通知&lt;-ctx.Done()</li></ul><p><br /></p><p>还有一些其他的方法</p><p><br /></p><h1 id=\"jDWbp\">典型并发任务</h1><h2 id=\"2KmYh\">只运行一次（常见的并发任务）</h2><p>在常见的多任务环境下，只执行一次。单例模式（懒汉式，线程安全）</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22type%20Singleton%20struct%20%7B%5Cn%5Cn%7D%5Cn%5Cnvar%20singleInstance%20*Singleton%5Cnvar%20once%20sync.Once%5Cn%5Cnfunc%20GetSingletonObj()%20*Singleton%7B%5Cn%5Ctonce.Do(func()%20%7B%20%20%20%20%2F%2F%E4%BC%A0%E5%85%A5%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95%5Cn%5Ct%5Ctfmt.Println(%5C%22Create%20Obj%5C%22)%5Cn%5Ct%5CtsingleInstance%3Dnew(Singleton)%5Cn%5Ct%7D)%5Cn%5Ctreturn%20singleInstance%5Cn%7D%5Cn%22%2C%22id%22%3A%22ReUd8%22%7D\"></card><p><br /></p><h2 id=\"kGIsw\">所需任意任务完成</h2><h2 id=\"YYXIC\">所有任务完成</h2><h2 id=\"jgefL\">对象池</h2><p>数据库连接，网络连接，经常将这些对象池化，避免重复创建。</p><h2 id=\"tAhWo\">sync.pool对象缓存</h2><p>从名字来看，像是go语言提供的池。其实是对象的缓存</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557066107461-3144bf63-f63c-4522-b25d-af4bd721daab.png%22%2C%22originWidth%22%3A846%2C%22originHeight%22%3A414%2C%22name%22%3A%22image.png%22%2C%22size%22%3A118933%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1057.4999842420223%2C%22height%22%3A517%7D\"></card></p><p><br /></p><ul><li>如果私有对象不存在则保存为私有对象</li><li>如果私有对象存在，就放入当前Processor子池的共享池中</li></ul><p><br /></p><p>使用：</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557066277648-e57411da-71d5-4673-93bc-a82e0315284b.png%22%2C%22originWidth%22%3A497%2C%22originHeight%22%3A273%2C%22name%22%3A%22image.png%22%2C%22size%22%3A37422%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A621.2499907426537%2C%22height%22%3A341%7D\"></card></p><p><br /></p><p><strong>sync.pool对象的生命周期---</strong><span class=\"lake-fontsize-11\">sync.pool不能作为对象池的原因</span></p><ul><li>GC会清除<span class=\"lake-fontsize-11\">sync.pool</span>缓存的对象</li><li><span class=\"lake-fontsize-11\">sync.pool</span>对象的缓存有效期为下一次GC之前</li></ul><p><br /></p><p>总结：</p><ul><li>适合于通过复用，降低复杂对象的创建和GC代价</li><li>协程安全，会有锁的开销</li><li>声明周期受GC影响，不适合于做连接池等，需自己管理生命周期资源的池化</li><li>所以具体要看锁的开销大，还是初始化的开销大</li></ul><p><br /></p><h1 id=\"UbsS7\">测试</h1><h2 id=\"FECf9\">单元测试</h2><p>表格测试</p><h3 id=\"cOhz8\">内置单元测试框架</h3><ul><li>Fail，Error：该测试失败，该测试继续，其他测试继续执行</li><li>FailNow，Fatal：该测试失败，该测试中止，其他测试继续执行</li></ul><p><br /></p><p>代码覆盖率</p><h2 id=\"Z0rO4\">Benchmark</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557067837101-3bdadb6b-821f-4dbd-9b3a-c9efe304bc7a.png%22%2C%22originWidth%22%3A679%2C%22originHeight%22%3A393%2C%22name%22%3A%22image.png%22%2C%22size%22%3A77590%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A848.7499873526397%2C%22height%22%3A491%7D\"></card></p><p>以Benchmark开头，参数类型稍有不同。</p><p>通过ResetTimer和StopTimer将测试代码隔开</p><p><br /></p><p>命令行下运行：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22%22%2C%22code%22%3A%22%22%2C%22id%22%3A%222Zn5M%22%7D\"></card><p><br /></p><h2 id=\"o10fu\">BBD</h2><p>Behavior Driven Development</p><p>常用框架：goconvey</p><p><br /></p><h2 id=\"1pJFI\">反射编程</h2><p><br /></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557107233067-f50d5086-e384-46cc-bd5e-0a2446ec3d8f.png%22%2C%22originWidth%22%3A820%2C%22originHeight%22%3A312%2C%22name%22%3A%22image.png%22%2C%22size%22%3A64732%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1024.99998472631%2C%22height%22%3A390%7D\"></card></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557107389241-fb6b5237-7e73-48e9-83a9-e6c6ae45f6aa.png%22%2C%22originWidth%22%3A755%2C%22originHeight%22%3A285%2C%22name%22%3A%22image.png%22%2C%22size%22%3A35453%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A943.7499859370294%2C%22height%22%3A356%7D\"></card></p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><h2 id=\"yvkPS\">万能程序</h2><p>DeepEqual</p><p>比较切片和map</p><p>与配置相关的，要求灵活性和复用性时，可以</p><p>反射的</p><p><br /></p><h2 id=\"KEsq1\">不安全编程</h2><p>unsafe，一般涉及到库的交互，与c语言交互。</p><p>“不安全”行为危险性：Go语言中不支持强制类型转换。下列操作看似可以，实际不能转换，而且实际使用起来很危险。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22i%3A%3D10%5Cnf%3A%3D*(*floa64)(unsafe.Pointer(%26i))%22%2C%22id%22%3A%22TSgk0%22%7D\"></card><p><br /></p><p>场景2：用到内置的Atomic操作，指针原子操作，并发读写</p><p><br /></p><h1 id=\"KmB4n\">架构模式</h1><h2 id=\"dsFK1\">Pipe-Filter架构</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557108759332-46d3b8e2-5573-419b-80b6-63cfbf5feaa1.png%22%2C%22originWidth%22%3A782%2C%22originHeight%22%3A408%2C%22name%22%3A%22image.png%22%2C%22size%22%3A86362%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A977.4999854341152%2C%22height%22%3A510%7D\"></card></p><ul><li>非常适合与数据处理及数据分析系统<card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557108843135-278143cd-9e6a-4b4f-ae49-b800e98a261c.png%22%2C%22originWidth%22%3A690%2C%22originHeight%22%3A379%2C%22name%22%3A%22image.png%22%2C%22size%22%3A86777%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A862.4999871477487%2C%22height%22%3A474%7D\"></card></li></ul><h2 id=\"UVtCE\">micro kernel</h2><p><span style=\"background-color: transparent;\">特点：易于拓展，错误隔离，保持架构一致性</span></p><p>要点：</p><ul><li>内核包含公共流程或通用逻辑</li><li>将可变成或可扩展部分规划为扩展点</li><li>抽象扩展点行为，定义接口</li><li>利用插件进行扩展</li></ul><p><br /></p><p>生产过程任务的开发</p><h2 id=\"N5rRp\">内置json解析</h2><p>远程过程调用等过程中，会用json，以及在配置文件中，很多使用json</p><p><br /></p><p><br /></p><h2 id=\"RFIdh\">easyjson</h2><p>go内置的，一般适用于配置文件解析，对于qps较高，运用了反射，效率较低。尽量使用高性能的json解析</p><p><br /></p><h2 id=\"wincH\">HTTP服务</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557111353880-2f261975-45c5-4dcd-9281-44ac48f2fbcb.png%22%2C%22originWidth%22%3A862%2C%22originHeight%22%3A354%2C%22name%22%3A%22image.png%22%2C%22size%22%3A103367%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1077.499983943999%2C%22height%22%3A442%7D\"></card></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557111366213-f5138ca3-fd5f-4da1-992a-f68e1681d3ff.png%22%2C%22originWidth%22%3A771%2C%22originHeight%22%3A356%2C%22name%22%3A%22image.png%22%2C%22size%22%3A101595%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A963.7499856390061%2C%22height%22%3A445%7D\"></card></p><p><br /></p><p><br /></p><h2 id=\"s0G6x\">构建Restful服务</h2><p>更好的router，httprouter</p><p>面向资源的架构（Resource Oriented Architecture）</p><p><br /></p><h2 id=\"TpHAz\">性能分析工具</h2><p><br /></p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><p><br /></p><p>学习函数式编程：《计算机程序的构造和解释》functional programming</p><p>《Restful Web Service》</p><p>《Go程序设计语言》</p><p>《面向模式的软件架构》1,2,3本</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-07T07:14:06.000Z",
    "deleted_at": null,
    "created_at": "2019-04-28T13:34:33.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2019-05-07T09:07:41.000Z",
    "first_published_at": "2019-05-07T03:26:13.000Z",
    "word_count": 2995,
    "cover": "https://cdn.nlark.com/yuque/0/2019/png/187932/1556503870325-262231e2-8b69-42ab-8711-83d68d74069e.png",
    "description": "title: go语言学习-极客时间date: 2019-05-07 11:25:46categories: Gotags: [Go,学习]第一个go程序go语言主函数没有返回值，需要使用os包， os.exit() ，也不能直接函数传参。变量、常量和其他语言的区别赋值可以自动类型推断： a:...",
    "custom_description": null,
    "hits": 35,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1185554,
    "slug": "xxehz0",
    "title": "MySQL相关概念总结",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\ntitle: MySQL相关概念总结<br />date: 2019-1-20 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n<a name=\"a3cad0da\"></a>\n# 三大范式\n**第一范式（1NF）：**无重复的列。<br />要求：表所有的属性不可再分。<br />如果不符合第一范式，则不符合关系模型的定义。<br />**第二范式（2NF）：**属性完全依赖于主键 [ 消除部分子函数依赖 ]。<br />要求：在满足1NF前提，每一行能够唯一标识，不存在非主键字段。<br />常用方法可以增加一个单字段的主键。<br />**第三范式（3NF）**：属性不依赖于其它非主属性 [ 消除传递依赖 ]。<br />要求：在满足2NF前提，不出现类似于A->B->C的情况，这样的传递依赖可以分为两个表，分别保存。\n\n通用的原则：\n\n- 每个实体都有一个表。\n- 为每一个关系（二维表）增加一个逻辑主键作为标识。\n- 出现二维表对应的关系，采用1:1, 1:N, M:n的形式将关联关系设计。\n\n\n<a name=\"a3fb37fb\"></a>\n# MySQL日志类型\n**错误日志**：记录启动、运行或停止mysqld时出现的问题<br />**查询日志**：记录建立的客户端连接和执行的所有语句（包括错误的）<br />**二进制日志**：记录所有更改数据的语句、还用于主从复制<br />**慢日志**：记录所有执行时间超过long_query_time秒的所有查询\n\n<a name=\"b271e427\"></a>\n# 索引\n索引：对数据库表中一或多个列的值进行排序的结构，是帮助MySQL高效获取数据的数据结构，可以 加快检索表中的数据，而不必扫描整个数据库。<br />缺点是：需要占用额外的空间，并且需要定期维护，每条记录的INSERT,DELETE,UPDATE操作可能付出更多的磁盘IO。同时不必要的索引反而会使查询速度变慢。<br />索引查询的适用的情况：基于一个范围的检索，一般查询返回结果集小于表中记录数的30%。基于非唯一性索引的检索。<br />数据库几个基本的索引类型：普通索引、唯一索引、主键索引、全文索引\n\n<a name=\"9f82401d\"></a>\n# 事务\n事务：并发控制的基本单位，是一个操作序列，这些操作要么都执行，要么都不执行，是一个不可分割的工作单位。\n\n<a name=\"eea69b18\"></a>\n## 事务的隔离级别\n分为四个级别：  <br />未提交读:允许脏读，可能读到其他会话没有提交的数据。<br />已提交读:只能读到已经提交的数据。ORACAL等多数数据库的默认隔离级别。   <br />可重复读:可重复读，同一事务内的查询都是和事务开始时一致的，Innodb的默认隔离级别。  <br />串行读：完全串行化的读，每次读都需要获得表级共享锁，读写相互会阻塞。<br />  <br />对应：脏读、不可重复读、幻读情况为：<br />脏读：当一个事务正在访问数据，并且对数据进行了修改，这个修改还没提交到数据库。另一个事务也访问这个数据，使用了这个数据。  <br />不可重复读：一个事务内，多次读同一数据。这个事务还没结束时，另一个事务也访问这个数据，导致第一个事务两次访问的数据不一样。  <br />幻读：第一个事务对表中的每一行数据进行了修改，同时第二个事务也访问这个表中的数据，这种修改是向表中插入而来一行数据，那么以后就会发生操作第一个事物的用户表中发现表中还有没修改的数据行，像是产生了幻觉。<br />[MySQL 四种事务隔离级的说明](https://www.cnblogs.com/zhoujinyi/p/3437475.html)\n\n<a name=\"cc200018\"></a>\n# DROP、DELETE与TRUNCATE\nDROP：不仅删除表的数据，还删除表的结构。<br />DELETE和TRUNCATE只删除表的数据不删除表的结构。<br />删除速度：DROP> DELETE>TRUNCATE<br />适用场景：当不需要一张表的时候，适用DROP；删除部分数据行的时候，用DELETE，并且使用where子句；保留表而删除所有数据的时候用TRUNCATE。\n\n<a name=\"3f113298\"></a>\n# 存储引擎\nMySQL目前用的比较多的两种，是Innodb和Myisam\n\n<br />",
    "body_draft": "\ntitle: MySQL相关概念总结<br />date: 2019-1-20 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n<a name=\"a3cad0da\"></a>\n# 三大范式\n**第一范式（1NF）：**无重复的列。<br />要求：表所有的属性不可再分。<br />如果不符合第一范式，则不符合关系模型的定义。<br />**第二范式（2NF）：**属性完全依赖于主键 [ 消除部分子函数依赖 ]。<br />要求：在满足1NF前提，每一行能够唯一标识，不存在非主键字段。<br />常用方法可以增加一个单字段的主键。<br />**第三范式（3NF）**：属性不依赖于其它非主属性 [ 消除传递依赖 ]。<br />要求：在满足2NF前提，不出现类似于A->B->C的情况，这样的传递依赖可以分为两个表，分别保存。\n\n通用的原则：\n\n- 每个实体都有一个表。\n- 为每一个关系（二维表）增加一个逻辑主键作为标识。\n- 出现二维表对应的关系，采用1:1, 1:N, M:n的形式将关联关系设计。\n\n\n<a name=\"a3fb37fb\"></a>\n# MySQL日志类型\n**错误日志**：记录启动、运行或停止mysqld时出现的问题<br />**查询日志**：记录建立的客户端连接和执行的所有语句（包括错误的）<br />**二进制日志**：记录所有更改数据的语句、还用于主从复制<br />**慢日志**：记录所有执行时间超过long_query_time秒的所有查询\n\n<a name=\"b271e427\"></a>\n# 索引\n索引：对数据库表中一或多个列的值进行排序的结构，是帮助MySQL高效获取数据的数据结构，可以 加快检索表中的数据，而不必扫描整个数据库。<br />缺点是：需要占用额外的空间，并且需要定期维护，每条记录的INSERT,DELETE,UPDATE操作可能付出更多的磁盘IO。同时不必要的索引反而会使查询速度变慢。<br />索引查询的适用的情况：基于一个范围的检索，一般查询返回结果集小于表中记录数的30%。基于非唯一性索引的检索。<br />数据库几个基本的索引类型：普通索引、唯一索引、主键索引、全文索引\n\n<a name=\"9f82401d\"></a>\n# 事务\n事务：并发控制的基本单位，是一个操作序列，这些操作要么都执行，要么都不执行，是一个不可分割的工作单位。\n\n<a name=\"eea69b18\"></a>\n## 事务的隔离级别\n分为四个级别：  <br />未提交读:允许脏读，可能读到其他会话没有提交的数据。<br />已提交读:只能读到已经提交的数据。ORACAL等多数数据库的默认隔离级别。   <br />可重复读:可重复读，同一事务内的查询都是和事务开始时一致的，Innodb的默认隔离级别。  <br />串行读：完全串行化的读，每次读都需要获得表级共享锁，读写相互会阻塞。<br />  <br />对应：脏读、不可重复读、幻读情况为：<br />脏读：当一个事务正在访问数据，并且对数据进行了修改，这个修改还没提交到数据库。另一个事务也访问这个数据，使用了这个数据。  <br />不可重复读：一个事务内，多次读同一数据。这个事务还没结束时，另一个事务也访问这个数据，导致第一个事务两次访问的数据不一样。  <br />幻读：第一个事务对表中的每一行数据进行了修改，同时第二个事务也访问这个表中的数据，这种修改是向表中插入而来一行数据，那么以后就会发生操作第一个事物的用户表中发现表中还有没修改的数据行，像是产生了幻觉。<br />[MySQL 四种事务隔离级的说明](https://www.cnblogs.com/zhoujinyi/p/3437475.html)\n\n<a name=\"cc200018\"></a>\n# DROP、DELETE与TRUNCATE\nDROP：不仅删除表的数据，还删除表的结构。<br />DELETE和TRUNCATE只删除表的数据不删除表的结构。<br />删除速度：DROP> DELETE>TRUNCATE<br />适用场景：当不需要一张表的时候，适用DROP；删除部分数据行的时候，用DELETE，并且使用where子句；保留表而删除所有数据的时候用TRUNCATE。\n\n<a name=\"3f113298\"></a>\n# 存储引擎\nMySQL目前用的比较多的两种，是Innodb和Myisam\n\n<br />",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>title: </span>MySQL相关概念总结</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>date: 2019-1-20 <span>11:27:21</span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: MySQL</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [MySQL,学习]<span data-lake-element=\"cursor\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22NFUuN%22%7D\" id=\"NFUuN\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"a3cad0da\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">三大范式</h1><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>第一范式（</span></strong><strong>1NF</strong><strong><span>）：</span></strong><span>无重复的列。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>要求：表所有的属性不可再分。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>如果不符合第一范式，则不符合关系模型的定义。</span></p><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>第二范式（</span></strong><strong>2NF</strong><strong><span>）：</span></strong><span>属性完全依赖于主键</span> [ <span>消除部分子函数依赖</span> ]。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">要求：在满足1NF前提，每一行能够唯一标识，不存在非主键字段。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">常用方法可以增加一个单字段的主键。</p><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>第三范式（</span></strong><strong>3NF</strong><strong><span>）</span></strong><span>：属性不依赖于其它非主属性</span> [ <span>消除传递依赖</span> ]。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">要求：在满足2NF前提，不出现类似于<span>A-&gt;B-&gt;C的情况，这样的传递依赖可以分为两个表，分别保存。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span><br></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>通用的原则：</span></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><span></span>每个实体都有一个表。</li><li>为每一个关系（二维表）增加一个逻辑主键作为标识。</li><li>出现二维表对应的关系，采用<span>1:1, 1:N, M:n</span><span>的形式将关联关系设计。</span></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span><br></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span><br></span></p><h1 id=\"a3fb37fb\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><span></span>MySQL日志类型</h1><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>错误日志</span></strong><span>：记录启动、运行或停止</span>mysqld<span>时出现的问题</span></p><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>查询日志</span></strong><span>：记录建立的客户端连接和执行的所有语句（包括错误的）</span></p><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>二进制日志</span></strong><span>：记录所有更改数据的语句、还用于主从复制</span></p><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong><span>慢日志</span></strong><span>：记录所有执行时间超过</span>long_query_time<span>秒的所有查询</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span><br></span></p><h1 id=\"b271e427\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><span></span>索引</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">索引：</span><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">对数据库表中一或多个列的值进行排序的结构，是帮助MySQL高效获取数据的数据结构，可以 加快检索表中的数据，<span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">而不必扫描整个数据库。</span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">缺点是：需要占用额外的空间，并且需要定期维护，每条记录的<span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">INSERT,DELETE,UPDATE</span>操作可能付出更多的磁盘IO。同时不必要的索引反而会使查询速度变慢。</span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">索引查询的适用的情况：<span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">基于一个范围的检索，一般查询返回结果集小于表中记录数的30%。<span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">基于非唯一性索引的检索。</span></span></span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">数据库几个基本的索引类型：<span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">普通索引、唯一索引、主键索引、全文索引</span></span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><br></span></span></span></p><h1 id=\"9f82401d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">事务</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">事务：并发控制的基本单位，<span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">是一个操作序列，这些操作要么都执行，要么都不执行，是一个不可分割的工作单位。</span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><br></span></span></p><h2 id=\"eea69b18\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">事务的隔离级别</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">分为四个级别： &nbsp;</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">未提交读:允许脏读，可能读到其他会话没有提交的数据。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">已提交读:只能读到已经提交的数据。ORACAL等多数数据库的默认隔离级别。 &nbsp; </span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">可重复读:可重复读，同一事务内的查询都是和事务开始时一致的，Innodb的默认隔离级别。 &nbsp;</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">串行读：完全串行化的读，每次读都需要获得表级共享锁，读写相互会阻塞。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span style=\"color: #eeffff;\"> &nbsp;</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">对应：脏读、不可重复读、幻读情况为：</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">脏读：当一个事务正在访问数据，并且对数据进行了修改，这个修改还没提交到数据库。另一个事务也访问这个数据，使用了这个数据。 &nbsp;</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">不可重复读：一个事务内，多次读同一数据。这个事务还没结束时，另一个事务也访问这个数据，导致第一个事务两次访问的数据不一样。 &nbsp;</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\">幻读：第一个事务对表中的每一行数据进行了修改，同时第二个事务也访问这个表中的数据，这种修改是向表中插入而来一行数据，那么以后就会发生操作第一个事物的用户表中发现表中还有没修改的数据行，像是产生了幻觉。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><a href=\"https://www.cnblogs.com/zhoujinyi/p/3437475.html\" target=\"_blank\" rel=\"noopener noreferrer\">MySQL 四种事务隔离级的说明</a></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(48, 50, 54); font-size: 16px;\" data-mce-style=\"font-size: 12px\"><br></span></p><h1 id=\"cc200018\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">DROP、DELETE与TRUNCATE</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DROP：不仅删除表的数据，还删除表的结构。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DELETE和TRUNCATE只删除表的数据不删除表的结构。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">删除速度：DROP&gt; DELETE&gt;TRUNCATE</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">适用场景：当不需要一张表的时候，适用DROP；删除部分数据行的时候，用DELETE，并且使用where子句；保留表而删除所有数据的时候用TRUNCATE。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"3f113298\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">存储引擎</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">MySQL目前用的比较多的两种，是Innodb和Myisam</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><br></ul></div>",
    "body_lake": "<!doctype lake><p><br /></p><p><span>title: </span>MySQL相关概念总结</p><p><span>date: 2019-1-20 <span>11:27:21</span></span></p><p>categories: MySQL</p><p>tags: [MySQL,学习]<cursor /></p><p><br /></p><card type=\"block\" name=\"hr\"></card><p><br /></p><h1 id=\"a3cad0da\">三大范式</h1><p style=\"text-align: left;\"><strong><span>第一范式（</span></strong><strong>1NF</strong><strong><span>）：</span></strong><span>无重复的列。</span></p><p><span>要求：表所有的属性不可再分。</span></p><p><span>如果不符合第一范式，则不符合关系模型的定义。</span></p><p style=\"text-align: left;\"><strong><span>第二范式（</span></strong><strong>2NF</strong><strong><span>）：</span></strong><span>属性完全依赖于主键</span> [ <span>消除部分子函数依赖</span> ]。</p><p>要求：在满足1NF前提，每一行能够唯一标识，不存在非主键字段。</p><p>常用方法可以增加一个单字段的主键。</p><p style=\"text-align: left;\"><strong><span>第三范式（</span></strong><strong>3NF</strong><strong><span>）</span></strong><span>：属性不依赖于其它非主属性</span> [ <span>消除传递依赖</span> ]。</p><p>要求：在满足2NF前提，不出现类似于<span>A-&gt;B-&gt;C的情况，这样的传递依赖可以分为两个表，分别保存。</span></p><p><span><br /></span></p><p><span>通用的原则：</span></p><ul><li><span></span>每个实体都有一个表。</li><li>为每一个关系（二维表）增加一个逻辑主键作为标识。</li><li>出现二维表对应的关系，采用<span>1:1, 1:N, M:n</span><span>的形式将关联关系设计。</span></li></ul><p><span><br /></span></p><p><span><br /></span></p><h1 id=\"a3fb37fb\"><span></span>MySQL日志类型</h1><p style=\"text-align: left;\"><strong><span>错误日志</span></strong><span>：记录启动、运行或停止</span>mysqld<span>时出现的问题</span></p><p style=\"text-align: left;\"><strong><span>查询日志</span></strong><span>：记录建立的客户端连接和执行的所有语句（包括错误的）</span></p><p style=\"text-align: left;\"><strong><span>二进制日志</span></strong><span>：记录所有更改数据的语句、还用于主从复制</span></p><p style=\"text-align: left;\"><strong><span>慢日志</span></strong><span>：记录所有执行时间超过</span>long_query_time<span>秒的所有查询</span></p><p><span><br /></span></p><h1 id=\"b271e427\"><span></span>索引</h1><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">索引：</span><span class=\"lake-fontsize-12\" style=\"color: #303236;\">对数据库表中一或多个列的值进行排序的结构，是帮助MySQL高效获取数据的数据结构，可以 加快检索表中的数据，<span class=\"lake-fontsize-12\" style=\"color: #303236;\">而不必扫描整个数据库。</span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\">缺点是：需要占用额外的空间，并且需要定期维护，每条记录的<span class=\"lake-fontsize-12\" style=\"color: #303236;\">INSERT,DELETE,UPDATE</span>操作可能付出更多的磁盘IO。同时不必要的索引反而会使查询速度变慢。</span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\">索引查询的适用的情况：<span class=\"lake-fontsize-12\" style=\"color: #303236;\">基于一个范围的检索，一般查询返回结果集小于表中记录数的30%。<span class=\"lake-fontsize-12\" style=\"color: #303236;\">基于非唯一性索引的检索。</span></span></span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\">数据库几个基本的索引类型：<span class=\"lake-fontsize-12\" style=\"color: #303236;\">普通索引、唯一索引、主键索引、全文索引</span></span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><br /></span></span></span></p><h1 id=\"9f82401d\">事务</h1><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">事务：并发控制的基本单位，<span class=\"lake-fontsize-12\" style=\"color: #303236;\">是一个操作序列，这些操作要么都执行，要么都不执行，是一个不可分割的工作单位。</span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><br /></span></span></p><h2 id=\"eea69b18\">事务的隔离级别</h2><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">分为四个级别：  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">未提交读:允许脏读，可能读到其他会话没有提交的数据。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">已提交读:只能读到已经提交的数据。ORACAL等多数数据库的默认隔离级别。   </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">可重复读:可重复读，同一事务内的查询都是和事务开始时一致的，Innodb的默认隔离级别。  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">串行读：完全串行化的读，每次读都需要获得表级共享锁，读写相互会阻塞。</span></p><p><span style=\"color: #eeffff;\">  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">对应：脏读、不可重复读、幻读情况为：</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">脏读：当一个事务正在访问数据，并且对数据进行了修改，这个修改还没提交到数据库。另一个事务也访问这个数据，使用了这个数据。  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">不可重复读：一个事务内，多次读同一数据。这个事务还没结束时，另一个事务也访问这个数据，导致第一个事务两次访问的数据不一样。  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">幻读：第一个事务对表中的每一行数据进行了修改，同时第二个事务也访问这个表中的数据，这种修改是向表中插入而来一行数据，那么以后就会发生操作第一个事物的用户表中发现表中还有没修改的数据行，像是产生了幻觉。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><a href=\"https://www.cnblogs.com/zhoujinyi/p/3437475.html\" target=\"_blank\">MySQL 四种事务隔离级的说明</a></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><br /></span></p><h1 id=\"cc200018\">DROP、DELETE与TRUNCATE</h1><p>DROP：不仅删除表的数据，还删除表的结构。</p><p>DELETE和TRUNCATE只删除表的数据不删除表的结构。</p><p>删除速度：DROP&gt; DELETE&gt;TRUNCATE</p><p>适用场景：当不需要一张表的时候，适用DROP；删除部分数据行的时候，用DELETE，并且使用where子句；保留表而删除所有数据的时候用TRUNCATE。</p><p><br /></p><h1 id=\"3f113298\">存储引擎</h1><p>MySQL目前用的比较多的两种，是Innodb和Myisam</p><p><br /></p><ul><br /></ul>",
    "body_draft_lake": "<!doctype lake><p><br /></p><p><span><anchor />title: </span>MySQL相关概念总结</p><p><span>date: 2019-1-20 <span>11:27:21</span></span></p><p>categories: MySQL</p><p>tags: [MySQL,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><focus /><p><br /></p><h1 id=\"a3cad0da\">三大范式</h1><p style=\"text-align: left;\"><strong><span>第一范式（</span></strong><strong>1NF</strong><strong><span>）：</span></strong><span>无重复的列。</span></p><p><span>要求：表所有的属性不可再分。</span></p><p><span>如果不符合第一范式，则不符合关系模型的定义。</span></p><p style=\"text-align: left;\"><strong><span>第二范式（</span></strong><strong>2NF</strong><strong><span>）：</span></strong><span>属性完全依赖于主键</span> [ <span>消除部分子函数依赖</span> ]。</p><p>要求：在满足1NF前提，每一行能够唯一标识，不存在非主键字段。</p><p>常用方法可以增加一个单字段的主键。</p><p style=\"text-align: left;\"><strong><span>第三范式（</span></strong><strong>3NF</strong><strong><span>）</span></strong><span>：属性不依赖于其它非主属性</span> [ <span>消除传递依赖</span> ]。</p><p>要求：在满足2NF前提，不出现类似于<span>A-&gt;B-&gt;C的情况，这样的传递依赖可以分为两个表，分别保存。</span></p><p><span><br /></span></p><p><span>通用的原则：</span></p><ul><li>每个实体都有一个表。</li><li>为每一个关系（二维表）增加一个逻辑主键作为标识。</li><li>出现二维表对应的关系，采用<span>1:1, 1:N, M:n</span><span>的形式将关联关系设计。</span></li></ul><p><span><br /></span></p><p><span><br /></span></p><h1 id=\"a3fb37fb\">MySQL日志类型</h1><p style=\"text-align: left;\"><strong><span>错误日志</span></strong><span>：记录启动、运行或停止</span>mysqld<span>时出现的问题</span></p><p style=\"text-align: left;\"><strong><span>查询日志</span></strong><span>：记录建立的客户端连接和执行的所有语句（包括错误的）</span></p><p style=\"text-align: left;\"><strong><span>二进制日志</span></strong><span>：记录所有更改数据的语句、还用于主从复制</span></p><p style=\"text-align: left;\"><strong><span>慢日志</span></strong><span>：记录所有执行时间超过</span>long_query_time<span>秒的所有查询</span></p><p><span><br /></span></p><h1 id=\"b271e427\">索引</h1><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">索引：</span><span class=\"lake-fontsize-12\" style=\"color: #303236;\">对数据库表中一或多个列的值进行排序的结构，是帮助MySQL高效获取数据的数据结构，可以 加快检索表中的数据，<span class=\"lake-fontsize-12\" style=\"color: #303236;\">而不必扫描整个数据库。</span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\">缺点是：需要占用额外的空间，并且需要定期维护，每条记录的<span class=\"lake-fontsize-12\" style=\"color: #303236;\">INSERT,DELETE,UPDATE</span>操作可能付出更多的磁盘IO。同时不必要的索引反而会使查询速度变慢。</span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\">索引查询的适用的情况：<span class=\"lake-fontsize-12\" style=\"color: #303236;\">基于一个范围的检索，一般查询返回结果集小于表中记录数的30%。<span class=\"lake-fontsize-12\" style=\"color: #303236;\">基于非唯一性索引的检索。</span></span></span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\">数据库几个基本的索引类型：<span class=\"lake-fontsize-12\" style=\"color: #303236;\">普通索引、唯一索引、主键索引、全文索引</span></span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><br /></span></span></span></p><h1 id=\"9f82401d\">事务</h1><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">事务：并发控制的基本单位，<span class=\"lake-fontsize-12\" style=\"color: #303236;\">是一个操作序列，这些操作要么都执行，要么都不执行，是一个不可分割的工作单位。</span></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><br /></span></span></p><h2 id=\"eea69b18\">事务的隔离级别</h2><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">分为四个级别：  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">未提交读:允许脏读，可能读到其他会话没有提交的数据。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">已提交读:只能读到已经提交的数据。ORACAL等多数数据库的默认隔离级别。   </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">可重复读:可重复读，同一事务内的查询都是和事务开始时一致的，Innodb的默认隔离级别。  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">串行读：完全串行化的读，每次读都需要获得表级共享锁，读写相互会阻塞。</span></p><p><span style=\"color: #eeffff;\">  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">对应：脏读、不可重复读、幻读情况为：</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">脏读：当一个事务正在访问数据，并且对数据进行了修改，这个修改还没提交到数据库。另一个事务也访问这个数据，使用了这个数据。  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">不可重复读：一个事务内，多次读同一数据。这个事务还没结束时，另一个事务也访问这个数据，导致第一个事务两次访问的数据不一样。  </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\">幻读：第一个事务对表中的每一行数据进行了修改，同时第二个事务也访问这个表中的数据，这种修改是向表中插入而来一行数据，那么以后就会发生操作第一个事物的用户表中发现表中还有没修改的数据行，像是产生了幻觉。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><a href=\"https://www.cnblogs.com/zhoujinyi/p/3437475.html\" target=\"_blank\">MySQL 四种事务隔离级的说明</a></span></p><p><span class=\"lake-fontsize-12\" style=\"color: #303236;\"><br /></span></p><h1 id=\"cc200018\">DROP、DELETE与TRUNCATE</h1><p>DROP：不仅删除表的数据，还删除表的结构。</p><p>DELETE和TRUNCATE只删除表的数据不删除表的结构。</p><p>删除速度：DROP&gt; DELETE&gt;TRUNCATE</p><p>适用场景：当不需要一张表的时候，适用DROP；删除部分数据行的时候，用DELETE，并且使用where子句；保留表而删除所有数据的时候用TRUNCATE。</p><p><br /></p><h1 id=\"3f113298\">存储引擎</h1><p>MySQL目前用的比较多的两种，是Innodb和Myisam</p><p><br /></p><ul><br /></ul>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-13T12:43:54.000Z",
    "deleted_at": null,
    "created_at": "2019-01-25T01:56:46.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2019-01-25T03:11:19.000Z",
    "first_published_at": "2019-01-25T02:48:59.000Z",
    "word_count": 1069,
    "cover": null,
    "description": "title: MySQL相关概念总结date: 2019-1-20 11:27:21categories: MySQLtags: [MySQL,学习]三大范式第一范式（1NF）：无重复的列。要求：表所有的属性不可再分。如果不符合第一范式，则不符合关系模型的定义。第二范式（2NF）：属性完全依赖...",
    "custom_description": null,
    "hits": 7,
    "_serializer": "v2.doc_detail"
  },
  {
    "title": "MySQL学习总结2-表连接",
    "description": "title: MySQL学习总结2-表连接date: 2019-1-16 11:27:21categories: MySQLtags: [MySQL,学习]在关系型数据库里面，每个实体有自己的一张表，所有属性都是这张表的字段，表与表之间根据关联字段&quot;连接&quot;在一起。   什么...",
    "created_at": "2019-01-23T12:23:55.000Z",
    "updated_at": "2019-05-07T09:08:05.000Z",
    "published_at": "2019-05-07T07:28:17.000Z",
    "format": "lake",
    "slug": "vguflv",
    "last_editor": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "large_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "followers_count": 3,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2019-05-01T07:47:16.000Z",
      "_serializer": "v2.user"
    },
    "body": "\ntitle: MySQL学习总结2-表连接<br />date: 2019-1-16 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n> 在关系型数据库里面，每个实体有自己的一张表，所有属性都是这张表的字段，表与表之间根据关联字段\"连接\"在一起。   \n\n\n\n\n<a name=\"d7333afa\"></a>\n# 什么是连接\n\n**两张表根据关联字段，组合成一个数据集。当两张表的关联字段不匹配时，例如表A和表B，处理方式为：**\n\n- 只返回两张表匹配的记录，内连接（inner join）。\n- 返回匹配的记录，以及表 A 多余的记录，左连接（left join）。\n- 返回匹配的记录，以及表 B 多余的记录，右连接（right join）。\n- 返回匹配的记录，以及表 A 和表 B 各自的多余记录，全连接（full join）。\n\n这里看到了阮一峰老师的一个总结，引用了图片：<br />             ![](https://cdn.nlark.com/yuque/0/2019/jpeg/187932/1548247519305-bff75e42-9992-499e-9c1b-d75b9e56fe13.jpeg#align=left&display=inline&height=295&originHeight=295&originWidth=602&size=0&status=done&width=602)\n\n<a name=\"80bb3ed3\"></a>\n# 内连接（inner join）\n\n- MySQL默认的连接就是内连接，可以省略inner。\n- 有条件的内连接：\n\nwhere：数据过滤，理解上，数据交叉连接完成后再进行过滤。<br />on：在连接时，就对数据进行判断。<br />using：要求负责连接的两个实体之间的字段名称一致。<br />     在有同名字段时，使用using，通用条件时，使用on，在数据过滤时（不是连接的过滤）时，使用where。\n<a name=\"382f77cb\"></a>\n# 外连接（outer join）\n连接的数据不真实存在。意思是外连接的两个表，存在单个表中没有的数据。\n<a name=\"81255524\"></a>\n## 左连接（left join）\n在连接时，出现了左边表连接不到右边表的情况，则左边表的数据会被保留，而右边表的数据连接不到左表的情况，会被抛弃。\n<a name=\"92bb0331\"></a>\n## 右连接（right join）\n在连接时，出现了左边表连接不到右边表的情况，则数据会被抛弃，而右边表的数据连接不到左表的情况，会被保留。\n<a name=\"c078d866\"></a>\n## 全连接（full join）\n"
  },
  {
    "id": 1145060,
    "slug": "olb7zi",
    "title": "MySQL学习总结1-基础",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\ntitle: MySQL学习总结1-基础<br />date: 2019-1-7 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n<a name=\"2599e25c\"></a>\n# 数据库和SQL\n\nSQL(Structured\nQuery Language)：结构化查询语言。包括DDL（Data Definition Language数据定义语言）、DML（Data Management Language数据管理语言）、DCL（Data Control Language数据库控制语言）。其中DML包括：DQL（Data Query Language数据查询语言）和DML（Data Management Language数据管理语言），一般来说，数据查询和管理都称为数据管理语言。  <br />   \n<a name=\"04ee1961\"></a>\n# [安装]()\n<a name=\"0796ba76\"></a>\n# 基础\n<a name=\"DML\"></a>\n## DML\n<a name=\"1475e8cb\"></a>\n### 数据库操作\n```sql\n# 数据库创建\nCREATE database db_name;   # 创建数据库\nCREATE database db_name if not exits;  \n\n# 数据库查询\nSHOW databases;   # 查看当前存在的数据库\nSHOW CREATE DATABASE db_name;  # 查看数据库创建的语言，显示结果为\n\n# 选择数据库\nUSE database;  # 操作表时会使用默认的数据库，所以需要先使用USE表示使用的是哪一个数据库\n\n# 查看数据库中表\nSHOW TABLES [like 'pattern_%']; # 可以使用通配符匹配\n\n# 数据库删除\nDROP database db_name;   #还有其他的两种，记得区分结果\n\n# 数据库修改\nALTER database db_name;  \n\n# 数据库权限修改\nGRANT ALL ON db_name.* TO 'your_mysql_name'@'your_client_host'; # \n```\n\n<a name=\"a91cd0c0\"></a>\n### 表操作\n\n```sql\n# 表创建\nCREATE TABLE tbl_name (列结构)[表选项]\nCREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20), \n                   species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);\n\n\n\n\n\n# 从外部导入数据到表\nLOAD DATA LOCAL INFILE '/path/pet.txt' INTO TABLE pet\n       LINES TERMINATED BY '\\r\\n';  # 从本地导入，分隔符为\"\\r\\n\"\n\n# 插入数据到表\nINSERT INTO pet\n       VALUES ('Puffball','Diane','hamster','f','1999-03-30',NULL); # 如果设置了NOT NULL，则需要\n       在插入数据的时候该项有值\n \n # 修改列定义\n ALTER TABLE tbl_name[ADD|DROP|CHANGE|MODIFY] #添加|删除|重命名|修改\n \n # 修改表选项\n ALTER TABLE tbl_name 新的表选型\n ALTER TABLE pet CHARACTER SET UTF8;\n```\n\n<a name=\"5246d2c8\"></a>\n### 数据操作\n\n```sql\n# 创建数据\nINSERT INTO tbl_name (field_list) VALUES (values); #\n# 获取数据\nSELECT field_list FROM tbl_name conditions;\nSELECT field_list FROM tbl_name WHERE conditions LIKE 'a%'; # %为通配符\nSELECT field_list FROM tbl_name WHERE REGEXP_LIKE(field_name,regex); # 使用正则表达式匹配\n# 删除数据\nDELETE FROM tbl_name conditions;\n# 修改数据\nUPDATE tbl_name SET field=new_value, conditions;\n```\n\n<a name=\"f7513baf\"></a>\n## Mysql数据类型\n<a name=\"069eee27\"></a>\n### 整型:默认有符号，无符号要指定unsigned\nTINYINT:1字节 无符号：-128---127  有符号： 0---255<br />SMALLINT:2字节 无符号：-32768---32767 有符号：0-65536<br />MEDIUMINT：3字节<br />INT：4字节<br />BIGINT:8字节<br />可以听过类似INT(2)表示显示的宽度，显示宽度不影响数值的范围，只是为了表示\n\n<a name=\"a0a0a581\"></a>\n### 小数\n**浮点数： ** 可以通过**TYPE(M,D)**控制数值位数，M为所有的数值位数，D为小数位数<br />float：单精度浮点数，默认精度位数为6左右<br />double：双精度浮点数，默认精度16左右<br />** 定点数： DECIMAL(M,D) **同样的M为所有的数值位数，D为小数位数，M默认为10，D默认为0\n\n<a name=\"11fea612\"></a>\n### 日期和时间\n\n| DATATIME | 8 | YYYY-MM-DD HH:MM:SS |  |\n| :---: | :---: | :---: | :---: |\n| TIMESTAMP | 4 | YYYY-MM-DD HH:MM:SS  | 从1970年开始 |\n| DATE | 3 | YYYY-MM-DD |  |\n| TIME | 3 | HH:MM:SS |  |\n| YEAR | 1 | YYYY | 范围为1901-2155 |\n\n<a name=\"cc4dd1da\"></a>\n### 字符串\n**CHAR(M) :**表示固定长度。M表示允许的字符串长度,限制了字符串的长度<br />**VARCHAR(M): **可变长度 。M表示允许的最大长度，在内存中表示，需要多一个字节保存字符串的总长度，因此如果有时候不是很需要改变长度的话，尽量用固定长度的CHAR\n\n<a name=\"20d99b02\"></a>\n## 列属性\n<a name=\"475cdfca\"></a>\n### 主键\n可以唯一标识某条记录的字段或字段的集合。通常的做法是，设计每个表存在一个可以唯一标识的主键字段，最好利用与实体信息不相关的属性，作为唯一标识，与业务逻辑不发生关系，只用来记录标识，例如ID。<br />设置方式：在字段上设置或者定义完字段后再定义\n```sql\n# 在字段上设置\nCREATE TABLE pet (\n  id INT PRIMARY KEY,NAME VARCHAR (5));\n# 定义完字段后再设置\nCREATE TABLE pet1 (\n\tid INT,NAME VARCHAR (5),PRIMARY KEY (id));\n```\n\n<a name=\"32f9b134\"></a>\n### 自动增长\n为每条记录提供唯一的标识，每次插入记录时，某个字段的值都自动加1，使用auto_increment标识。要求需要整型和索引。在插入数据的时候，可以选择插入null也可以不插入。  <br />自动增长的初始值默认是1，也可以通过 auto_increment n 重新设置从n开始增长。<br />也可以手动插入自动增长的值，但是如果是主键的话，不能重复。\n<a name=\"1bbbb204\"></a>\n# 注意事项\n\n- 数据库语言关键字一般用大写，虽然大小写都可以，但是为了区分。\n- 数据库名的大小写取决于系统，所以操作的时候尽量有自己的规范，进行大小写区分。\n- NULL是区别于0或者' '的\n",
    "body_draft": "\ntitle: MySQL学习总结1-基础<br />date: 2019-1-7 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n<a name=\"2599e25c\"></a>\n# 数据库和SQL\n\nSQL(Structured\nQuery Language)：结构化查询语言。包括DDL（Data Definition Language数据定义语言）、DML（Data Management Language数据管理语言）、DCL（Data Control Language数据库控制语言）。其中DML包括：DQL（Data Query Language数据查询语言）和DML（Data Management Language数据管理语言），一般来说，数据查询和管理都称为数据管理语言。  <br />   \n<a name=\"04ee1961\"></a>\n# [安装]()\n<a name=\"0796ba76\"></a>\n# 基础\n<a name=\"DML\"></a>\n## DML\n<a name=\"1475e8cb\"></a>\n### 数据库操作\n```sql\n# 数据库创建\nCREATE database db_name;   # 创建数据库\nCREATE database db_name if not exits;  \n\n# 数据库查询\nSHOW databases;   # 查看当前存在的数据库\nSHOW CREATE DATABASE db_name;  # 查看数据库创建的语言，显示结果为\n\n# 选择数据库\nUSE database;  # 操作表时会使用默认的数据库，所以需要先使用USE表示使用的是哪一个数据库\n\n# 查看数据库中表\nSHOW TABLES [like 'pattern_%']; # 可以使用通配符匹配\n\n# 数据库删除\nDROP database db_name;   #还有其他的两种，记得区分结果\n\n# 数据库修改\nALTER database db_name;  \n\n# 数据库权限修改\nGRANT ALL ON db_name.* TO 'your_mysql_name'@'your_client_host'; # \n```\n\n<a name=\"a91cd0c0\"></a>\n### 表操作\n\n```sql\n# 表创建\nCREATE TABLE tbl_name (列结构)[表选项]\nCREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20), \n                   species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);\n\n\n\n\n\n# 从外部导入数据到表\nLOAD DATA LOCAL INFILE '/path/pet.txt' INTO TABLE pet\n       LINES TERMINATED BY '\\r\\n';  # 从本地导入，分隔符为\"\\r\\n\"\n\n# 插入数据到表\nINSERT INTO pet\n       VALUES ('Puffball','Diane','hamster','f','1999-03-30',NULL); # 如果设置了NOT NULL，则需要\n       在插入数据的时候该项有值\n \n # 修改列定义\n ALTER TABLE tbl_name[ADD|DROP|CHANGE|MODIFY] #添加|删除|重命名|修改\n \n # 修改表选项\n ALTER TABLE tbl_name 新的表选型\n ALTER TABLE pet CHARACTER SET UTF8;\n```\n\n<a name=\"5246d2c8\"></a>\n### 数据操作\n\n```sql\n# 创建数据\nINSERT INTO tbl_name (field_list) VALUES (values); #\n# 获取数据\nSELECT field_list FROM tbl_name conditions;\nSELECT field_list FROM tbl_name WHERE conditions LIKE 'a%'; # %为通配符\nSELECT field_list FROM tbl_name WHERE REGEXP_LIKE(field_name,regex); # 使用正则表达式匹配\n# 删除数据\nDELETE FROM tbl_name conditions;\n# 修改数据\nUPDATE tbl_name SET field=new_value, conditions;\n```\n\n<a name=\"f7513baf\"></a>\n## Mysql数据类型\n<a name=\"069eee27\"></a>\n### 整型:默认有符号，无符号要指定unsigned\nTINYINT:1字节 无符号：-128---127  有符号： 0---255<br />SMALLINT:2字节 无符号：-32768---32767 有符号：0-65536<br />MEDIUMINT：3字节<br />INT：4字节<br />BIGINT:8字节<br />可以听过类似INT(2)表示显示的宽度，显示宽度不影响数值的范围，只是为了表示\n\n<a name=\"a0a0a581\"></a>\n### 小数\n**浮点数： ** 可以通过**TYPE(M,D)**控制数值位数，M为所有的数值位数，D为小数位数<br />float：单精度浮点数，默认精度位数为6左右<br />double：双精度浮点数，默认精度16左右<br />** 定点数： DECIMAL(M,D) **同样的M为所有的数值位数，D为小数位数，M默认为10，D默认为0\n\n<a name=\"11fea612\"></a>\n### 日期和时间\n\n| DATATIME | 8 | YYYY-MM-DD HH:MM:SS |  |\n| :---: | :---: | :---: | :---: |\n| TIMESTAMP | 4 | YYYY-MM-DD HH:MM:SS  | 从1970年开始 |\n| DATE | 3 | YYYY-MM-DD |  |\n| TIME | 3 | HH:MM:SS |  |\n| YEAR | 1 | YYYY | 范围为1901-2155 |\n\n<a name=\"cc4dd1da\"></a>\n### 字符串\n**CHAR(M) :**表示固定长度。M表示允许的字符串长度,限制了字符串的长度<br />**VARCHAR(M): **可变长度 。M表示允许的最大长度，在内存中表示，需要多一个字节保存字符串的总长度，因此如果有时候不是很需要改变长度的话，尽量用固定长度的CHAR\n\n<a name=\"20d99b02\"></a>\n## 列属性\n<a name=\"475cdfca\"></a>\n### 主键\n可以唯一标识某条记录的字段或字段的集合。通常的做法是，设计每个表存在一个可以唯一标识的主键字段，最好利用与实体信息不相关的属性，作为唯一标识，与业务逻辑不发生关系，只用来记录标识，例如ID。<br />设置方式：在字段上设置或者定义完字段后再定义\n```sql\n# 在字段上设置\nCREATE TABLE pet (\n  id INT PRIMARY KEY,NAME VARCHAR (5));\n# 定义完字段后再设置\nCREATE TABLE pet1 (\n\tid INT,NAME VARCHAR (5),PRIMARY KEY (id));\n```\n\n<a name=\"32f9b134\"></a>\n### 自动增长\n为每条记录提供唯一的标识，每次插入记录时，某个字段的值都自动加1，使用auto_increment标识。要求需要整型和索引。在插入数据的时候，可以选择插入null也可以不插入。  <br />自动增长的初始值默认是1，也可以通过 auto_increment n 重新设置从n开始增长。<br />也可以手动插入自动增长的值，但是如果是主键的话，不能重复。\n<a name=\"1bbbb204\"></a>\n# 注意事项\n\n- 数据库语言关键字一般用大写，虽然大小写都可以，但是为了区分。\n- 数据库名的大小写取决于系统，所以操作的时候尽量有自己的规范，进行大小写区分。\n- NULL是区别于0或者' '的\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>title: </span>MySQL学习总结1-基础</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>date: 2019-1-7 <span>11:27:21</span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: MySQL</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [MySQL,学习]<span data-lake-element=\"cursor\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22xwnRG%22%7D\" id=\"xwnRG\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"2599e25c\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">数据库和SQL</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">SQL(<span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\">Structured Query Language</span>)：结构化查询语言。包括DDL（Data Definition Language数据定义语言）、DML（Data Management Language数据管理语言）、DCL（Data Control Language数据库控制语言）。其中DML包括：DQL（Data Query Language数据查询语言）和DML（Data Management Language数据管理语言），一般来说，数据查询和管理都称为数据管理语言。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; </p><h1 id=\"04ee1961\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">[安装]()</h1><h1 id=\"0796ba76\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">基础</h1><h2 id=\"DML\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">DML</h2><h3 id=\"1475e8cb\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">数据库操作</h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%5CnCREATE%20database%20db_name%3B%20%20%20%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%5CnCREATE%20database%20db_name%20if%20not%20exits%3B%20%20%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%5CnSHOW%20databases%3B%20%20%20%23%20%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%5CnSHOW%20CREATE%20DATABASE%20db_name%3B%20%20%23%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E7%9A%84%E8%AF%AD%E8%A8%80%EF%BC%8C%E6%98%BE%E7%A4%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%5Cn%5Cn%23%20%E9%80%89%E6%8B%A9%E6%95%B0%E6%8D%AE%E5%BA%93%5CnUSE%20database%3B%20%20%23%20%E6%93%8D%E4%BD%9C%E8%A1%A8%E6%97%B6%E4%BC%9A%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E5%85%88%E4%BD%BF%E7%94%A8USE%E8%A1%A8%E7%A4%BA%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%5Cn%5Cn%23%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E8%A1%A8%5CnSHOW%20TABLES%20%5Blike%20'pattern_%25'%5D%3B%20%23%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%A0%E9%99%A4%5CnDROP%20database%20db_name%3B%20%20%20%23%E8%BF%98%E6%9C%89%E5%85%B6%E4%BB%96%E7%9A%84%E4%B8%A4%E7%A7%8D%EF%BC%8C%E8%AE%B0%E5%BE%97%E5%8C%BA%E5%88%86%E7%BB%93%E6%9E%9C%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%AE%E6%94%B9%5CnALTER%20database%20db_name%3B%20%20%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E4%BF%AE%E6%94%B9%5CnGRANT%20ALL%20ON%20db_name.*%20TO%20'your_mysql_name'%40'your_client_host'%3B%20%23%20%22%2C%22id%22%3A%22ysA8F%22%7D\" id=\"ysA8F\" data-language=\"sql\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 数据库创建\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE database db_name;   # 创建数据库\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE database db_name if not exits;  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 数据库查询\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SHOW databases;   # 查看当前存在的数据库\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SHOW CREATE DATABASE db_name;  # 查看数据库创建的语言，显示结果为\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 选择数据库\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">USE database;  # 操作表时会使用默认的数据库，所以需要先使用USE表示使用的是哪一个数据库\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 查看数据库中表\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SHOW TABLES [like 'pattern_%']; # 可以使用通配符匹配\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 数据库删除\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DROP database db_name;   #还有其他的两种，记得区分结果\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 数据库修改\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ALTER database db_name;  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 数据库权限修改\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GRANT ALL ON db_name.* TO 'your_mysql_name'@'your_client_host'; # </span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"a91cd0c0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">表操作</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E8%A1%A8%E5%88%9B%E5%BB%BA%5CnCREATE%20TABLE%20tbl_name%20(%E5%88%97%E7%BB%93%E6%9E%84)%5B%E8%A1%A8%E9%80%89%E9%A1%B9%5D%5CnCREATE%20TABLE%20pet%20(name%20VARCHAR(20)%2C%20owner%20VARCHAR(20)%2C%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20species%20VARCHAR(20)%2C%20sex%20CHAR(1)%2C%20birth%20DATE%2C%20death%20DATE)%3B%5Cn%5Cn%5Cn%5Cn%5Cn%5Cn%23%20%E4%BB%8E%E5%A4%96%E9%83%A8%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A1%A8%5CnLOAD%20DATA%20LOCAL%20INFILE%20'%2Fpath%2Fpet.txt'%20INTO%20TABLE%20pet%5Cn%20%20%20%20%20%20%20LINES%20TERMINATED%20BY%20'%5C%5Cr%5C%5Cn'%3B%20%20%23%20%E4%BB%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5%EF%BC%8C%E5%88%86%E9%9A%94%E7%AC%A6%E4%B8%BA%5C%22%5C%5Cr%5C%5Cn%5C%22%5Cn%5Cn%23%20%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A1%A8%5CnINSERT%20INTO%20pet%5Cn%20%20%20%20%20%20%20VALUES%20('Puffball'%2C'Diane'%2C'hamster'%2C'f'%2C'1999-03-30'%2CNULL)%3B%20%23%20%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%BA%86NOT%20NULL%EF%BC%8C%E5%88%99%E9%9C%80%E8%A6%81%5Cn%20%20%20%20%20%20%20%E5%9C%A8%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%E8%AF%A5%E9%A1%B9%E6%9C%89%E5%80%BC%5Cn%20%5Cn%20%23%20%E4%BF%AE%E6%94%B9%E5%88%97%E5%AE%9A%E4%B9%89%5Cn%20ALTER%20TABLE%20tbl_name%5BADD%7CDROP%7CCHANGE%7CMODIFY%5D%20%23%E6%B7%BB%E5%8A%A0%7C%E5%88%A0%E9%99%A4%7C%E9%87%8D%E5%91%BD%E5%90%8D%7C%E4%BF%AE%E6%94%B9%5Cn%20%5Cn%20%23%20%E4%BF%AE%E6%94%B9%E8%A1%A8%E9%80%89%E9%A1%B9%5Cn%20ALTER%20TABLE%20tbl_name%20%E6%96%B0%E7%9A%84%E8%A1%A8%E9%80%89%E5%9E%8B%5Cn%20ALTER%20TABLE%20pet%20CHARACTER%20SET%20UTF8%3B%22%2C%22id%22%3A%22wnegy%22%7D\" id=\"wnegy\" data-language=\"sql\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 表创建\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE TABLE tbl_name (列结构)[表选项]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20), \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                   species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 从外部导入数据到表\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">LOAD DATA LOCAL INFILE '/path/pet.txt' INTO TABLE pet\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">       LINES TERMINATED BY '\\r\\n';  # 从本地导入，分隔符为\"\\r\\n\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 插入数据到表\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">INSERT INTO pet\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">       VALUES ('Puffball','Diane','hamster','f','1999-03-30',NULL); # 如果设置了NOT NULL，则需要\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">       在插入数据的时候该项有值\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> # 修改列定义\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> ALTER TABLE tbl_name[ADD|DROP|CHANGE|MODIFY] #添加|删除|重命名|修改\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> # 修改表选项\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> ALTER TABLE tbl_name 新的表选型\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> ALTER TABLE pet CHARACTER SET UTF8;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"5246d2c8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">数据操作</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%5CnINSERT%20INTO%20tbl_name%20(field_list)%20VALUES%20(values)%3B%20%23%5Cn%23%20%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%5CnSELECT%20field_list%20FROM%20tbl_name%20conditions%3B%5CnSELECT%20field_list%20FROM%20tbl_name%20WHERE%20conditions%20LIKE%20'a%25'%3B%20%23%20%25%E4%B8%BA%E9%80%9A%E9%85%8D%E7%AC%A6%5CnSELECT%20field_list%20FROM%20tbl_name%20WHERE%20REGEXP_LIKE(field_name%2Cregex)%3B%20%23%20%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%5Cn%23%20%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%5CnDELETE%20FROM%20tbl_name%20conditions%3B%5Cn%23%20%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%5CnUPDATE%20tbl_name%20SET%20field%3Dnew_value%2C%20conditions%3B%22%2C%22id%22%3A%22HuWBE%22%7D\" id=\"HuWBE\" data-language=\"sql\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 创建数据\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">INSERT INTO tbl_name (field_list) VALUES (values); #\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 获取数据\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SELECT field_list FROM tbl_name conditions;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SELECT field_list FROM tbl_name WHERE conditions LIKE 'a%'; # %为通配符\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SELECT field_list FROM tbl_name WHERE REGEXP_LIKE(field_name,regex); # 使用正则表达式匹配\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 删除数据\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DELETE FROM tbl_name conditions;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 修改数据\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">UPDATE tbl_name SET field=new_value, conditions;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"f7513baf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Mysql数据类型</h2><h3 id=\"069eee27\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">整型:默认有符号，无符号要指定unsigned</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">TINYINT:1字节 无符号：-128---127 &nbsp;有符号： 0---255</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">SMALLINT:2字节 无符号：-32768---32767 有符号：0-65536</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">MEDIUMINT：3字节</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">INT：4字节</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">BIGINT:8字节</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以听过类似INT(2)表示显示的宽度，显示宽度不影响数值的范围，只是为了表示</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"a0a0a581\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">小数</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>浮点数： </strong> 可以通过<strong>TYPE(M,D)</strong>控制数值位数，M为所有的数值位数，D为小数位数</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">float：单精度浮点数，默认精度位数为6左右</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">double：双精度浮点数，默认精度16左右</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong> 定点数： DECIMAL(M,D) </strong>同样的<span>M为所有的数值位数，D为小数位数，M默认为10，D默认为0</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span><br></span></p><h3 id=\"11fea612\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><span></span>日期和时间</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"table\" data-card-value=\"data:%7B%22rows%22%3A5%2C%22cols%22%3A4%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3EDATATIME%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%20HH%3AMM%3ASS%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3ETIMESTAMP%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%20HH%3AMM%3ASS%C2%A0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cspan%3E%E4%BB%8E1970%E5%B9%B4%E5%BC%80%E5%A7%8B%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3EDATE%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3ETIME%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EHH%3AMM%3ASS%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EYEAR%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EYYYY%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cspan%3E%E8%8C%83%E5%9B%B4%E4%B8%BA%3C%2Fspan%3E%3Cspan%20class%3D%5C%22lake-fontsize-10%5C%22%3E1901-2155%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22XDD1A%22%7D\" id=\"XDD1A\"><table class=\"lake-table\" style=\"width: 721px; outline: none; border-collapse: collapse;\"><colgroup><col width=\"180\" span=\"1\"><col width=\"180\" span=\"1\"><col width=\"180\" span=\"1\"><col width=\"180\" span=\"1\"></colgroup><tbody><tr style=\"height: 33px;\"><td style=\"vertical-align: middle; text-align: center; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"6cd6d291f48b6dbba1798455cd668b4f\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DATATIME</p></td><td style=\"text-align: center; vertical-align: middle; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"e3b56865aaf35c818a6f961ec0bd27fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">8</p></td><td style=\"text-align: center; vertical-align: middle; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"79fb2236369d627320b9c1ed23c2eb68\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">YYYY-MM-DD HH:MM:SS</p></td><td rowspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"3cfbb51b6e9a8f05d3371f37b3ba70dd\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></td></tr><tr style=\"height: 33px;\"><td style=\"vertical-align: middle; text-align: center; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"a2824f09fb3a71d33ca90e8e553f17c4\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">TIMESTAMP</p></td><td style=\"text-align: center; vertical-align: middle; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"d1523db85253b6b37ea9d31869d1bb42\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">4</p></td><td style=\"text-align: center; vertical-align: middle; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"3b1d7d13419a01b5eb9769ecd4d60906\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">YYYY-MM-DD HH:MM:SS&nbsp;</p></td><td rowspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"aa8e05daa21723964abcde0d3a3f3059\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>从1970年开始</span></p></td></tr><tr style=\"height: 33px;\"><td style=\"vertical-align: middle; text-align: center; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"696c6d1b7627c037f065138edab5ecf9\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DATE</p></td><td style=\"text-align: center; vertical-align: middle; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"522740941e585faf2759c075c9e9b2eb\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3</p></td><td style=\"text-align: center; vertical-align: middle; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"3445d06fe9e8b1e1d7dbbd8158f35603\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">YYYY-MM-DD</p></td><td rowspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"26f3bae37acbd6104d5e21293b06ccba\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"1b5935cae7e633f5f14b315437679b67\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">TIME</p></td><td colspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"4998cac649f68090d25bda3b30cfe260\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3</p></td><td colspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"99d0857dc85e8b89da3222f088c096a0\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">HH:MM:SS</p></td><td rowspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"508ab217c6e28a4cc339e14ad47503f5\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"733448d13d8dea552bd89d8c9f04dee2\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">YEAR</p></td><td colspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"5bb0782e18145aeed707532984b1cc61\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1</p></td><td colspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"e26fb6b6c097acf3757fabbfffb210c6\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">YYYY</p></td><td rowspan=\"1\" style=\"text-align: center; vertical-align: middle; background-color: rgb(255, 255, 255); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"5f13c54e5e74ab26e386d386a604fc93\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>范围为</span><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\">1901-2155</span></p></td></tr></tbody></table></div><h3 id=\"cc4dd1da\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">字符串</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>CHAR(M) :</strong>表示固定长度。<span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\">M表示允许的字符串长度,限制了字符串的长度</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>VARCHAR(M): </strong>可变长度 。M表示允许的最大长度，在内存中表示，需要多一个字节保存字符串的总长度，因此如果有时候不是很需要改变长度的话，尽量用固定长度的CHAR</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"20d99b02\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">列属性</h2><h3 id=\"475cdfca\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">主键</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以唯一标识某条记录的字段或字段的集合。通常的做法是，设计每个表存在一个可以唯一标识的主键字段，最好利用与实体信息不相关的属性，作为唯一标识，与业务逻辑不发生关系，只用来记录标识，例如ID。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">设置方式：在字段上设置或者定义完字段后再定义</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E5%9C%A8%E5%AD%97%E6%AE%B5%E4%B8%8A%E8%AE%BE%E7%BD%AE%5CnCREATE%20TABLE%20pet%20(%5Cn%20%20id%20INT%20PRIMARY%20KEY%2CNAME%20VARCHAR%20(5))%3B%5Cn%23%20%E5%AE%9A%E4%B9%89%E5%AE%8C%E5%AD%97%E6%AE%B5%E5%90%8E%E5%86%8D%E8%AE%BE%E7%BD%AE%5CnCREATE%20TABLE%20pet1%20(%5Cn%5Ctid%20INT%2CNAME%20VARCHAR%20(5)%2CPRIMARY%20KEY%20(id))%3B%22%2C%22id%22%3A%22QZ0hJ%22%7D\" id=\"QZ0hJ\" data-language=\"sql\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 在字段上设置\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE TABLE pet (\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  id INT PRIMARY KEY,NAME VARCHAR (5));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 定义完字段后再设置\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE TABLE pet1 (\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    id INT,NAME VARCHAR (5),PRIMARY KEY (id));</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"32f9b134\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">自动增长</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">为每条记录提供唯一的标识，每次插入记录时，某个字段的值都自动加1，使用auto_increment标识。要求需要整型和索引。在插入数据的时候，可以选择插入null也可以不插入。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">自动增长的初始值默认是1，也可以通过 auto_increment n 重新设置从n开始增长。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">也可以手动插入自动增长的值，但是如果是主键的话，不能重复。</p><h1 id=\"1bbbb204\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">注意事项</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>数据库语言关键字一般用大写，虽然大小写都可以，但是为了区分。</li><li>数据库名的大小写取决于系统，所以操作的时候尽量有自己的规范，进行大小写区分。</li><li>NULL是区别于0或者' '的</li></ul></div>",
    "body_lake": "<!doctype lake><p><br /></p><p><span>title: </span>MySQL学习总结1-基础</p><p><span>date: 2019-1-7 <span>11:27:21</span></span></p><p>categories: MySQL</p><p>tags: [MySQL,学习]<cursor /></p><p><br /></p><card type=\"block\" name=\"hr\"></card><p><br /></p><h1 id=\"2599e25c\">数据库和SQL</h1><p><br /></p><p>SQL(<span class=\"lake-fontsize-10\">Structured\nQuery Language</span>)：结构化查询语言。包括DDL（Data Definition Language数据定义语言）、DML（Data Management Language数据管理语言）、DCL（Data Control Language数据库控制语言）。其中DML包括：DQL（Data Query Language数据查询语言）和DML（Data Management Language数据管理语言），一般来说，数据查询和管理都称为数据管理语言。  </p><p>   </p><h1 id=\"04ee1961\">[安装]()</h1><h1 id=\"0796ba76\">基础</h1><h2 id=\"DML\">DML</h2><h3 id=\"1475e8cb\">数据库操作</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%5CnCREATE%20database%20db_name%3B%20%20%20%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%5CnCREATE%20database%20db_name%20if%20not%20exits%3B%20%20%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%5CnSHOW%20databases%3B%20%20%20%23%20%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%5CnSHOW%20CREATE%20DATABASE%20db_name%3B%20%20%23%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E7%9A%84%E8%AF%AD%E8%A8%80%EF%BC%8C%E6%98%BE%E7%A4%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%5Cn%5Cn%23%20%E9%80%89%E6%8B%A9%E6%95%B0%E6%8D%AE%E5%BA%93%5CnUSE%20database%3B%20%20%23%20%E6%93%8D%E4%BD%9C%E8%A1%A8%E6%97%B6%E4%BC%9A%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E5%85%88%E4%BD%BF%E7%94%A8USE%E8%A1%A8%E7%A4%BA%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%5Cn%5Cn%23%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E8%A1%A8%5CnSHOW%20TABLES%20%5Blike%20'pattern_%25'%5D%3B%20%23%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%A0%E9%99%A4%5CnDROP%20database%20db_name%3B%20%20%20%23%E8%BF%98%E6%9C%89%E5%85%B6%E4%BB%96%E7%9A%84%E4%B8%A4%E7%A7%8D%EF%BC%8C%E8%AE%B0%E5%BE%97%E5%8C%BA%E5%88%86%E7%BB%93%E6%9E%9C%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%AE%E6%94%B9%5CnALTER%20database%20db_name%3B%20%20%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E4%BF%AE%E6%94%B9%5CnGRANT%20ALL%20ON%20db_name.*%20TO%20'your_mysql_name'%40'your_client_host'%3B%20%23%20%22%7D\"></card><p><br /></p><h3 id=\"a91cd0c0\">表操作</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E8%A1%A8%E5%88%9B%E5%BB%BA%5CnCREATE%20TABLE%20tbl_name%20(%E5%88%97%E7%BB%93%E6%9E%84)%5B%E8%A1%A8%E9%80%89%E9%A1%B9%5D%5CnCREATE%20TABLE%20pet%20(name%20VARCHAR(20)%2C%20owner%20VARCHAR(20)%2C%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20species%20VARCHAR(20)%2C%20sex%20CHAR(1)%2C%20birth%20DATE%2C%20death%20DATE)%3B%5Cn%5Cn%5Cn%5Cn%5Cn%5Cn%23%20%E4%BB%8E%E5%A4%96%E9%83%A8%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A1%A8%5CnLOAD%20DATA%20LOCAL%20INFILE%20'%2Fpath%2Fpet.txt'%20INTO%20TABLE%20pet%5Cn%20%20%20%20%20%20%20LINES%20TERMINATED%20BY%20'%5C%5Cr%5C%5Cn'%3B%20%20%23%20%E4%BB%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5%EF%BC%8C%E5%88%86%E9%9A%94%E7%AC%A6%E4%B8%BA%5C%22%5C%5Cr%5C%5Cn%5C%22%5Cn%5Cn%23%20%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A1%A8%5CnINSERT%20INTO%20pet%5Cn%20%20%20%20%20%20%20VALUES%20('Puffball'%2C'Diane'%2C'hamster'%2C'f'%2C'1999-03-30'%2CNULL)%3B%20%23%20%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%BA%86NOT%20NULL%EF%BC%8C%E5%88%99%E9%9C%80%E8%A6%81%5Cn%20%20%20%20%20%20%20%E5%9C%A8%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%E8%AF%A5%E9%A1%B9%E6%9C%89%E5%80%BC%5Cn%20%5Cn%20%23%20%E4%BF%AE%E6%94%B9%E5%88%97%E5%AE%9A%E4%B9%89%5Cn%20ALTER%20TABLE%20tbl_name%5BADD%7CDROP%7CCHANGE%7CMODIFY%5D%20%23%E6%B7%BB%E5%8A%A0%7C%E5%88%A0%E9%99%A4%7C%E9%87%8D%E5%91%BD%E5%90%8D%7C%E4%BF%AE%E6%94%B9%5Cn%20%5Cn%20%23%20%E4%BF%AE%E6%94%B9%E8%A1%A8%E9%80%89%E9%A1%B9%5Cn%20ALTER%20TABLE%20tbl_name%20%E6%96%B0%E7%9A%84%E8%A1%A8%E9%80%89%E5%9E%8B%5Cn%20ALTER%20TABLE%20pet%20CHARACTER%20SET%20UTF8%3B%22%7D\"></card><p><br /></p><h3 id=\"5246d2c8\">数据操作</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%5CnINSERT%20INTO%20tbl_name%20(field_list)%20VALUES%20(values)%3B%20%23%5Cn%23%20%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%5CnSELECT%20field_list%20FROM%20tbl_name%20conditions%3B%5CnSELECT%20field_list%20FROM%20tbl_name%20WHERE%20conditions%20LIKE%20'a%25'%3B%20%23%20%25%E4%B8%BA%E9%80%9A%E9%85%8D%E7%AC%A6%5CnSELECT%20field_list%20FROM%20tbl_name%20WHERE%20REGEXP_LIKE(field_name%2Cregex)%3B%20%23%20%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%5Cn%23%20%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%5CnDELETE%20FROM%20tbl_name%20conditions%3B%5Cn%23%20%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%5CnUPDATE%20tbl_name%20SET%20field%3Dnew_value%2C%20conditions%3B%22%7D\"></card><p><br /></p><h2 id=\"f7513baf\">Mysql数据类型</h2><h3 id=\"069eee27\">整型:默认有符号，无符号要指定unsigned</h3><p>TINYINT:1字节 无符号：-128---127  有符号： 0---255</p><p>SMALLINT:2字节 无符号：-32768---32767 有符号：0-65536</p><p>MEDIUMINT：3字节</p><p>INT：4字节</p><p>BIGINT:8字节</p><p>可以听过类似INT(2)表示显示的宽度，显示宽度不影响数值的范围，只是为了表示</p><p><br /></p><h3 id=\"a0a0a581\">小数</h3><p><strong>浮点数： </strong> 可以通过<strong>TYPE(M,D)</strong>控制数值位数，M为所有的数值位数，D为小数位数</p><p>float：单精度浮点数，默认精度位数为6左右</p><p>double：双精度浮点数，默认精度16左右</p><p><strong> 定点数： DECIMAL(M,D) </strong>同样的<span>M为所有的数值位数，D为小数位数，M默认为10，D默认为0</span></p><p><span><br /></span></p><h3 id=\"11fea612\"><span></span>日期和时间</h3><p><br /></p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A5%2C%22cols%22%3A4%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3EDATATIME%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%20HH%3AMM%3ASS%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3ETIMESTAMP%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%20HH%3AMM%3ASS%C2%A0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cspan%3E%E4%BB%8E1970%E5%B9%B4%E5%BC%80%E5%A7%8B%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3EDATE%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3ETIME%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EHH%3AMM%3ASS%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EYEAR%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EYYYY%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cspan%3E%E8%8C%83%E5%9B%B4%E4%B8%BA%3C%2Fspan%3E%3Cspan%20class%3D%5C%22lake-fontsize-10%5C%22%3E1901-2155%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%7D\"></card><h3 id=\"cc4dd1da\">字符串</h3><p><strong>CHAR(M) :</strong>表示固定长度。<span class=\"lake-fontsize-10\">M表示允许的字符串长度,限制了字符串的长度</span></p><p><strong>VARCHAR(M): </strong>可变长度 。M表示允许的最大长度，在内存中表示，需要多一个字节保存字符串的总长度，因此如果有时候不是很需要改变长度的话，尽量用固定长度的CHAR</p><p><br /></p><h2 id=\"20d99b02\">列属性</h2><h3 id=\"475cdfca\">主键</h3><p>可以唯一标识某条记录的字段或字段的集合。通常的做法是，设计每个表存在一个可以唯一标识的主键字段，最好利用与实体信息不相关的属性，作为唯一标识，与业务逻辑不发生关系，只用来记录标识，例如ID。</p><p>设置方式：在字段上设置或者定义完字段后再定义</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E5%9C%A8%E5%AD%97%E6%AE%B5%E4%B8%8A%E8%AE%BE%E7%BD%AE%5CnCREATE%20TABLE%20pet%20(%5Cn%20%20id%20INT%20PRIMARY%20KEY%2CNAME%20VARCHAR%20(5))%3B%5Cn%23%20%E5%AE%9A%E4%B9%89%E5%AE%8C%E5%AD%97%E6%AE%B5%E5%90%8E%E5%86%8D%E8%AE%BE%E7%BD%AE%5CnCREATE%20TABLE%20pet1%20(%5Cn%5Ctid%20INT%2CNAME%20VARCHAR%20(5)%2CPRIMARY%20KEY%20(id))%3B%22%7D\"></card><p><br /></p><h3 id=\"32f9b134\">自动增长</h3><p>为每条记录提供唯一的标识，每次插入记录时，某个字段的值都自动加1，使用auto_increment标识。要求需要整型和索引。在插入数据的时候，可以选择插入null也可以不插入。  </p><p>自动增长的初始值默认是1，也可以通过 auto_increment n 重新设置从n开始增长。</p><p>也可以手动插入自动增长的值，但是如果是主键的话，不能重复。</p><h1 id=\"1bbbb204\">注意事项</h1><ul><li>数据库语言关键字一般用大写，虽然大小写都可以，但是为了区分。</li><li>数据库名的大小写取决于系统，所以操作的时候尽量有自己的规范，进行大小写区分。</li><li>NULL是区别于0或者' '的</li></ul>",
    "body_draft_lake": "<!doctype lake><p><br /></p><p><span>title: </span>MySQL学习总结1-基础</p><p><span>date: 2019-1-7 <span>11:27:21</span></span></p><p>categories: MySQL</p><p>tags: [MySQL,学习]<cursor /></p><p><br /></p><card type=\"block\" name=\"hr\"></card><p><br /></p><h1 id=\"2599e25c\">数据库和SQL</h1><p><br /></p><p>SQL(<span class=\"lake-fontsize-10\">Structured\nQuery Language</span>)：结构化查询语言。包括DDL（Data Definition Language数据定义语言）、DML（Data Management Language数据管理语言）、DCL（Data Control Language数据库控制语言）。其中DML包括：DQL（Data Query Language数据查询语言）和DML（Data Management Language数据管理语言），一般来说，数据查询和管理都称为数据管理语言。  </p><p>   </p><h1 id=\"04ee1961\">[安装]()</h1><h1 id=\"0796ba76\">基础</h1><h2 id=\"DML\">DML</h2><h3 id=\"1475e8cb\">数据库操作</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%5CnCREATE%20database%20db_name%3B%20%20%20%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%5CnCREATE%20database%20db_name%20if%20not%20exits%3B%20%20%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%5CnSHOW%20databases%3B%20%20%20%23%20%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%5CnSHOW%20CREATE%20DATABASE%20db_name%3B%20%20%23%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E7%9A%84%E8%AF%AD%E8%A8%80%EF%BC%8C%E6%98%BE%E7%A4%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%5Cn%5Cn%23%20%E9%80%89%E6%8B%A9%E6%95%B0%E6%8D%AE%E5%BA%93%5CnUSE%20database%3B%20%20%23%20%E6%93%8D%E4%BD%9C%E8%A1%A8%E6%97%B6%E4%BC%9A%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E5%85%88%E4%BD%BF%E7%94%A8USE%E8%A1%A8%E7%A4%BA%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%5Cn%5Cn%23%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E8%A1%A8%5CnSHOW%20TABLES%20%5Blike%20'pattern_%25'%5D%3B%20%23%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%A0%E9%99%A4%5CnDROP%20database%20db_name%3B%20%20%20%23%E8%BF%98%E6%9C%89%E5%85%B6%E4%BB%96%E7%9A%84%E4%B8%A4%E7%A7%8D%EF%BC%8C%E8%AE%B0%E5%BE%97%E5%8C%BA%E5%88%86%E7%BB%93%E6%9E%9C%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%AE%E6%94%B9%5CnALTER%20database%20db_name%3B%20%20%5Cn%5Cn%23%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E4%BF%AE%E6%94%B9%5CnGRANT%20ALL%20ON%20db_name.*%20TO%20'your_mysql_name'%40'your_client_host'%3B%20%23%20%22%7D\"></card><p><br /></p><h3 id=\"a91cd0c0\">表操作</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E8%A1%A8%E5%88%9B%E5%BB%BA%5CnCREATE%20TABLE%20tbl_name%20(%E5%88%97%E7%BB%93%E6%9E%84)%5B%E8%A1%A8%E9%80%89%E9%A1%B9%5D%5CnCREATE%20TABLE%20pet%20(name%20VARCHAR(20)%2C%20owner%20VARCHAR(20)%2C%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20species%20VARCHAR(20)%2C%20sex%20CHAR(1)%2C%20birth%20DATE%2C%20death%20DATE)%3B%5Cn%5Cn%5Cn%5Cn%5Cn%5Cn%23%20%E4%BB%8E%E5%A4%96%E9%83%A8%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A1%A8%5CnLOAD%20DATA%20LOCAL%20INFILE%20'%2Fpath%2Fpet.txt'%20INTO%20TABLE%20pet%5Cn%20%20%20%20%20%20%20LINES%20TERMINATED%20BY%20'%5C%5Cr%5C%5Cn'%3B%20%20%23%20%E4%BB%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5%EF%BC%8C%E5%88%86%E9%9A%94%E7%AC%A6%E4%B8%BA%5C%22%5C%5Cr%5C%5Cn%5C%22%5Cn%5Cn%23%20%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A1%A8%5CnINSERT%20INTO%20pet%5Cn%20%20%20%20%20%20%20VALUES%20('Puffball'%2C'Diane'%2C'hamster'%2C'f'%2C'1999-03-30'%2CNULL)%3B%20%23%20%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%BA%86NOT%20NULL%EF%BC%8C%E5%88%99%E9%9C%80%E8%A6%81%5Cn%20%20%20%20%20%20%20%E5%9C%A8%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%E8%AF%A5%E9%A1%B9%E6%9C%89%E5%80%BC%5Cn%20%5Cn%20%23%20%E4%BF%AE%E6%94%B9%E5%88%97%E5%AE%9A%E4%B9%89%5Cn%20ALTER%20TABLE%20tbl_name%5BADD%7CDROP%7CCHANGE%7CMODIFY%5D%20%23%E6%B7%BB%E5%8A%A0%7C%E5%88%A0%E9%99%A4%7C%E9%87%8D%E5%91%BD%E5%90%8D%7C%E4%BF%AE%E6%94%B9%5Cn%20%5Cn%20%23%20%E4%BF%AE%E6%94%B9%E8%A1%A8%E9%80%89%E9%A1%B9%5Cn%20ALTER%20TABLE%20tbl_name%20%E6%96%B0%E7%9A%84%E8%A1%A8%E9%80%89%E5%9E%8B%5Cn%20ALTER%20TABLE%20pet%20CHARACTER%20SET%20UTF8%3B%22%7D\"></card><p><br /></p><h3 id=\"5246d2c8\">数据操作</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%5CnINSERT%20INTO%20tbl_name%20(field_list)%20VALUES%20(values)%3B%20%23%5Cn%23%20%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%5CnSELECT%20field_list%20FROM%20tbl_name%20conditions%3B%5CnSELECT%20field_list%20FROM%20tbl_name%20WHERE%20conditions%20LIKE%20'a%25'%3B%20%23%20%25%E4%B8%BA%E9%80%9A%E9%85%8D%E7%AC%A6%5CnSELECT%20field_list%20FROM%20tbl_name%20WHERE%20REGEXP_LIKE(field_name%2Cregex)%3B%20%23%20%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%5Cn%23%20%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%5CnDELETE%20FROM%20tbl_name%20conditions%3B%5Cn%23%20%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%5CnUPDATE%20tbl_name%20SET%20field%3Dnew_value%2C%20conditions%3B%22%7D\"></card><p><br /></p><h2 id=\"f7513baf\">Mysql数据类型</h2><h3 id=\"069eee27\">整型:默认有符号，无符号要指定unsigned</h3><p>TINYINT:1字节 无符号：-128---127  有符号： 0---255</p><p>SMALLINT:2字节 无符号：-32768---32767 有符号：0-65536</p><p>MEDIUMINT：3字节</p><p>INT：4字节</p><p>BIGINT:8字节</p><p>可以听过类似INT(2)表示显示的宽度，显示宽度不影响数值的范围，只是为了表示</p><p><br /></p><h3 id=\"a0a0a581\">小数</h3><p><strong>浮点数： </strong> 可以通过<strong>TYPE(M,D)</strong>控制数值位数，M为所有的数值位数，D为小数位数</p><p>float：单精度浮点数，默认精度位数为6左右</p><p>double：双精度浮点数，默认精度16左右</p><p><strong> 定点数： DECIMAL(M,D) </strong>同样的<span>M为所有的数值位数，D为小数位数，M默认为10，D默认为0</span></p><p><span><br /></span></p><h3 id=\"11fea612\"><span></span>日期和时间</h3><p><br /></p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A5%2C%22cols%22%3A4%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%22180%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3EDATATIME%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%20HH%3AMM%3ASS%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3ETIMESTAMP%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%20HH%3AMM%3ASS%C2%A0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cspan%3E%E4%BB%8E1970%E5%B9%B4%E5%BC%80%E5%A7%8B%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20middle%3B%20text-align%3A%20center%3B%5C%22%3E%3Cp%3EDATE%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%5C%22%3E%3Cp%3EYYYY-MM-DD%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3ETIME%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EHH%3AMM%3ASS%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cbr%20%2F%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EYEAR%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3EYYYY%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20rowspan%3D%5C%221%5C%22%20style%3D%5C%22text-align%3A%20center%3B%20vertical-align%3A%20middle%3B%20background-color%3A%20%23FFFFFF%3B%5C%22%3E%3Cp%3E%3Cspan%3E%E8%8C%83%E5%9B%B4%E4%B8%BA%3C%2Fspan%3E%3Cspan%20class%3D%5C%22lake-fontsize-10%5C%22%3E1901-2155%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%7D\"></card><h3 id=\"cc4dd1da\">字符串</h3><p><strong>CHAR(M) :</strong>表示固定长度。<span class=\"lake-fontsize-10\">M表示允许的字符串长度,限制了字符串的长度</span></p><p><strong>VARCHAR(M): </strong>可变长度 。M表示允许的最大长度，在内存中表示，需要多一个字节保存字符串的总长度，因此如果有时候不是很需要改变长度的话，尽量用固定长度的CHAR</p><p><br /></p><h2 id=\"20d99b02\">列属性</h2><h3 id=\"475cdfca\">主键</h3><p>可以唯一标识某条记录的字段或字段的集合。通常的做法是，设计每个表存在一个可以唯一标识的主键字段，最好利用与实体信息不相关的属性，作为唯一标识，与业务逻辑不发生关系，只用来记录标识，例如ID。</p><p>设置方式：在字段上设置或者定义完字段后再定义</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%E5%9C%A8%E5%AD%97%E6%AE%B5%E4%B8%8A%E8%AE%BE%E7%BD%AE%5CnCREATE%20TABLE%20pet%20(%5Cn%20%20id%20INT%20PRIMARY%20KEY%2CNAME%20VARCHAR%20(5))%3B%5Cn%23%20%E5%AE%9A%E4%B9%89%E5%AE%8C%E5%AD%97%E6%AE%B5%E5%90%8E%E5%86%8D%E8%AE%BE%E7%BD%AE%5CnCREATE%20TABLE%20pet1%20(%5Cn%5Ctid%20INT%2CNAME%20VARCHAR%20(5)%2CPRIMARY%20KEY%20(id))%3B%22%7D\"></card><p><br /></p><h3 id=\"32f9b134\">自动增长</h3><p>为每条记录提供唯一的标识，每次插入记录时，某个字段的值都自动加1，使用auto_increment标识。要求需要整型和索引。在插入数据的时候，可以选择插入null也可以不插入。  </p><p>自动增长的初始值默认是1，也可以通过 auto_increment n 重新设置从n开始增长。</p><p>也可以手动插入自动增长的值，但是如果是主键的话，不能重复。</p><h1 id=\"1bbbb204\">注意事项</h1><ul><li>数据库语言关键字一般用大写，虽然大小写都可以，但是为了区分。</li><li>数据库名的大小写取决于系统，所以操作的时候尽量有自己的规范，进行大小写区分。</li><li>NULL是区别于0或者' '的</li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-01-25T03:11:21.000Z",
    "deleted_at": null,
    "created_at": "2019-01-14T13:18:27.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2019-01-25T03:11:21.000Z",
    "first_published_at": "2019-01-25T02:48:44.000Z",
    "word_count": 1210,
    "cover": null,
    "description": "title: MySQL学习总结1-基础date: 2019-1-7 11:27:21categories: MySQLtags: [MySQL,学习]数据库和SQLSQL(Structured Query Language)：结构化查询语言。包括DDL（Data Definition Lan...",
    "custom_description": null,
    "hits": 17,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1097891,
    "slug": "ropym1",
    "title": "git同步含有git的文件夹及问题解决",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\ntitle: git同步含有git的文件夹及问题解决<br />date: 2018-12-29 11:27:21<br />tags: [git]<br />categories: 工具\n\n---\n\n同步含有git的文件夹真的有点烦，由于没有注意同步结果，只是一直在看travis构建结果，结果半天没有发现问题，后来发现了也不知道怎么解决，看远程仓库的代码是一个关联的文件夹形式，表示这是一个git的文件夹，但是点不开，本地的也没有上传。  <br /><!--more-->\n\n<a name=\"hqeqeb\"></a>\n# 首先删除.git文件\n<a name=\"ot75aa\"></a>\n# 删除git缓存\n```bash\ngit rm --cached directory\ngit add directory\n```\n详细见[Stack Overflow](https://stackoverflow.com/questions/24472596/git-fatal-pathspec-is-in-submodule) 的解释，当然是要首先把文件夹删掉，然后重新add。  \n<a name=\"7ntczy\"></a>\n# 小总结\n已经不是第一次出现这种问题了，但是上次依然没有发现，还是记录一下吧。\n\n",
    "body_draft": "\ntitle: git同步含有git的文件夹及问题解决<br />date: 2018-12-29 11:27:21<br />tags: [git]<br />categories: 工具\n\n---\n\n同步含有git的文件夹真的有点烦，由于没有注意同步结果，只是一直在看travis构建结果，结果半天没有发现问题，后来发现了也不知道怎么解决，看远程仓库的代码是一个关联的文件夹形式，表示这是一个git的文件夹，但是点不开，本地的也没有上传。  <br /><!--more-->\n\n<a name=\"hqeqeb\"></a>\n# 首先删除.git文件\n<a name=\"ot75aa\"></a>\n# 删除git缓存\n```bash\ngit rm --cached directory\ngit add directory\n```\n详细见[Stack Overflow](https://stackoverflow.com/questions/24472596/git-fatal-pathspec-is-in-submodule) 的解释，当然是要首先把文件夹删掉，然后重新add。  \n<a name=\"7ntczy\"></a>\n# 小总结\n已经不是第一次出现这种问题了，但是上次依然没有发现，还是记录一下吧。\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">title: git同步含有git的文件夹及问题解决</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">date: 2018-12-29 11:27:21</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [git]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: 工具</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22b62zy%22%7D\" id=\"b62zy\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">同步含有git的文件夹真的有点烦，由于没有注意同步结果，只是一直在看travis构建结果，结果半天没有发现问题，后来发现了也不知道怎么解决，看远程仓库的代码是一个关联的文件夹形式，表示这是一个git的文件夹，但是点不开，本地的也没有上传。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&lt;!--more--&gt;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"hqeqeb\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#hqeqeb\"></a>首先删除.git文件</h1><h1 id=\"ot75aa\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#ot75aa\"></a>删除git缓存</h1><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22006d5abd%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20rm%20--cached%20directory%5Cngit%20add%20directory%22%7D\" id=\"006d5abd\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git rm --cached directory\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git add directory</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">详细见<a href=\"https://stackoverflow.com/questions/24472596/git-fatal-pathspec-is-in-submodule\" target=\"_blank\" rel=\"noopener noreferrer\">Stack Overflow</a> 的解释，当然是要首先把文件夹删掉，然后重新add。 &nbsp;</p><h1 id=\"7ntczy\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#7ntczy\"></a>小总结</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">已经不是第一次出现这种问题了，但是上次依然没有发现，还是记录一下吧。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><p><br /></p><p>title: git同步含有git的文件夹及问题解决</p><p>date: 2018-12-29 11:27:21</p><p>tags: [git]</p><p>categories: 工具</p><p><br /></p><card type=\"block\" name=\"hr\"></card><p>同步含有git的文件夹真的有点烦，由于没有注意同步结果，只是一直在看travis构建结果，结果半天没有发现问题，后来发现了也不知道怎么解决，看远程仓库的代码是一个关联的文件夹形式，表示这是一个git的文件夹，但是点不开，本地的也没有上传。  </p><p>&lt;!--more--&gt;</p><p><br /></p><h1 id=\"hqeqeb\"><a href=\"#hqeqeb\" id=\"首先删除.git文件\"></a>首先删除.git文件</h1><h1 id=\"ot75aa\"><a href=\"#ot75aa\" id=\"删除git缓存\"></a>删除git缓存</h1><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22006d5abd%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20rm%20--cached%20directory%5Cngit%20add%20directory%22%7D\"></card><p>详细见<a href=\"https://stackoverflow.com/questions/24472596/git-fatal-pathspec-is-in-submodule\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Stack Overflow</a> 的解释，当然是要首先把文件夹删掉，然后重新add。  </p><h1 id=\"7ntczy\"><a href=\"#7ntczy\" id=\"小总结\"></a>小总结</h1><p>已经不是第一次出现这种问题了，但是上次依然没有发现，还是记录一下吧。</p><p><br /></p>",
    "body_draft_lake": "<!doctype lake><p><br /></p><p>title: git同步含有git的文件夹及问题解决</p><p>date: 2018-12-29 11:27:21</p><p>tags: [git]</p><p>categories: 工具</p><p><br /></p><card type=\"block\" name=\"hr\"></card><p>同步含有git的文件夹真的有点烦，由于没有注意同步结果，只是一直在看travis构建结果，结果半天没有发现问题，后来发现了也不知道怎么解决，看远程仓库的代码是一个关联的文件夹形式，表示这是一个git的文件夹，但是点不开，本地的也没有上传。  </p><p>&lt;!--more--&gt;</p><p><br /></p><h1 id=\"hqeqeb\"><a href=\"#hqeqeb\" id=\"首先删除.git文件\"></a>首先删除.git文件</h1><h1 id=\"ot75aa\"><a href=\"#ot75aa\" id=\"删除git缓存\"></a>删除git缓存</h1><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22006d5abd%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20rm%20--cached%20directory%5Cngit%20add%20directory%22%7D\"></card><p>详细见<a href=\"https://stackoverflow.com/questions/24472596/git-fatal-pathspec-is-in-submodule\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Stack Overflow</a> 的解释，当然是要首先把文件夹删掉，然后重新add。  </p><h1 id=\"7ntczy\"><a href=\"#7ntczy\" id=\"小总结\"></a>小总结</h1><p>已经不是第一次出现这种问题了，但是上次依然没有发现，还是记录一下吧。</p><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-07-11T15:53:42.000Z",
    "deleted_at": null,
    "created_at": "2018-12-29T03:14:29.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": "2018-12-29T03:28:09.000Z",
    "word_count": 222,
    "cover": null,
    "description": "title: git同步含有git的文件夹及问题解决date: 2018-12-29 11:27:21tags: [git]categories: 工具同步含有git的文件夹真的有点烦，由于没有注意同步结果，只是一直在看travis构建结果，结果半天没有发现问题，后来发现了也不知道怎么解决，看...",
    "custom_description": null,
    "hits": 21,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1080941,
    "slug": "gezny7",
    "title": "我的博客模板",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "title:  CentOS7安装并使用MySQL<br />date: 2018-12-9 21:57:59<br />update: 2018-12-9 21:57:59<br />categories: MySQL<br />tags: [MySQL,学习]\r\n\n---\n\n> MySQL在CentOS上的安装和使用  \n\n\n<!--more-->  \n",
    "body_html": null,
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><p>title:  CentOS7安装并使用MySQL</p><p>date: 2018-12-9 21:57:59</p><p>update: 2018-12-9 21:57:59</p><p>categories: MySQL</p><p>tags: [MySQL,学习]\r</p><card type=\"block\" name=\"hr\"></card><blockquote><p>MySQL在CentOS上的安装和使用  </p></blockquote><p><br /></p><p>&lt;!--more--&gt;  </p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2018-12-24T13:10:18.000Z",
    "deleted_at": null,
    "created_at": "2018-12-24T13:10:06.000Z",
    "updated_at": "2020-07-11T15:53:43.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": "2020-07-11T15:53:42.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "title": "无标题",
    "description": "",
    "created_at": "2018-12-24T12:55:59.000Z",
    "updated_at": "2018-12-24T12:55:59.000Z",
    "published_at": null,
    "format": "asl",
    "slug": "mkc05u",
    "last_editor": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "large_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "followers_count": 3,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2019-05-01T07:47:16.000Z",
      "_serializer": "v2.user"
    },
    "body": ""
  },
  {
    "id": 1058062,
    "slug": "ws11rq",
    "title": "2018年终总结",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-08T14:16:27.803Z",
      "updated_at": "2020-09-08T14:16:27.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "categories: life<br />tags: [生活,总结]\r\n\n---\n\n> 2018年总结。  \n\n\n<!--more-->  \n> 2018已经到了尾声了，还从来没好好总结一年，该养成及时总结反思的习惯。  \n\n\n<a name=\"lghdzp\"></a>\n# 学习\n\n- 找工作相关的内容：编程语言C++/Python/Shell脚本等，计算机网络、数据库、操作系统、服务器Nginx都有了一定的学习和总结，但是还是理论的较多一些，实践倒是有，但是还远远不够。\n\n- 跟着github上写了个C++的web服务器，不过还是有很多不明白，只是面试的时候能讲一讲。\n\n- 另外找完工作后，开始要学习Go语言，还有数据库的基础，其实总觉得数据库自己掌握的还是很少，而且以后就是DBA了，更要把基础打劳一点。\n\n\n<a name=\"l5cvuw\"></a>\n# 工作\n首先今年最重要的就是找工作了，说实话，找工作的策略并不是很好，但是也是跟自己的复习有关系吧，对于数据结构和算法，看了很多，自己也刷了很多题，但是一些复杂的算法，以及广度还是不够，所以在面试的时候遇到难点的算法题就很虚。另外就是找工作的策略上，海投的时候投了很多，以至于找工作的很多的精力都花在了不想去的公司上，而好几个大公司都没有准备好。  <br />  <br />拿到的Offer还是很乱的，国企、研究所、互联网基本上都有。总结下Offer有：  <br />国企银行：银联、招银网络  <br />研究所：航天804、中电20所、中电54所、中船重工701  <br />互联网：老虎证券、竞技世界、vipkid、好未来、新思科技、oppo、海康威视、大华、小米等  <br />最后看其实找到的工作也不是很好，其实也有个原因是小米很早给了意向就不是很想找了，很多面试都没去。策略有些问题，不过最后的结果也还不错，能回武汉工作。当然找工作的过程其实也有很大的收获，不只是技术上的，还有心理上的。  <br />   <br />关于实验室的工作，就还是那样，感觉自己的态度有一些问题，就是太不重视了，总是以老板为驱动，总想着自己以后也不从事这方面，就比较不在意，这样就有些问题。  \n\n<a name=\"n3x4yo\"></a>\n# 生活\n关于身体健康。减肥这个事情，说了很多遍，也有的时候能坚持，但是还是一直保重的状态。而且年底马上就要去当伴郎了，作为伴郎里最胖的一个，压力很大呀。今年看来希望渺茫了，把flag留给明年吧。  <br />    <br />关于读书。最近也都很久没看了。今年除了找工作看的一些专业书外，别的都看的很少了，需要加强呀。  <br />   <br />关于感情。跟亲爱的在一起了，到今天也已经300天了，时间过得很快，异地恋其实在一起的时间也不是很多，刚刚到一个月，但是互相很能为对方着想，有问题积极解决，保持几乎每天都开视频。不过关于两人的相处，还有很多需要慢慢改进。也剩明年半年的异地了，期待明年。  <br />   <br />关于家人朋友。爷爷今年去世了，享年85岁。小时候爸妈不在家，基本上爷爷奶奶从小把我带大，远在西安的我没能看到最后一面，虽然知道这一天总是会来，但是觉得太快了，以后再也没有过年在家吃饭的时候还叫上我一起陪着喝个白酒的了，喝了酒又开始讲自己小时候躲日本鬼子，年轻的时候修长江大桥了，讲以前穷日子的时候了。。你总是在长大，只是时间让你感觉长大的方式不再那么温柔了。\n\n<a name=\"97pbzi\"></a>\n# 流水\n\n- 2.24 开始跟亲爱的在一起\n\n- 3月，开始准备miniweb\n\n- 4月，参加华为的比赛，但是没有进64  \n\n- 7月，爷爷\n\n- 8-9月，找工作\n\n\n<a name=\"fuxcyt\"></a>\n# 总结\n总之，关于2018年，是失去也是收获的一年，但是不管怎么样，那都是这一年的自己，也需要更好的总结来让新的一年变得更好。  \n\n- 保持专注和思考。一直觉得认真是自己的优势之一，但是今年却感觉做很多事情的时候，不是很能专注，做事的效率不是很高了。另一个是抓住重点，时间有限，尽量做更有价值的事情，把时间看做重要的成本。这永远是核心竞争力的保证。   \n\n- 学会沟通。通过谈恋爱，以前觉得自己是一个很爱说话的人，很喜欢开玩笑的人，但现在发现自己不是一个很会沟通的人。现在发现这两个还是有区别的，笑的再好，不会沟通，问题还在那，只不过暂时忘了而已。  \n\n- 学会自律。自律才能自由，用自己的想法约束自己的行为，这才是更高程度的自由，而不是想吃就吃，想玩就玩。  \n\n- 提高自己。身体上，精神上。看书和锻炼，\n\n\n<a name=\"1gvqgu\"></a>\n# 2019计划\n一年之计在于春，先提前订点小目标吧。等年底了再来看。  \n\n- 看50本书，包括专业书和业余书。专业书主要是接下来工作需要的，数据库和Go语言方面。业余书主要关注历史和经济。  \n\n- 锻炼身体。把肚子减下去，要在130一下了吧，咳咳。  \n\n\n",
    "body_draft": "categories: life<br />tags: [生活,总结]\n\n---\n\n> 2018年总结。  \n\n\n<br /><!--more-->  \n> 2018已经到了尾声了，还从来没好好总结一年，该养成及时总结反思的习惯。  \n\n\n\n<a name=\"lghdzp\"></a>\n# 学习\n\n- 找工作相关的内容：编程语言C++/Python/Shell脚本等，计算机网络、数据库、操作系统、服务器Nginx都有了一定的学习和总结，但是还是理论的较多一些，实践倒是有，但是还远远不够。\n\n- 跟着github上写了个C++的web服务器，不过还是有很多不明白，只是面试的时候能讲一讲。\n\n- 另外找完工作后，开始要学习Go语言，还有数据库的基础，其实总觉得数据库自己掌握的还是很少，而且以后就是DBA了，更要把基础打劳一点。\n\n\n\n\n<a name=\"l5cvuw\"></a>\n# 工作\n首先今年最重要的就是找工作了，说实话，找工作的策略并不是很好，但是也是跟自己的复习有关系吧，对于数据结构和算法，看了很多，自己也刷了很多题，但是一些复杂的算法，以及广度还是不够，所以在面试的时候遇到难点的算法题就很虚。另外就是找工作的策略上，海投的时候投了很多，以至于找工作的很多的精力都花在了不想去的公司上，而好几个大公司都没有准备好。  <br /> <br />拿到的Offer还是很乱的，国企、研究所、互联网基本上都有。总结下Offer有：  <br />国企银行：银联、招银网络  <br />研究所：航天804、中电20所、中电54所、中船重工701  <br />互联网：老虎证券、竞技世界、vipkid、好未来、新思科技、oppo、海康威视、大华、小米等  <br />最后看其实找到的工作也不是很好，其实也有个原因是小米很早给了意向就不是很想找了，很多面试都没去。策略有些问题，不过最后的结果也还不错，能回武汉工作。当然找工作的过程其实也有很大的收获，不只是技术上的，还有心理上的。  <br /> <br />关于实验室的工作，就还是那样，感觉自己的态度有一些问题，就是太不重视了，总是以老板为驱动，总想着自己以后也不从事这方面，就比较不在意，这样就有些问题。  <br />\n\n<a name=\"n3x4yo\"></a>\n# 生活\n关于身体健康。减肥这个事情，说了很多遍，也有的时候能坚持，但是还是一直保重的状态。而且年底马上就要去当伴郎了，作为伴郎里最胖的一个，压力很大呀。今年看来希望渺茫了，把flag留给明年吧。  <br />   <br />关于读书。最近也都很久没看了。今年除了找工作看的一些专业书外，别的都看的很少了，需要加强呀。  <br /> <br />关于感情。跟亲爱的在一起了，到今天也已经300天了，时间过得很快，异地恋其实在一起的时间也不是很多，刚刚到一个月，但是互相很能为对方着想，有问题积极解决，保持几乎每天都开视频。不过关于两人的相处，还有很多需要慢慢改进。也剩明年半年的异地了，期待明年。  <br /> <br />关于家人朋友。爷爷今年去世了，享年85岁。小时候爸妈不在家，基本上爷爷奶奶从小把我带大，远在西安的我没能看到最后一面，虽然知道这一天总是会来，但是觉得太快了，以后再也没有过年在家吃饭的时候还叫上我一起陪着喝个白酒的了，喝了酒又开始讲自己小时候躲日本鬼子，年轻的时候修长江大桥了，讲以前穷日子的时候了。。你总是在长大，只是时间让你感觉长大的方式不再那么温柔了。<br />\n\n<a name=\"97pbzi\"></a>\n# 流水\n\n- 2.24 开始跟亲爱的在一起\n\n- 3月，开始准备miniweb\n\n- 4月，参加华为的比赛，但是没有进64  \n\n- 7月，爷爷\n\n- 8-9月，找工作\n\n\n\n\n<a name=\"fuxcyt\"></a>\n# 总结\n总之，关于2018年，是失去也是收获的一年，但是不管怎么样，那都是这一年的自己，也需要更好的总结来让新的一年变得更好。  \n\n- 保持专注和思考。一直觉得认真是自己的优势之一，但是今年却感觉做很多事情的时候，不是很能专注，做事的效率不是很高了。另一个是抓住重点，时间有限，尽量做更有价值的事情，把时间看做重要的成本。这永远是核心竞争力的保证。  \n\n- 学会沟通。通过谈恋爱，以前觉得自己是一个很爱说话的人，很喜欢开玩笑的人，但现在发现自己不是一个很会沟通的人。现在发现这两个还是有区别的，笑的再好，不会沟通，问题还在那，只不过暂时忘了而已。  \n\n- 学会自律。自律才能自由，用自己的想法约束自己的行为，这才是更高程度的自由，而不是想吃就吃，想玩就玩。  \n\n- 提高自己。身体上，精神上。看书和锻炼，\n\n\n\n\n<a name=\"1gvqgu\"></a>\n# 2019计划\n一年之计在于春，先提前订点小目标吧。等年底了再来看。  \n\n- 看50本书，包括专业书和业余书。专业书主要是接下来工作需要的，数据库和Go语言方面。业余书主要关注历史和经济。  \n\n- 锻炼身体。把肚子减下去，要在130一下了吧，咳咳。  \n\n\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: life</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [生活,总结]</p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22P4m4d%22%7D\" id=\"P4m4d\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2018年总结。 &nbsp;</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&lt;!--more--&gt; &nbsp;</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2018已经到了尾声了，还从来没好好总结一年，该养成及时总结反思的习惯。 &nbsp;</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"lghdzp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#lghdzp\"></a>学习</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">找工作相关的内容：编程语言C++/Python/Shell脚本等，计算机网络、数据库、操作系统、服务器Nginx都有了一定的学习和总结，但是还是理论的较多一些，实践倒是有，但是还远远不够。</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">跟着github上写了个C++的web服务器，不过还是有很多不明白，只是面试的时候能讲一讲。</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">另外找完工作后，开始要学习Go语言，还有数据库的基础，其实总觉得数据库自己掌握的还是很少，而且以后就是DBA了，更要把基础打劳一点。</p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"l5cvuw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#l5cvuw\"></a>工作</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">首先今年最重要的就是找工作了，说实话，找工作的策略并不是很好，但是也是跟自己的复习有关系吧，对于数据结构和算法，看了很多，自己也刷了很多题，但是一些复杂的算法，以及广度还是不够，所以在面试的时候遇到难点的算法题就很虚。另外就是找工作的策略上，海投的时候投了很多，以至于找工作的很多的精力都花在了不想去的公司上，而好几个大公司都没有准备好。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">拿到的Offer还是很乱的，国企、研究所、互联网基本上都有。总结下Offer有： &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">国企银行：银联、招银网络 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">研究所：航天804、中电20所、中电54所、中船重工701 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">互联网：老虎证券、竞技世界、vipkid、好未来、新思科技、oppo、海康威视、大华、小米等 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">最后看其实找到的工作也不是很好，其实也有个原因是小米很早给了意向就不是很想找了，很多面试都没去。策略有些问题，不过最后的结果也还不错，能回武汉工作。当然找工作的过程其实也有很大的收获，不只是技术上的，还有心理上的。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">关于实验室的工作，就还是那样，感觉自己的态度有一些问题，就是太不重视了，总是以老板为驱动，总想着自己以后也不从事这方面，就比较不在意，这样就有些问题。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"n3x4yo\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#n3x4yo\"></a>生活</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">关于身体健康。减肥这个事情，说了很多遍，也有的时候能坚持，但是还是一直保重的状态。而且年底马上就要去当伴郎了，作为伴郎里最胖的一个，压力很大呀。今年看来希望渺茫了，把flag留给明年吧。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; </p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">关于读书。最近也都很久没看了。今年除了找工作看的一些专业书外，别的都看的很少了，需要加强呀。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">关于感情。跟亲爱的在一起了，到今天也已经300天了，时间过得很快，异地恋其实在一起的时间也不是很多，刚刚到一个月，但是互相很能为对方着想，有问题积极解决，保持几乎每天都开视频。不过关于两人的相处，还有很多需要慢慢改进。也剩明年半年的异地了，期待明年。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">关于家人朋友。爷爷今年去世了，享年85岁。小时候爸妈不在家，基本上爷爷奶奶从小把我带大，远在西安的我没能看到最后一面，虽然知道这一天总是会来，但是觉得太快了，以后再也没有过年在家吃饭的时候还叫上我一起陪着喝个白酒的了，喝了酒又开始讲自己小时候躲日本鬼子，年轻的时候修长江大桥了，讲以前穷日子的时候了。。你总是在长大，只是时间让你感觉长大的方式不再那么温柔了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"97pbzi\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#97pbzi\"></a>流水</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2.24 开始跟亲爱的在一起</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3月，开始准备miniweb</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">4月，参加华为的比赛，但是没有进64 &nbsp;</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">7月，爷爷</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">8-9月，找工作</p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"fuxcyt\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#fuxcyt\"></a>总结</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">总之，关于2018年，是失去也是收获的一年，但是不管怎么样，那都是这一年的自己，也需要更好的总结来让新的一年变得更好。 &nbsp;</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">保持专注和思考。一直觉得认真是自己的优势之一，但是今年却感觉做很多事情的时候，不是很能专注，做事的效率不是很高了。另一个是抓住重点，时间有限，尽量做更有价值的事情，把时间看做重要的成本。这永远是核心竞争力的保证。 &nbsp; </p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">学会沟通。通过谈恋爱，以前觉得自己是一个很爱说话的人，很喜欢开玩笑的人，但现在发现自己不是一个很会沟通的人。现在发现这两个还是有区别的，笑的再好，不会沟通，问题还在那，只不过暂时忘了而已。 &nbsp;</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">学会自律。自律才能自由，用自己的想法约束自己的行为，这才是更高程度的自由，而不是想吃就吃，想玩就玩。 &nbsp;</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">提高自己。身体上，精神上。看书和锻炼，</p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"1gvqgu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#1gvqgu\"></a>2019计划</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">一年之计在于春，先提前订点小目标吧。等年底了再来看。 &nbsp;</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看50本书，包括专业书和业余书。专业书主要是接下来工作需要的，数据库和Go语言方面。业余书主要关注历史和经济。 &nbsp;</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">锻炼身体。把肚子减下去，要在130一下了吧，咳咳。 &nbsp;</p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><p>categories: life</p><p>tags: [生活,总结]\r</p><card type=\"block\" name=\"hr\"></card><blockquote><p>2018年总结。  </p></blockquote><p><br /></p><p>&lt;!--more--&gt;  </p><blockquote><p>2018已经到了尾声了，还从来没好好总结一年，该养成及时总结反思的习惯。  </p></blockquote><p><br /></p><h1 id=\"lghdzp\"><a href=\"#lghdzp\" id=\"学习\"></a>学习</h1><ul><li><p>找工作相关的内容：编程语言C++/Python/Shell脚本等，计算机网络、数据库、操作系统、服务器Nginx都有了一定的学习和总结，但是还是理论的较多一些，实践倒是有，但是还远远不够。</p></li></ul><ul><li><p>跟着github上写了个C++的web服务器，不过还是有很多不明白，只是面试的时候能讲一讲。</p></li></ul><ul><li><p>另外找完工作后，开始要学习Go语言，还有数据库的基础，其实总觉得数据库自己掌握的还是很少，而且以后就是DBA了，更要把基础打劳一点。</p></li></ul><p><br /></p><h1 id=\"l5cvuw\"><a href=\"#l5cvuw\" id=\"工作\"></a>工作</h1><p>首先今年最重要的就是找工作了，说实话，找工作的策略并不是很好，但是也是跟自己的复习有关系吧，对于数据结构和算法，看了很多，自己也刷了很多题，但是一些复杂的算法，以及广度还是不够，所以在面试的时候遇到难点的算法题就很虚。另外就是找工作的策略上，海投的时候投了很多，以至于找工作的很多的精力都花在了不想去的公司上，而好几个大公司都没有准备好。  </p><p>  </p><p>拿到的Offer还是很乱的，国企、研究所、互联网基本上都有。总结下Offer有：  </p><p>国企银行：银联、招银网络  </p><p>研究所：航天804、中电20所、中电54所、中船重工701  </p><p>互联网：老虎证券、竞技世界、vipkid、好未来、新思科技、oppo、海康威视、大华、小米等  </p><p>最后看其实找到的工作也不是很好，其实也有个原因是小米很早给了意向就不是很想找了，很多面试都没去。策略有些问题，不过最后的结果也还不错，能回武汉工作。当然找工作的过程其实也有很大的收获，不只是技术上的，还有心理上的。  </p><p>   </p><p>关于实验室的工作，就还是那样，感觉自己的态度有一些问题，就是太不重视了，总是以老板为驱动，总想着自己以后也不从事这方面，就比较不在意，这样就有些问题。  </p><p><br /></p><h1 id=\"n3x4yo\"><a href=\"#n3x4yo\" id=\"生活\"></a>生活</h1><p>关于身体健康。减肥这个事情，说了很多遍，也有的时候能坚持，但是还是一直保重的状态。而且年底马上就要去当伴郎了，作为伴郎里最胖的一个，压力很大呀。今年看来希望渺茫了，把flag留给明年吧。  </p><p>    </p><p>关于读书。最近也都很久没看了。今年除了找工作看的一些专业书外，别的都看的很少了，需要加强呀。  </p><p>   </p><p>关于感情。跟亲爱的在一起了，到今天也已经300天了，时间过得很快，异地恋其实在一起的时间也不是很多，刚刚到一个月，但是互相很能为对方着想，有问题积极解决，保持几乎每天都开视频。不过关于两人的相处，还有很多需要慢慢改进。也剩明年半年的异地了，期待明年。  </p><p>   </p><p>关于家人朋友。爷爷今年去世了，享年85岁。小时候爸妈不在家，基本上爷爷奶奶从小把我带大，远在西安的我没能看到最后一面，虽然知道这一天总是会来，但是觉得太快了，以后再也没有过年在家吃饭的时候还叫上我一起陪着喝个白酒的了，喝了酒又开始讲自己小时候躲日本鬼子，年轻的时候修长江大桥了，讲以前穷日子的时候了。。你总是在长大，只是时间让你感觉长大的方式不再那么温柔了。</p><p><br /></p><h1 id=\"97pbzi\"><a href=\"#97pbzi\" id=\"流水\"></a>流水</h1><ul><li><p>2.24 开始跟亲爱的在一起</p></li></ul><ul><li><p>3月，开始准备miniweb</p></li></ul><ul><li><p>4月，参加华为的比赛，但是没有进64  </p></li></ul><ul><li><p>7月，爷爷</p></li></ul><ul><li><p>8-9月，找工作</p></li></ul><p><br /></p><h1 id=\"fuxcyt\"><a href=\"#fuxcyt\" id=\"总结\"></a>总结</h1><p>总之，关于2018年，是失去也是收获的一年，但是不管怎么样，那都是这一年的自己，也需要更好的总结来让新的一年变得更好。  </p><ul><li><p>保持专注和思考。一直觉得认真是自己的优势之一，但是今年却感觉做很多事情的时候，不是很能专注，做事的效率不是很高了。另一个是抓住重点，时间有限，尽量做更有价值的事情，把时间看做重要的成本。这永远是核心竞争力的保证。   </p></li></ul><ul><li><p>学会沟通。通过谈恋爱，以前觉得自己是一个很爱说话的人，很喜欢开玩笑的人，但现在发现自己不是一个很会沟通的人。现在发现这两个还是有区别的，笑的再好，不会沟通，问题还在那，只不过暂时忘了而已。  </p></li></ul><ul><li><p>学会自律。自律才能自由，用自己的想法约束自己的行为，这才是更高程度的自由，而不是想吃就吃，想玩就玩。  </p></li></ul><ul><li><p>提高自己。身体上，精神上。看书和锻炼，</p></li></ul><p><br /></p><h1 id=\"1gvqgu\"><a href=\"#1gvqgu\" id=\"2019计划\"></a>2019计划</h1><p>一年之计在于春，先提前订点小目标吧。等年底了再来看。  </p><ul><li><p>看50本书，包括专业书和业余书。专业书主要是接下来工作需要的，数据库和Go语言方面。业余书主要关注历史和经济。  </p></li></ul><ul><li><p>锻炼身体。把肚子减下去，要在130一下了吧，咳咳。  </p></li></ul><p><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"d38bca236d6a31f34d0c780d2be84a5d_p_0\">categories: life</p><p data-lake-id=\"b855434ea4ac80572e79a10f69d1aa6d_p_1\">tags: [生活,总结]</p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%222sqy3%22%7D\"></card><blockquote><p data-lake-id=\"9d5bf463550203b571efc6ccf88bab3d_p_2\">2018年总结。  </p></blockquote><p data-lake-id=\"804b58e6d41ad7fb2480630c3092516e_p_3\"><br /></p><p data-lake-id=\"e14b1f642e92607a02a6549ae6fdad4b_p_4\">&lt;!--more--&gt;  </p><blockquote><p data-lake-id=\"3de97d44e580f9a3b2d611a2968202dc_p_5\">2018已经到了尾声了，还从来没好好总结一年，该养成及时总结反思的习惯。  </p></blockquote><p data-lake-id=\"f23fb9c519ff30bfe03d0b2cc2cac85d_p_6\"><br /></p><h1 id=\"lghdzp\" data-lake-id=\"54405da575fbcbe9bbe40c02f9a23fbc_h1_0\">学习</h1><ul data-lake-id=\"1033d6aa732ec4e0b09909fa6e3a9936_ul_0\"><li data-lake-id=\"cf046a4f9c166c4d053e30ccba9e07f2_li_0\"><p data-lake-id=\"533eec0f37c6a1c752480f8298da8848_p_7\">找工作相关的内容：编程语言C++/Python/Shell脚本等，计算机网络、数据库、操作系统、服务器Nginx都有了一定的学习和总结，但是还是理论的较多一些，实践倒是有，但是还远远不够。</p></li></ul><ul data-lake-id=\"b7e6a5c6064592e79a7e3a3085a8a6fb_ul_1\"><li data-lake-id=\"7ec491a795459803965925fe3c0239a5_li_1\"><p data-lake-id=\"2fdbb8564f6c94fa1921509a74dd11ac_p_8\">跟着github上写了个C++的web服务器，不过还是有很多不明白，只是面试的时候能讲一讲。</p></li></ul><ul data-lake-id=\"4086e6bf07a69fd1ff38ab044e78ea6b_ul_2\"><li data-lake-id=\"be791d7e46e23a82326a253b94bb0619_li_2\"><p data-lake-id=\"a3cd1b14f057c2f119e8f1161609e2d8_p_9\">另外找完工作后，开始要学习Go语言，还有数据库的基础，其实总觉得数据库自己掌握的还是很少，而且以后就是DBA了，更要把基础打劳一点。</p></li></ul><p data-lake-id=\"e04786adedb9431f1444cce41782ec91\"><br /></p><h1 id=\"l5cvuw\" data-lake-id=\"0517641f51e6a0afb9f1e678345d5083_h1_1\">工作</h1><p data-lake-id=\"977fd4d7675d8303f68cf423e3cda0b5_p_11\">首先今年最重要的就是找工作了，说实话，找工作的策略并不是很好，但是也是跟自己的复习有关系吧，对于数据结构和算法，看了很多，自己也刷了很多题，但是一些复杂的算法，以及广度还是不够，所以在面试的时候遇到难点的算法题就很虚。另外就是找工作的策略上，海投的时候投了很多，以至于找工作的很多的精力都花在了不想去的公司上，而好几个大公司都没有准备好。  </p><p data-lake-id=\"b950b9e19602aa7b4d6dc33f8cd6c9e1_p_12\"> </p><p data-lake-id=\"db46f286c46112677d52722c4faa10dc_p_13\">拿到的Offer还是很乱的，国企、研究所、互联网基本上都有。总结下Offer有：  </p><p data-lake-id=\"54271e9997f397f74c2c7f8a963392d5_p_14\">国企银行：银联、招银网络  </p><p data-lake-id=\"1189d1b581a62d52b0cd0aed3d02e069_p_15\">研究所：航天804、中电20所、中电54所、中船重工701  </p><p data-lake-id=\"00e8384ddeed7f658675862cd2895937_p_16\">互联网：老虎证券、竞技世界、vipkid、好未来、新思科技、oppo、海康威视、大华、小米等  </p><p data-lake-id=\"df9aad086f4dc725d25e5750ba2a6423_p_17\">最后看其实找到的工作也不是很好，其实也有个原因是小米很早给了意向就不是很想找了，很多面试都没去。策略有些问题，不过最后的结果也还不错，能回武汉工作。当然找工作的过程其实也有很大的收获，不只是技术上的，还有心理上的。  </p><p data-lake-id=\"ced577f9c055378d91b1985161128c72_p_18\"> </p><p data-lake-id=\"710d3de0193d0d379e003d7f9c1f7997_p_19\">关于实验室的工作，就还是那样，感觉自己的态度有一些问题，就是太不重视了，总是以老板为驱动，总想着自己以后也不从事这方面，就比较不在意，这样就有些问题。  </p><p data-lake-id=\"db841a6e995b001085603629a3ace379_p_20\"><br /></p><h1 id=\"n3x4yo\" data-lake-id=\"7fdfd23bd38479b56121cb5129bf4067_h1_2\">生活</h1><p data-lake-id=\"f854ae1a2d4402126321a47bc5f2967a_p_21\">关于身体健康。减肥这个事情，说了很多遍，也有的时候能坚持，但是还是一直保重的状态。而且年底马上就要去当伴郎了，作为伴郎里最胖的一个，压力很大呀。今年看来希望渺茫了，把flag留给明年吧。  </p><p data-lake-id=\"dfd862c413d1fd3c1267a962bbff23cb_p_22\">   </p><p data-lake-id=\"8e4e492da68af362e45c8c92c4aa586d_p_23\">关于读书。最近也都很久没看了。今年除了找工作看的一些专业书外，别的都看的很少了，需要加强呀。  </p><p data-lake-id=\"e27586d9455f1f18210953854b7e5a01_p_24\"> </p><p data-lake-id=\"5dd04cd70ba6a963777b40243033a1ff_p_25\">关于感情。跟亲爱的在一起了，到今天也已经300天了，时间过得很快，异地恋其实在一起的时间也不是很多，刚刚到一个月，但是互相很能为对方着想，有问题积极解决，保持几乎每天都开视频。不过关于两人的相处，还有很多需要慢慢改进。也剩明年半年的异地了，期待明年。  </p><p data-lake-id=\"4d1fcc9b43612ba858faa4191c271d0c_p_26\"> </p><p data-lake-id=\"cfb6e73986d9107abd5fda24fbd920b5_p_27\">关于家人朋友。爷爷今年去世了，享年85岁。小时候爸妈不在家，基本上爷爷奶奶从小把我带大，远在西安的我没能看到最后一面，虽然知道这一天总是会来，但是觉得太快了，以后再也没有过年在家吃饭的时候还叫上我一起陪着喝个白酒的了，喝了酒又开始讲自己小时候躲日本鬼子，年轻的时候修长江大桥了，讲以前穷日子的时候了。。你总是在长大，只是时间让你感觉长大的方式不再那么温柔了。</p><p data-lake-id=\"d17d837b16c49a0e5c21edc18722e410_p_28\"><br /></p><h1 id=\"97pbzi\" data-lake-id=\"0e7f99c40faf5db2520cb336826a7c4a_h1_3\">流水</h1><ul data-lake-id=\"438c646855261c973aa8e619d54ea815_ul_3\"><li data-lake-id=\"bd9dbfa7036dd28e7b59798ac6616d1d_li_3\"><p data-lake-id=\"5a9982eae72bac1e5c42bc3467831c2b_p_29\">2.24 开始跟亲爱的在一起</p></li></ul><ul data-lake-id=\"fd514c6b07f15200f1a57aea47387866_ul_4\"><li data-lake-id=\"1df72f5ba8aca5e9f5e496e7a712df73_li_4\"><p data-lake-id=\"d23529b6582244794e8ed32250066fd1_p_30\">3月，开始准备miniweb</p></li></ul><ul data-lake-id=\"e3bff9982255ef5733d366c49264928a_ul_5\"><li data-lake-id=\"58c90ca743fc32d932c1dd134a6c73b4_li_5\"><p data-lake-id=\"c12712a193d352c20bff45835689faed_p_31\">4月，参加华为的比赛，但是没有进64  </p></li></ul><ul data-lake-id=\"a5d5882d233535d6ba8fda08d904fe3e_ul_6\"><li data-lake-id=\"5750e864e820707cc48b732cc2c2212a_li_6\"><p data-lake-id=\"411c2e1cd2f4d21a0d7958bbe9f76cbe_p_32\">7月，爷爷</p></li></ul><ul data-lake-id=\"3312b48e6e1a820cf57255712879dfec_ul_7\"><li data-lake-id=\"9ee10a5f2e94564e7e70c620cd0d535b_li_7\"><p data-lake-id=\"34ee4da925666fd6295db5f10c4004cb_p_33\">8-9月，找工作</p></li></ul><p data-lake-id=\"39abba9494ef6da94608fbd0e487aa60_p_34\"><br /></p><h1 id=\"fuxcyt\" data-lake-id=\"e1dfb153e80641d2e6d4cba1df4d455c_h1_4\">总结</h1><p data-lake-id=\"12113595292d6eebd8531af398636191_p_35\">总之，关于2018年，是失去也是收获的一年，但是不管怎么样，那都是这一年的自己，也需要更好的总结来让新的一年变得更好。  </p><ul data-lake-id=\"2de8da397793dd4dee29247ddb0233f9_ul_8\"><li data-lake-id=\"be49d002a7fcd45648a5a448ff9e6fa1_li_8\"><p data-lake-id=\"d0160f49cbc98fa3936decdd48e18730_p_36\">保持专注和思考。一直觉得认真是自己的优势之一，但是今年却感觉做很多事情的时候，不是很能专注，做事的效率不是很高了。另一个是抓住重点，时间有限，尽量做更有价值的事情，把时间看做重要的成本。这永远是核心竞争力的保证。  </p></li></ul><ul data-lake-id=\"3833d1bad8711223d2646ab8b5265ac1_ul_9\"><li data-lake-id=\"4f85981837f0ad326066e9442ef96aea_li_9\"><p data-lake-id=\"26bc781bbc886d6073de0e4b03b62432_p_37\">学会沟通。通过谈恋爱，以前觉得自己是一个很爱说话的人，很喜欢开玩笑的人，但现在发现自己不是一个很会沟通的人。现在发现这两个还是有区别的，笑的再好，不会沟通，问题还在那，只不过暂时忘了而已。  </p></li></ul><ul data-lake-id=\"842f33e5f411f4d1ca545141eba4bf2d_ul_10\"><li data-lake-id=\"cd88ab3b10565389673dd57051ed88e3_li_10\"><p data-lake-id=\"6378e740241fe60c1cc58ae857dac07d_p_38\">学会自律。自律才能自由，用自己的想法约束自己的行为，这才是更高程度的自由，而不是想吃就吃，想玩就玩。  </p></li></ul><ul data-lake-id=\"9da30aa00f424ca4ca1051be144f5a3f_ul_11\"><li data-lake-id=\"afbe094e968e7502b6786578355ef66e_li_11\"><p data-lake-id=\"2fddce4af8f00f5bc08900806ee2e66f_p_39\">提高自己。身体上，精神上。看书和锻炼，</p></li></ul><p data-lake-id=\"17b412f9fc3ec51ada5f566f0d09108c_p_40\"><br /></p><h1 id=\"1gvqgu\" data-lake-id=\"6153ccd38d99961b6e8a5e9651632ef8_h1_5\">2019计划</h1><p data-lake-id=\"f6732e22481fa7fed0cb86feca410933_p_41\">一年之计在于春，先提前订点小目标吧。等年底了再来看。  </p><ul data-lake-id=\"636f51d49248575e9f2ce6be609233cc_ul_12\"><li data-lake-id=\"47400378e720024792cab8a3eda1b28b_li_12\"><p data-lake-id=\"36d0df68a918f4ebd7a9786a5c8172f0_p_42\">看50本书，包括专业书和业余书。专业书主要是接下来工作需要的，数据库和Go语言方面。业余书主要关注历史和经济。  </p></li></ul><ul data-lake-id=\"af315d6d2128a026b074b5b693d172ca_ul_13\"><li data-lake-id=\"f6dd19e2b5404b2aa45edb1df1ae5442_li_13\"><p data-lake-id=\"8939a6e29c0332cf18fbc9ea5ef89c96_p_43\">锻炼身体。把肚子减下去，要在130一下了吧，咳咳。  </p></li></ul><p data-lake-id=\"157b805d005afe38c7c2d5198b31ee6e_p_44\"><br /></p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 1,
    "comments_count": 2,
    "content_updated_at": "2020-09-08T14:30:10.000Z",
    "deleted_at": null,
    "created_at": "2018-12-16T11:02:22.000Z",
    "updated_at": "2020-09-08T14:30:10.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": "2018-12-25T12:49:09.000Z",
    "word_count": 1605,
    "cover": null,
    "description": "categories: lifetags: [生活,总结]2018年总结。  <!--more-->  2018已经到了尾声了，还从来没好好总结一年，该养成及时总结反思的习惯。  学习找工作相关的内容：编程语言C++/Python/Shell脚本等，计算机网络、数据库、操作系统、服务器Ngin...",
    "custom_description": null,
    "hits": 44,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1049377,
    "slug": "nb89bz",
    "title": "信息爆炸时代的自我约束",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "> 信息爆炸已经是个很古老的话题了\n\n\n\n<a name=\"4i35nn\"></a>\n## How To Do\n\n- 做事情抓住重点。把时间当作重要的成本，然后有所见有所不见，有所做，有所不做。  \n\n- 静下心做事情。正是由于现在获取信息太简单了，很多东西及时想到，就可以网络中找到，或者一点点年头，就能在网上看一会，可能时间不长，但是可能还会影响自己接下来做事情。另一个重要的是，就是一直需要的，专注做该做的事情，工作的时候认真工作，玩的时候认真玩。  \n\n- 及时总结。  \n\n\n\n",
    "body_html": null,
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><blockquote><p>信息爆炸已经是个很古老的话题了</p></blockquote><p><br /></p><p><br /></p><h2 id=\"4i35nn\"><a href=\"#4i35nn\" id=\"how-to-do\"></a>How To Do</h2><ul><li><p>做事情抓住重点。把时间当作重要的成本，然后有所见有所不见，有所做，有所不做。  </p></li></ul><ul><li><p>静下心做事情。正是由于现在获取信息太简单了，很多东西及时想到，就可以网络中找到，或者一点点年头，就能在网上看一会，可能时间不长，但是可能还会影响自己接下来做事情。另一个重要的是，就是一直需要的，专注做该做的事情，工作的时候认真工作，玩的时候认真玩。  </p></li></ul><ul><li><p>及时总结。  </p></li></ul><p><br /></p><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2018-12-12T12:08:46.000Z",
    "deleted_at": null,
    "created_at": "2018-12-12T11:52:52.000Z",
    "updated_at": "2020-07-11T15:53:43.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": "2020-07-11T15:53:42.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1037355,
    "slug": "afzlb7",
    "title": "CentOS7安装并使用MySQL",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title:  CentOS7安装并使用MySQL<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n> MySQL在CentOS上的安装和使用  \n\n\n<!--more-->  \n<a name=\"nvr1gq\"></a>\n# yum安装\ndate: 2018-12-9 21:57:59<br />update: 2018-12-9 21:57:59<br />1.首先找到官网yum的地址：[https://dev.mysql.com/downloads/repo/yum/](https://dev.mysql.com/downloads/repo/yum/)，找到redhat的版本**Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package**,并复制download的地址，然后下载下来：\n```bash\nwget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n```\n\n2.进行rpm解包并安装mysql-server\n```bash\nrpm -ivh mysql-community-release-el7-5.noarch.rpm\nyum update\nyum install mysql-server\n```\n3.修改权限\n```bash\nchown mysql:mysql -R /var/lib/mysql\n```\n4.然后就可以启动mysql了。。\n```bash\nsystemctl start mysqld\n```\n\n<a name=\"1qgpbs\"></a>\n# 问题记录\n当然，看着上面好像很爽，很快的样子，但是没想到接下来坑还是很多的。都有点怀疑自己了，到现在装个mysql还这么多问题。关键是，网上的解决办法，都是什么乱七八糟的。\n<a name=\"117oeg\"></a>\n## 1.状态查看-灰色\n```powershell\n➜  ~ systemctl status mysqld\n● mysqld.service - MySQL Server\n   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n   Active: inactive (dead)\n     Docs: man:mysqld(8)\n           http://dev.mysql.com/doc/refman/en/using-systemd.html\n\n➜  ~ ps ajx | grep mysql\n 1768  1784  1784  1784 ?           -1 Ssl    999   0:19 mysqld\n```\n1.看了一下版本号，没错是8.0：\n```bash\n➜  ~ mysqladmin --version\nmysqladmin  Ver 8.0.13 for Linux on x86_64 (MySQL Community Server - GPL)\n```\n2.然后mysql连一波，出问题，连不上：\n```bash\n➜  ~ mysql\nERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)\n```\n看样子是没有这个socket，应该是位置不对，于是`sudo find / -name mysql.sock `赶紧搜一下，什么都没有，没有办法，重启一下试试吧。<br />3.重启\n```bash\n➜  ~ sudo systemctl restart mysqld\nJob for mysqld.service failed because the control process exited with error code. See \"systemctl status mysqld.service\" and \"journalctl -xe\" for details.\n```\n不行，换种方式重启看看：\n```bash\n➜  ~ service mysqld start\nRedirecting to /bin/systemctl start mysqld.service\n==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===\nAuthentication is required to manage system services or units.\nAuthenticating as: root\nPassword: \npolkit-agent-helper-1: pam_authenticate failed: Authentication failure\n==== AUTHENTICATION FAILED ===\nFailed to start mysqld.service: Access denied\nSee system logs and 'systemctl status mysqld.service' for details.\n```\n\n<a name=\"5wg9re\"></a>\n## 2.错误：2002\n错误详情：<br />ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)\n\n这个错误网上找了一下，有看起来还可以的处理:[http://blog.51cto.com/pengjc/1861088](http://blog.51cto.com/pengjc/1861088) 。但是实际上我打开都没有这个文件，搜也没有搜到，于是放弃，这个问题应该不算个问题，先放着解决别的。  \n\n<a name=\"e6syft\"></a>\n## 3.错误：service failed\n错误详情：<br />Job for mysqld.service failed because the control process exited with error code. See \"systemctl status mysqld.service\" and \"journalctl -xe\" for details.<br />看了一下网上的解决办法，说是由于权限的问题：[https://www.cnblogs.com/ivictor/p/5146247.html](https://www.cnblogs.com/ivictor/p/5146247.html) ，通过命令`chown mysql.mysql /var/run/mysqld/`，但是问题还是没有解决。  <br />看了一下[stackoverflow](https://stackoverflow.com/questions/42317139/job-for-mysqld-service-failed-see-systemctl-status-mysqld-service)上面的说法，先通过`tail -f /var/log/mysqld.log`查看一下,，但是我的这个问题不是因为没有权限，\n```bash\n➜  ~  tail /var/log/mysqld.log\n2018-12-07T09:13:21.651467Z 0 [ERROR] [MY-010119] [Server] Aborting\n2018-12-07T09:13:21.655750Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.13)  MySQL Community Server - GPL.\n2018-12-07T09:15:40.466437Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.13) starting as process 12759\n2018-12-07T09:15:40.965670Z 0 [ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12\n2018-12-07T09:15:40.965740Z 1 [ERROR] [MY-012956] [InnoDB] Cannot allocate memory for the buffer pool\n2018-12-07T09:15:40.965766Z 1 [ERROR] [MY-012930] [InnoDB] Plugin initialization aborted with error Generic error.\n2018-12-07T09:15:40.965794Z 1 [ERROR] [MY-010334] [Server] Failed to initialize DD Storage Engine\n2018-12-07T09:15:40.965949Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.\n2018-12-07T09:15:40.965977Z 0 [ERROR] [MY-010119] [Server] Aborting\n2018-12-07T09:15:40.966835Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.13)  MySQL Community Server - GPL.\n```\n搜了一下这个问题：<br />`[ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12`<br />看样子是内存映射出错，再通过命令`journalctl -xe`看一下,同时也找到了原因：原来是**swap分区是0(https://blog.csdn.net/sxyandapp/article/details/77091007),于是一阵操作：**\n```bash\n➜  ~ free -m\n/dev/vda1            /                    ext4       noatime,acl,user_xattr 1 1\n              total        used        free      shared  buff/cache   available\nMem:            992         516         304           0         171         321\nSwap:             0           0           0\n\n➜  ~ dd if=/dev/zero of=/swap bs=1M count=512\ndd: failed to open ‘/swap’: Permission denied\n\n➜  ~ sudo dd if=/dev/zero of=/swap bs=1M count=512\n512+0 records in\n512+0 records out\n536870912 bytes (537 MB) copied, 4.01658 s, 134 MB/s\n\n➜  ~ sudo mkswap /swap \nSetting up swapspace version 1, size = 524284 KiB\nno label, UUID=9bbac588-e6ee-4b1c-a398-4ac460ad476a\n\n➜  ~ sudo swapon /swap \nswapon: /swap: insecure permissions 0644, 0600 suggested.\n\n➜  ~ free -m                \n              total        used        free      shared  buff/cache   available\nMem:            992         516          64           0         410         317\nSwap:           511           0         511\n\n\nvi /etc/fstab\n#在其中添加如下一行,保证下次系统启动后，此swap分区被自动加载，需要修改系统的fstab文件\n/swap swap swap defaults 0 0\n```\n之后再重启就好了。\n<a name=\"75lwvk\"></a>\n## 4.错误：登录问题\n错误详情：<br />error: 'Access denied for user 'root'@'localhost' (using password: NO)'\n\n这个其实是密码的问题，没有设置密码的时候，mysql会生成一个临时的密码，通过命令：\n```bash\n➜  ~ sudo grep 'temporary password' /var/log/mysqld.log\n2018-12-07T09:08:22.908621Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: TdqPeZ-n;4Ah\n```\n可以看到生成的临时密码，然后用临时密码登录即可。\n\n<a name=\"wt3kod\"></a>\n## 5.修改密码\n可能因为8.0的版本，修改的密码不能过于简单，并且命令好像也有些不一样了，用的是``\n```bash\nALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';\n```\n\n看到一个别人的回答：<br />![](https://cdn.nlark.com/yuque/0/2018/png/187932/1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png#align=left&display=inline&height=148&originHeight=148&originWidth=695&status=done&width=695)<br />应该是后面才改的？\n\n<a name=\"69ioxf\"></a>\n# 6.外网连接mysql\n由于两台服务器的版本有点不一样，修改外网连接也有点不一样。\n<a name=\"zvrisn\"></a>\n## [MySQL5.7](https://blog.csdn.net/w20228396/article/details/70143500)\n1.修改配置文件\n```bash\n#修改配置文件\nsudo vi /etc/mysql/mysql.conf.d/mysqld.cnf   # bind-address=127.0.0.1 修改成 bind-address=0.0.0.0\n\n# 重启服务\nservice mysql restart\n\n# 添加远程连接mysql的账号\n> grant all on *.* to root@'%' identified by '123456';\n> flush privileges;\n# \n*.*          第一个*表示库，第二个*表示表; *.*对全部数据库的全部表授权，so.ok 表示只对so这个库中的ok表授权\nroot        表示要给哪个用户授权，这个用户可以是存在的用户，也可以是不存在的\n'%'          表示允许远程连接的IP地址，%代表允许所有IP连接\n```\n\n<a name=\"d0cydb\"></a>\n## [MySQL8.0](https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0)\n8.0的版本总结的对权限的管理严格很多，毕竟数据很重要，只有安全才能放心。尝试过上述方式，但是连接不上。最终在Stack Overflow上找到了办法。\n```bash\nCREATE USER 'root'@'%' IDENTIFIED BY 'root';\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;\n```\n但是修改之后还是会有问题，出现了2059错误：  <br />![](https://cdn.nlark.com/yuque/0/2018/png/187932/1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png#align=left&display=inline&height=129&originHeight=129&originWidth=586&status=done&width=586)<br />解决方式可以采用修改密码为简单密码：\n```bash\nSET GLOBAL validate_password.policy=0;\nALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '12345678';\n```\n\n<a name=\"iEnxq\"></a>\n# 使用过程问题\n<a name=\"aV8gC\"></a>\n## 1.导入数据出错\n错误代码：\n\n```\nmysql> LOAD DATA LOCAL INFILE '/home/mianhk/pet.txt' INTO TABLE pet;\nERROR 1148 (42000): The used command is not allowed with this MySQL version\n\nmysql> LOAD DATA INFILE '/home/mianhk/pet.txt' INTO TABLE pet;                             \nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it ca\nnnot execute this statement\n\nmysql> LOAD DATA INFILE '/home/mianhk/pet.txt' INTO TABLE pet LINES TERMINATED BY '\\r\\n';\nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it ca\nnnot execute this statement\n```\n原因：<br />secure_file_priv 设置了指定目录，需要在指定的目录下进行数据导出。\n\n```\nmysql> show variables like '%secure%';\n+--------------------------+-----------------------+\n| Variable_name            | Value                 |\n+--------------------------+-----------------------+\n| require_secure_transport | OFF                   |\n| secure_file_priv         | /var/lib/mysql-files/ |+--------------------------+-----------------------+\n2 rows in set (0.01 sec)\n```\n\n数据导入需要注意的:\n\n- 空值要用 `\\N` 代替，而不能直接使用空\n- 分隔符一般用 `tab` \n- 注意换行符\n\n<a name=\"dinty\"></a>\n# 总结\n总之，感觉之前windows和ubuntu下都没有这么麻烦，这里总结一下吧，感觉以后会用的很多，不想踩坑了。\n\n<a name=\"ex7rxf\"></a>\n# 参考：\n[MySQL8.0.11连接错误2059解决方法](https://juejin.im/entry/5af5d2786fb9a07aaf3547cc)<br />[How to grant all privileges to root user in MySQL 8.0](https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0)<br />[centos mysql初探 -- 配置、基本操作及问题](https://www.cnblogs.com/echo-coding/p/9172636.html)\n\n\n\n",
    "body_draft": "title:  CentOS7安装并使用MySQL<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n> MySQL在CentOS上的安装和使用  \n\n\n<!--more-->  \n<a name=\"nvr1gq\"></a>\n# yum安装\ndate: 2018-12-9 21:57:59<br />update: 2018-12-9 21:57:59<br />1.首先找到官网yum的地址：[https://dev.mysql.com/downloads/repo/yum/](https://dev.mysql.com/downloads/repo/yum/)，找到redhat的版本**Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package**,并复制download的地址，然后下载下来：\n```bash\nwget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n```\n\n2.进行rpm解包并安装mysql-server\n```bash\nrpm -ivh mysql-community-release-el7-5.noarch.rpm\nyum update\nyum install mysql-server\n```\n3.修改权限\n```bash\nchown mysql:mysql -R /var/lib/mysql\n```\n4.然后就可以启动mysql了。。\n```bash\nsystemctl start mysqld\n```\n\n<a name=\"1qgpbs\"></a>\n# 问题记录\n当然，看着上面好像很爽，很快的样子，但是没想到接下来坑还是很多的。都有点怀疑自己了，到现在装个mysql还这么多问题。关键是，网上的解决办法，都是什么乱七八糟的。\n<a name=\"117oeg\"></a>\n## 1.状态查看-灰色\n```powershell\n➜  ~ systemctl status mysqld\n● mysqld.service - MySQL Server\n   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n   Active: inactive (dead)\n     Docs: man:mysqld(8)\n           http://dev.mysql.com/doc/refman/en/using-systemd.html\n\n➜  ~ ps ajx | grep mysql\n 1768  1784  1784  1784 ?           -1 Ssl    999   0:19 mysqld\n```\n1.看了一下版本号，没错是8.0：\n```bash\n➜  ~ mysqladmin --version\nmysqladmin  Ver 8.0.13 for Linux on x86_64 (MySQL Community Server - GPL)\n```\n2.然后mysql连一波，出问题，连不上：\n```bash\n➜  ~ mysql\nERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)\n```\n看样子是没有这个socket，应该是位置不对，于是`sudo find / -name mysql.sock `赶紧搜一下，什么都没有，没有办法，重启一下试试吧。<br />3.重启\n```bash\n➜  ~ sudo systemctl restart mysqld\nJob for mysqld.service failed because the control process exited with error code. See \"systemctl status mysqld.service\" and \"journalctl -xe\" for details.\n```\n不行，换种方式重启看看：\n```bash\n➜  ~ service mysqld start\nRedirecting to /bin/systemctl start mysqld.service\n==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===\nAuthentication is required to manage system services or units.\nAuthenticating as: root\nPassword: \npolkit-agent-helper-1: pam_authenticate failed: Authentication failure\n==== AUTHENTICATION FAILED ===\nFailed to start mysqld.service: Access denied\nSee system logs and 'systemctl status mysqld.service' for details.\n```\n\n<a name=\"5wg9re\"></a>\n## 2.错误：2002\n错误详情：<br />ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)\n\n这个错误网上找了一下，有看起来还可以的处理:[http://blog.51cto.com/pengjc/1861088](http://blog.51cto.com/pengjc/1861088) 。但是实际上我打开都没有这个文件，搜也没有搜到，于是放弃，这个问题应该不算个问题，先放着解决别的。  \n\n<a name=\"e6syft\"></a>\n## 3.错误：service failed\n错误详情：<br />Job for mysqld.service failed because the control process exited with error code. See \"systemctl status mysqld.service\" and \"journalctl -xe\" for details.<br />看了一下网上的解决办法，说是由于权限的问题：[https://www.cnblogs.com/ivictor/p/5146247.html](https://www.cnblogs.com/ivictor/p/5146247.html) ，通过命令`chown mysql.mysql /var/run/mysqld/`，但是问题还是没有解决。  <br />看了一下[stackoverflow](https://stackoverflow.com/questions/42317139/job-for-mysqld-service-failed-see-systemctl-status-mysqld-service)上面的说法，先通过`tail -f /var/log/mysqld.log`查看一下,，但是我的这个问题不是因为没有权限，\n```bash\n➜  ~  tail /var/log/mysqld.log\n2018-12-07T09:13:21.651467Z 0 [ERROR] [MY-010119] [Server] Aborting\n2018-12-07T09:13:21.655750Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.13)  MySQL Community Server - GPL.\n2018-12-07T09:15:40.466437Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.13) starting as process 12759\n2018-12-07T09:15:40.965670Z 0 [ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12\n2018-12-07T09:15:40.965740Z 1 [ERROR] [MY-012956] [InnoDB] Cannot allocate memory for the buffer pool\n2018-12-07T09:15:40.965766Z 1 [ERROR] [MY-012930] [InnoDB] Plugin initialization aborted with error Generic error.\n2018-12-07T09:15:40.965794Z 1 [ERROR] [MY-010334] [Server] Failed to initialize DD Storage Engine\n2018-12-07T09:15:40.965949Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.\n2018-12-07T09:15:40.965977Z 0 [ERROR] [MY-010119] [Server] Aborting\n2018-12-07T09:15:40.966835Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.13)  MySQL Community Server - GPL.\n```\n搜了一下这个问题：<br />`[ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12`<br />看样子是内存映射出错，再通过命令`journalctl -xe`看一下,同时也找到了原因：原来是**swap分区是0(https://blog.csdn.net/sxyandapp/article/details/77091007),于是一阵操作：**\n```bash\n➜  ~ free -m\n/dev/vda1            /                    ext4       noatime,acl,user_xattr 1 1\n              total        used        free      shared  buff/cache   available\nMem:            992         516         304           0         171         321\nSwap:             0           0           0\n\n➜  ~ dd if=/dev/zero of=/swap bs=1M count=512\ndd: failed to open ‘/swap’: Permission denied\n\n➜  ~ sudo dd if=/dev/zero of=/swap bs=1M count=512\n512+0 records in\n512+0 records out\n536870912 bytes (537 MB) copied, 4.01658 s, 134 MB/s\n\n➜  ~ sudo mkswap /swap \nSetting up swapspace version 1, size = 524284 KiB\nno label, UUID=9bbac588-e6ee-4b1c-a398-4ac460ad476a\n\n➜  ~ sudo swapon /swap \nswapon: /swap: insecure permissions 0644, 0600 suggested.\n\n➜  ~ free -m                \n              total        used        free      shared  buff/cache   available\nMem:            992         516          64           0         410         317\nSwap:           511           0         511\n\n\nvi /etc/fstab\n#在其中添加如下一行,保证下次系统启动后，此swap分区被自动加载，需要修改系统的fstab文件\n/swap swap swap defaults 0 0\n```\n之后再重启就好了。\n<a name=\"75lwvk\"></a>\n## 4.错误：登录问题\n错误详情：<br />error: 'Access denied for user 'root'@'localhost' (using password: NO)'\n\n这个其实是密码的问题，没有设置密码的时候，mysql会生成一个临时的密码，通过命令：\n```bash\n➜  ~ sudo grep 'temporary password' /var/log/mysqld.log\n2018-12-07T09:08:22.908621Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: TdqPeZ-n;4Ah\n```\n可以看到生成的临时密码，然后用临时密码登录即可。\n\n<a name=\"wt3kod\"></a>\n## 5.修改密码\n可能因为8.0的版本，修改的密码不能过于简单，并且命令好像也有些不一样了，用的是``\n```bash\nALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';\n```\n\n看到一个别人的回答：<br />![](https://cdn.nlark.com/yuque/0/2018/png/187932/1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png#align=left&display=inline&height=148&originHeight=148&originWidth=695&status=done&width=695)<br />应该是后面才改的？\n\n<a name=\"69ioxf\"></a>\n# 6.外网连接mysql\n由于两台服务器的版本有点不一样，修改外网连接也有点不一样。\n<a name=\"zvrisn\"></a>\n## [MySQL5.7](https://blog.csdn.net/w20228396/article/details/70143500)\n1.修改配置文件\n```bash\n#修改配置文件\nsudo vi /etc/mysql/mysql.conf.d/mysqld.cnf   # bind-address=127.0.0.1 修改成 bind-address=0.0.0.0\n\n# 重启服务\nservice mysql restart\n\n# 添加远程连接mysql的账号\n> grant all on *.* to root@'%' identified by '123456';\n> flush privileges;\n# \n*.*          第一个*表示库，第二个*表示表; *.*对全部数据库的全部表授权，so.ok 表示只对so这个库中的ok表授权\nroot        表示要给哪个用户授权，这个用户可以是存在的用户，也可以是不存在的\n'%'          表示允许远程连接的IP地址，%代表允许所有IP连接\n```\n\n<a name=\"d0cydb\"></a>\n## [MySQL8.0](https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0)\n8.0的版本总结的对权限的管理严格很多，毕竟数据很重要，只有安全才能放心。尝试过上述方式，但是连接不上。最终在Stack Overflow上找到了办法。\n```bash\nCREATE USER 'root'@'%' IDENTIFIED BY 'root';\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;\n```\n但是修改之后还是会有问题，出现了2059错误：  <br />![](https://cdn.nlark.com/yuque/0/2018/png/187932/1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png#align=left&display=inline&height=129&originHeight=129&originWidth=586&status=done&width=586)<br />解决方式可以采用修改密码为简单密码：\n```bash\nSET GLOBAL validate_password.policy=0;\nALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '12345678';\n```\n\n<a name=\"iEnxq\"></a>\n# 使用过程问题\n<a name=\"aV8gC\"></a>\n## 1.导入数据出错\n错误代码：\n\n```\nmysql> LOAD DATA LOCAL INFILE '/home/mianhk/pet.txt' INTO TABLE pet;\nERROR 1148 (42000): The used command is not allowed with this MySQL version\n\nmysql> LOAD DATA INFILE '/home/mianhk/pet.txt' INTO TABLE pet;                             \nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it ca\nnnot execute this statement\n\nmysql> LOAD DATA INFILE '/home/mianhk/pet.txt' INTO TABLE pet LINES TERMINATED BY '\\r\\n';\nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it ca\nnnot execute this statement\n\nmysql> LOAD DATA INFILE '/var/lib/mysql-files/pet.txt' INTO TABLE pet;\nQuery OK, 10 rows affected (0.01 sec)\nRecords: 10  Deleted: 0  Skipped: 0  Warnings: 0\n```\n原因：<br />secure_file_priv 设置了指定目录，需要在指定的目录下进行数据导出。\n\n```\nmysql> show variables like '%secure%';\n+--------------------------+-----------------------+\n| Variable_name            | Value                 |\n+--------------------------+-----------------------+\n| require_secure_transport | OFF                   |\n| secure_file_priv         | /var/lib/mysql-files/ |+--------------------------+-----------------------+\n2 rows in set (0.01 sec)\n```\n\n数据导入需要注意的:\n\n- 空值要用 `\\N` 代替，而不能直接使用空\n- 分隔符一般用 `tab` \n- 注意换行符\n\n<a name=\"dinty\"></a>\n# 总结\n总之，感觉之前windows和ubuntu下都没有这么麻烦，这里总结一下吧，感觉以后会用的很多，不想踩坑了。\n\n<a name=\"ex7rxf\"></a>\n# 参考：\n[MySQL8.0.11连接错误2059解决方法](https://juejin.im/entry/5af5d2786fb9a07aaf3547cc)<br />[How to grant all privileges to root user in MySQL 8.0](https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0)<br />[centos mysql初探 -- 配置、基本操作及问题](https://www.cnblogs.com/echo-coding/p/9172636.html)\n\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">title: &nbsp;CentOS7安装并使用MySQL</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: MySQL</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [MySQL,学习]</p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22Mk9yL%22%7D\" id=\"Mk9yL\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">MySQL在CentOS上的安装和使用 &nbsp;</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&lt;!--more--&gt; &nbsp;</p><h1 id=\"nvr1gq\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#nvr1gq\"></a>yum安装</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">date: 2018-12-9 21:57:59</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">update: 2018-12-9 21:57:59</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1.首先找到官网yum的地址：<a href=\"https://dev.mysql.com/downloads/repo/yum/\" target=\"_blank\" rel=\"noopener noreferrer\">https://dev.mysql.com/downloads/repo/yum/</a>，找到redhat的版本<strong>Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package</strong>,并复制download的地址，然后下载下来：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22e009d44e%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22wget%20http%3A%2F%2Frepo.mysql.com%2Fmysql-community-release-el7-5.noarch.rpm%22%7D\" id=\"e009d44e\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2.进行rpm解包并安装mysql-server</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2268cb047b%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22rpm%20-ivh%20mysql-community-release-el7-5.noarch.rpm%5Cnyum%20update%5Cnyum%20install%20mysql-server%22%7D\" id=\"68cb047b\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rpm -ivh mysql-community-release-el7-5.noarch.rpm\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">yum update\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">yum install mysql-server</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3.修改权限</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%227a8db900%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22chown%20mysql%3Amysql%20-R%20%2Fvar%2Flib%2Fmysql%22%7D\" id=\"7a8db900\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">chown mysql:mysql -R /var/lib/mysql</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">4.然后就可以启动mysql了。。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22f6cd2da2%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22systemctl%20start%20mysqld%22%7D\" id=\"f6cd2da2\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">systemctl start mysqld</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"1qgpbs\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#1qgpbs\"></a>问题记录</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当然，看着上面好像很爽，很快的样子，但是没想到接下来坑还是很多的。都有点怀疑自己了，到现在装个mysql还这么多问题。关键是，网上的解决办法，都是什么乱七八糟的。</p><h2 id=\"117oeg\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#117oeg\"></a>1.状态查看-灰色</h2><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22e10fa695%22%2C%22mode%22%3A%22powershell%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20systemctl%20status%20mysqld%5Cn%E2%97%8F%20mysqld.service%20-%20MySQL%20Server%5Cn%20%20%20Loaded%3A%20loaded%20(%2Fusr%2Flib%2Fsystemd%2Fsystem%2Fmysqld.service%3B%20enabled%3B%20vendor%20preset%3A%20disabled)%5Cn%20%20%20Active%3A%20inactive%20(dead)%5Cn%20%20%20%20%20Docs%3A%20man%3Amysqld(8)%5Cn%20%20%20%20%20%20%20%20%20%20%20http%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2Fen%2Fusing-systemd.html%5Cn%5Cn%E2%9E%9C%20%20~%20ps%20ajx%20%7C%20grep%20mysql%5Cn%201768%20%201784%20%201784%20%201784%20%3F%20%20%20%20%20%20%20%20%20%20%20-1%20Ssl%20%20%20%20999%20%20%200%3A19%20mysqld%22%7D\" id=\"e10fa695\" data-language=\"powershell\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ systemctl status mysqld\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">● mysqld.service - MySQL Server\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   Active: inactive (dead)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">     Docs: man:mysqld(8)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">           http://dev.mysql.com/doc/refman/en/using-systemd.html\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ ps ajx | grep mysql\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> 1768  1784  1784  1784 ?           -1 Ssl    999   0:19 mysqld</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1.看了一下版本号，没错是8.0：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22caff7955%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20mysqladmin%20--version%5Cnmysqladmin%20%20Ver%208.0.13%20for%20Linux%20on%20x86_64%20(MySQL%20Community%20Server%20-%20GPL)%22%7D\" id=\"caff7955\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ mysqladmin --version\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mysqladmin  Ver 8.0.13 for Linux on x86_64 (MySQL Community Server - GPL)</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2.然后mysql连一波，出问题，连不上：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%221ee30587%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20mysql%5CnERROR%202002%20(HY000)%3A%20Can't%20connect%20to%20local%20MySQL%20server%20through%20socket%20'%2Fvar%2Flib%2Fmysql%2Fmysql.sock'%20(2)%22%7D\" id=\"1ee30587\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ mysql\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看样子是没有这个socket，应该是位置不对，于是`sudo find / -name mysql.sock `赶紧搜一下，什么都没有，没有办法，重启一下试试吧。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3.重启</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22eb61b0ea%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20sudo%20systemctl%20restart%20mysqld%5CnJob%20for%20mysqld.service%20failed%20because%20the%20control%20process%20exited%20with%20error%20code.%20See%20%5C%22systemctl%20status%20mysqld.service%5C%22%20and%20%5C%22journalctl%20-xe%5C%22%20for%20details.%22%7D\" id=\"eb61b0ea\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ sudo systemctl restart mysqld\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Job for mysqld.service failed because the control process exited with error code. See \"systemctl status mysqld.service\" and \"journalctl -xe\" for details.</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">不行，换种方式重启看看：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22a4f327ae%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20service%20mysqld%20start%5CnRedirecting%20to%20%2Fbin%2Fsystemctl%20start%20mysqld.service%5Cn%3D%3D%3D%3D%20AUTHENTICATING%20FOR%20org.freedesktop.systemd1.manage-units%20%3D%3D%3D%5CnAuthentication%20is%20required%20to%20manage%20system%20services%20or%20units.%5CnAuthenticating%20as%3A%20root%5CnPassword%3A%20%5Cnpolkit-agent-helper-1%3A%20pam_authenticate%20failed%3A%20Authentication%20failure%5Cn%3D%3D%3D%3D%20AUTHENTICATION%20FAILED%20%3D%3D%3D%5CnFailed%20to%20start%20mysqld.service%3A%20Access%20denied%5CnSee%20system%20logs%20and%20'systemctl%20status%20mysqld.service'%20for%20details.%22%7D\" id=\"a4f327ae\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ service mysqld start\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Redirecting to /bin/systemctl start mysqld.service\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Authentication is required to manage system services or units.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Authenticating as: root\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Password: \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">polkit-agent-helper-1: pam_authenticate failed: Authentication failure\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==== AUTHENTICATION FAILED ===\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Failed to start mysqld.service: Access denied\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">See system logs and 'systemctl status mysqld.service' for details.</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"5wg9re\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">2.错误：2002</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">错误详情：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这个错误网上找了一下，有看起来还可以的处理:<a href=\"http://blog.51cto.com/pengjc/1861088\" target=\"_blank\" rel=\"noopener noreferrer\">http://blog.51cto.com/pengjc/1861088</a> 。但是实际上我打开都没有这个文件，搜也没有搜到，于是放弃，这个问题应该不算个问题，先放着解决别的。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"e6syft\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">3.错误：service failed</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>错误详情：</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">Job for mysqld.service failed because the control process exited with error code. See \"systemctl status mysqld.service\" and \"journalctl -xe\" for details.</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看了一下网上的解决办法，说是由于权限的问题：<a href=\"https://www.cnblogs.com/ivictor/p/5146247.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/ivictor/p/5146247.html</a> ，通过命令`chown mysql.mysql /var/run/mysqld/`，但是问题还是没有解决。 &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看了一下<a href=\"https://stackoverflow.com/questions/42317139/job-for-mysqld-service-failed-see-systemctl-status-mysqld-service\" target=\"_blank\" rel=\"noopener noreferrer\">stackoverflow</a>上面的说法，先通过`tail -f /var/log/mysqld.log`查看一下,，但是我的这个问题不是因为没有权限，</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2209dbf3fb%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20%20tail%20%2Fvar%2Flog%2Fmysqld.log%5Cn2018-12-07T09%3A13%3A21.651467Z%200%20%5BERROR%5D%20%5BMY-010119%5D%20%5BServer%5D%20Aborting%5Cn2018-12-07T09%3A13%3A21.655750Z%200%20%5BSystem%5D%20%5BMY-010910%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%3A%20Shutdown%20complete%20(mysqld%208.0.13)%20%20MySQL%20Community%20Server%20-%20GPL.%5Cn2018-12-07T09%3A15%3A40.466437Z%200%20%5BSystem%5D%20%5BMY-010116%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%20(mysqld%208.0.13)%20starting%20as%20process%2012759%5Cn2018-12-07T09%3A15%3A40.965670Z%200%20%5BERROR%5D%20%5BMY-012681%5D%20%5BInnoDB%5D%20mmap(137428992%20bytes)%20failed%3B%20errno%2012%5Cn2018-12-07T09%3A15%3A40.965740Z%201%20%5BERROR%5D%20%5BMY-012956%5D%20%5BInnoDB%5D%20Cannot%20allocate%20memory%20for%20the%20buffer%20pool%5Cn2018-12-07T09%3A15%3A40.965766Z%201%20%5BERROR%5D%20%5BMY-012930%5D%20%5BInnoDB%5D%20Plugin%20initialization%20aborted%20with%20error%20Generic%20error.%5Cn2018-12-07T09%3A15%3A40.965794Z%201%20%5BERROR%5D%20%5BMY-010334%5D%20%5BServer%5D%20Failed%20to%20initialize%20DD%20Storage%20Engine%5Cn2018-12-07T09%3A15%3A40.965949Z%200%20%5BERROR%5D%20%5BMY-010020%5D%20%5BServer%5D%20Data%20Dictionary%20initialization%20failed.%5Cn2018-12-07T09%3A15%3A40.965977Z%200%20%5BERROR%5D%20%5BMY-010119%5D%20%5BServer%5D%20Aborting%5Cn2018-12-07T09%3A15%3A40.966835Z%200%20%5BSystem%5D%20%5BMY-010910%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%3A%20Shutdown%20complete%20(mysqld%208.0.13)%20%20MySQL%20Community%20Server%20-%20GPL.%22%7D\" id=\"09dbf3fb\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~  tail /var/log/mysqld.log\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:13:21.651467Z 0 [ERROR] [MY-010119] [Server] Aborting\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:13:21.655750Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.13)  MySQL Community Server - GPL.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.466437Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.13) starting as process 12759\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.965670Z 0 [ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.965740Z 1 [ERROR] [MY-012956] [InnoDB] Cannot allocate memory for the buffer pool\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.965766Z 1 [ERROR] [MY-012930] [InnoDB] Plugin initialization aborted with error Generic error.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.965794Z 1 [ERROR] [MY-010334] [Server] Failed to initialize DD Storage Engine\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.965949Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.965977Z 0 [ERROR] [MY-010119] [Server] Aborting\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:15:40.966835Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.13)  MySQL Community Server - GPL.</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">搜了一下这个问题：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">`[ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12`</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看样子是内存映射出错，再通过命令`journalctl -xe`看一下,同时也找到了原因：原来是<strong>swap分区是0(https://blog.csdn.net/sxyandapp/article/details/77091007),于是一阵操作：</strong></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2264110012%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20free%20-m%5Cn%2Fdev%2Fvda1%20%20%20%20%20%20%20%20%20%20%20%20%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ext4%20%20%20%20%20%20%20noatime%2Cacl%2Cuser_xattr%201%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20total%20%20%20%20%20%20%20%20used%20%20%20%20%20%20%20%20free%20%20%20%20%20%20shared%20%20buff%2Fcache%20%20%20available%5CnMem%3A%20%20%20%20%20%20%20%20%20%20%20%20992%20%20%20%20%20%20%20%20%20516%20%20%20%20%20%20%20%20%20304%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20171%20%20%20%20%20%20%20%20%20321%5CnSwap%3A%20%20%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20%20%200%5Cn%5Cn%E2%9E%9C%20%20~%20dd%20if%3D%2Fdev%2Fzero%20of%3D%2Fswap%20bs%3D1M%20count%3D512%5Cndd%3A%20failed%20to%20open%20%E2%80%98%2Fswap%E2%80%99%3A%20Permission%20denied%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20dd%20if%3D%2Fdev%2Fzero%20of%3D%2Fswap%20bs%3D1M%20count%3D512%5Cn512%2B0%20records%20in%5Cn512%2B0%20records%20out%5Cn536870912%20bytes%20(537%20MB)%20copied%2C%204.01658%20s%2C%20134%20MB%2Fs%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20mkswap%20%2Fswap%20%5CnSetting%20up%20swapspace%20version%201%2C%20size%20%3D%20524284%20KiB%5Cnno%20label%2C%20UUID%3D9bbac588-e6ee-4b1c-a398-4ac460ad476a%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20swapon%20%2Fswap%20%5Cnswapon%3A%20%2Fswap%3A%20insecure%20permissions%200644%2C%200600%20suggested.%5Cn%5Cn%E2%9E%9C%20%20~%20free%20-m%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20total%20%20%20%20%20%20%20%20used%20%20%20%20%20%20%20%20free%20%20%20%20%20%20shared%20%20buff%2Fcache%20%20%20available%5CnMem%3A%20%20%20%20%20%20%20%20%20%20%20%20992%20%20%20%20%20%20%20%20%20516%20%20%20%20%20%20%20%20%20%2064%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20410%20%20%20%20%20%20%20%20%20317%5CnSwap%3A%20%20%20%20%20%20%20%20%20%20%20511%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20511%5Cn%5Cn%5Cnvi%20%2Fetc%2Ffstab%5Cn%23%E5%9C%A8%E5%85%B6%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%A6%82%E4%B8%8B%E4%B8%80%E8%A1%8C%2C%E4%BF%9D%E8%AF%81%E4%B8%8B%E6%AC%A1%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%90%8E%EF%BC%8C%E6%AD%A4swap%E5%88%86%E5%8C%BA%E8%A2%AB%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E7%9A%84fstab%E6%96%87%E4%BB%B6%5Cn%2Fswap%20swap%20swap%20defaults%200%200%22%7D\" id=\"64110012\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ free -m\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/dev/vda1            /                    ext4       noatime,acl,user_xattr 1 1\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">              total        used        free      shared  buff/cache   available\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Mem:            992         516         304           0         171         321\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Swap:             0           0           0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ dd if=/dev/zero of=/swap bs=1M count=512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">dd: failed to open ‘/swap’: Permission denied\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ sudo dd if=/dev/zero of=/swap bs=1M count=512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">512+0 records in\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">512+0 records out\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">536870912 bytes (537 MB) copied, 4.01658 s, 134 MB/s\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ sudo mkswap /swap \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Setting up swapspace version 1, size = 524284 KiB\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">no label, UUID=9bbac588-e6ee-4b1c-a398-4ac460ad476a\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ sudo swapon /swap \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">swapon: /swap: insecure permissions 0644, 0600 suggested.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ free -m                \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">              total        used        free      shared  buff/cache   available\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Mem:            992         516          64           0         410         317\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Swap:           511           0         511\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">vi /etc/fstab\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#在其中添加如下一行,保证下次系统启动后，此swap分区被自动加载，需要修改系统的fstab文件\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/swap swap swap defaults 0 0</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">之后再重启就好了。</p><h2 id=\"75lwvk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">4.错误：登录问题</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">错误详情：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">error: 'Access denied for user 'root'@'localhost' (using password: NO)'</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这个其实是密码的问题，没有设置密码的时候，mysql会生成一个临时的密码，通过命令：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22b1ac3faa%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20sudo%20grep%20'temporary%20password'%20%2Fvar%2Flog%2Fmysqld.log%5Cn2018-12-07T09%3A08%3A22.908621Z%205%20%5BNote%5D%20%5BMY-010454%5D%20%5BServer%5D%20A%20temporary%20password%20is%20generated%20for%20root%40localhost%3A%20TdqPeZ-n%3B4Ah%22%7D\" id=\"b1ac3faa\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">➜  ~ sudo grep 'temporary password' /var/log/mysqld.log\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2018-12-07T09:08:22.908621Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: TdqPeZ-n;4Ah</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以看到生成的临时密码，然后用临时密码登录即可。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"wt3kod\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">5.修改密码</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可能因为8.0的版本，修改的密码不能过于简单，并且命令好像也有些不一样了，用的是``</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%227f9439c1%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22ALTER%20USER%20'root'%40'localhost'%20IDENTIFIED%20BY%20'MyNewPass'%3B%22%7D\" id=\"7f9439c1\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看到一个别人的回答：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png%22%2C%22originWidth%22%3A695%2C%22originHeight%22%3A148%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A695%2C%22height%22%3A148%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png\" class=\"image lake-drag-image\" style=\"width: 695px; height: 148px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">应该是后面才改的？</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"69ioxf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#69ioxf\"></a>6.外网连接mysql</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">由于两台服务器的版本有点不一样，修改外网连接也有点不一样。</p><h2 id=\"zvrisn\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#zvrisn\"></a><a href=\"https://blog.csdn.net/w20228396/article/details/70143500\" target=\"_blank\" rel=\"noopener noreferrer\">MySQL5.7</a></h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1.修改配置文件</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%221f68ea75%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%5Cnsudo%20vi%20%2Fetc%2Fmysql%2Fmysql.conf.d%2Fmysqld.cnf%20%20%20%23%20bind-address%3D127.0.0.1%20%E4%BF%AE%E6%94%B9%E6%88%90%20bind-address%3D0.0.0.0%5Cn%5Cn%23%20%E9%87%8D%E5%90%AF%E6%9C%8D%E5%8A%A1%5Cnservice%20mysql%20restart%5Cn%5Cn%23%20%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5mysql%E7%9A%84%E8%B4%A6%E5%8F%B7%5Cn%3E%20grant%20all%20on%20*.*%20to%20root%40'%25'%20identified%20by%20'123456'%3B%5Cn%3E%20flush%20privileges%3B%5Cn%23%20%5Cn*.*%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%20%C2%A0%20%E7%AC%AC%E4%B8%80%E4%B8%AA*%E8%A1%A8%E7%A4%BA%E5%BA%93%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA*%E8%A1%A8%E7%A4%BA%E8%A1%A8%3B%20*.*%E5%AF%B9%E5%85%A8%E9%83%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%85%A8%E9%83%A8%E8%A1%A8%E6%8E%88%E6%9D%83%EF%BC%8Cso.ok%20%E8%A1%A8%E7%A4%BA%E5%8F%AA%E5%AF%B9so%E8%BF%99%E4%B8%AA%E5%BA%93%E4%B8%AD%E7%9A%84ok%E8%A1%A8%E6%8E%88%E6%9D%83%5Cnroot%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%C2%A0%E8%A1%A8%E7%A4%BA%E8%A6%81%E7%BB%99%E5%93%AA%E4%B8%AA%E7%94%A8%E6%88%B7%E6%8E%88%E6%9D%83%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E6%98%AF%E5%AD%98%E5%9C%A8%E7%9A%84%E7%94%A8%E6%88%B7%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%5Cn'%25'%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%20%C2%A0%20%E8%A1%A8%E7%A4%BA%E5%85%81%E8%AE%B8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E7%9A%84IP%E5%9C%B0%E5%9D%80%EF%BC%8C%25%E4%BB%A3%E8%A1%A8%E5%85%81%E8%AE%B8%E6%89%80%E6%9C%89IP%E8%BF%9E%E6%8E%A5%22%7D\" id=\"1f68ea75\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#修改配置文件\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf   # bind-address=127.0.0.1 修改成 bind-address=0.0.0.0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 重启服务\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">service mysql restart\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 添加远程连接mysql的账号\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt; grant all on *.* to root@'%' identified by '123456';\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt; flush privileges;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">*.*&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 第一个*表示库，第二个*表示表; *.*对全部数据库的全部表授权，so.ok 表示只对so这个库中的ok表授权\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">root&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;表示要给哪个用户授权，这个用户可以是存在的用户，也可以是不存在的\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'%'&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 表示允许远程连接的IP地址，%代表允许所有IP连接</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"d0cydb\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#d0cydb\"></a><a href=\"https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0\" target=\"_blank\" rel=\"noopener noreferrer\">MySQL8.0</a></h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">8.0的版本总结的对权限的管理严格很多，毕竟数据很重要，只有安全才能放心。尝试过上述方式，但是连接不上。最终在Stack Overflow上找到了办法。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22acc2d0be%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22CREATE%20USER%20'root'%40'%25'%20IDENTIFIED%20BY%20'root'%3B%5CnGRANT%20ALL%20PRIVILEGES%20ON%20*.*%20TO%20'root'%40'%25'%20WITH%20GRANT%20OPTION%3B%22%7D\" id=\"acc2d0be\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CREATE USER 'root'@'%' IDENTIFIED BY 'root';\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">但是修改之后还是会有问题，出现了2059错误： &nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png%22%2C%22originWidth%22%3A586%2C%22originHeight%22%3A129%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A586%2C%22height%22%3A129%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png\" class=\"image lake-drag-image\" style=\"width: 586px; height: 129px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">解决方式可以采用修改密码为简单密码：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%222ca88bb8%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22SET%20GLOBAL%20validate_password.policy%3D0%3B%5CnALTER%20USER%20'root'%40'%25'%20IDENTIFIED%20WITH%20mysql_native_password%20BY%20'12345678'%3B%22%7D\" id=\"2ca88bb8\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SET GLOBAL validate_password.policy=0;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '12345678';</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"iEnxq\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">使用过程问题</h1><h2 id=\"aV8gC\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">1.导入数据出错</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">错误代码：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%3E%20LOAD%20DATA%20LOCAL%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%3B%5CnERROR%201148%20(42000)%3A%20The%20used%20command%20is%20not%20allowed%20with%20this%20MySQL%20version%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5CnERROR%201290%20(HY000)%3A%20The%20MySQL%20server%20is%20running%20with%20the%20--secure-file-priv%20option%20so%20it%20ca%5Cnnnot%20execute%20this%20statement%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%20LINES%20TERMINATED%20BY%20'%5C%5Cr%5C%5Cn'%3B%5CnERROR%201290%20(HY000)%3A%20The%20MySQL%20server%20is%20running%20with%20the%20--secure-file-priv%20option%20so%20it%20ca%5Cnnnot%20execute%20this%20statement%22%2C%22id%22%3A%22CjByt%22%7D\" id=\"CjByt\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mysql&gt; LOAD DATA LOCAL INFILE '/home/mianhk/pet.txt' INTO TABLE pet;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ERROR 1148 (42000): The used command is not allowed with this MySQL version\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mysql&gt; LOAD DATA INFILE '/home/mianhk/pet.txt' INTO TABLE pet;                             \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it ca\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nnot execute this statement\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mysql&gt; LOAD DATA INFILE '/home/mianhk/pet.txt' INTO TABLE pet LINES TERMINATED BY '\\r\\n';\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it ca\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nnot execute this statement</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">原因：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(79, 79, 79); font-size: 16px;\" data-mce-style=\"font-size: 12px\">secure_file_priv 设置了指定目录，需要在指定的目录下进行数据导出。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%3E%20show%20variables%20like%20'%25secure%25'%3B%5Cn%2B--------------------------%2B-----------------------%2B%5Cn%7C%20Variable_name%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Value%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%5Cn%2B--------------------------%2B-----------------------%2B%5Cn%7C%20require_secure_transport%20%7C%20OFF%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%5Cn%7C%20secure_file_priv%20%20%20%20%20%20%20%20%20%7C%20%2Fvar%2Flib%2Fmysql-files%2F%20%7C%2B--------------------------%2B-----------------------%2B%5Cn2%20rows%20in%20set%20(0.01%20sec)%22%2C%22id%22%3A%22CDeKE%22%7D\" id=\"CDeKE\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mysql&gt; show variables like '%secure%';\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+--------------------------+-----------------------+\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">| Variable_name            | Value                 |\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+--------------------------+-----------------------+\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">| require_secure_transport | OFF                   |\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">| secure_file_priv         | /var/lib/mysql-files/ |+--------------------------+-----------------------+\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2 rows in set (0.01 sec)</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">数据导入需要注意的:</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>空值要用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">\\N</code> 代替，而不能直接使用空</li><li>分隔符一般用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">tab</code>&nbsp;</li><li>注意换行符</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br><span data-lake-element=\"cursor\"></span></p><h1 id=\"dinty\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">总结</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">总之，感觉之前windows和ubuntu下都没有这么麻烦，这里总结一下吧，感觉以后会用的很多，不想踩坑了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"ex7rxf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#ex7rxf\"></a>参考：</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://juejin.im/entry/5af5d2786fb9a07aaf3547cc\" target=\"_blank\" rel=\"noopener noreferrer\">MySQL8.0.11连接错误2059解决方法</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0\" target=\"_blank\" rel=\"noopener noreferrer\">How to grant all privileges to root user in MySQL 8.0</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://www.cnblogs.com/echo-coding/p/9172636.html\" target=\"_blank\" rel=\"noopener noreferrer\">centos mysql初探 -- 配置、基本操作及问题</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><p>title:  CentOS7安装并使用MySQL</p><p>categories: MySQL</p><p>tags: [MySQL,学习]</p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22Mk9yL%22%7D\"></card><blockquote><p>MySQL在CentOS上的安装和使用  </p></blockquote><p><br /></p><p>&lt;!--more--&gt;  </p><h1 id=\"nvr1gq\"><a href=\"#nvr1gq\"></a>yum安装</h1><p>date: 2018-12-9 21:57:59</p><p>update: 2018-12-9 21:57:59</p><p>1.首先找到官网yum的地址：<a href=\"https://dev.mysql.com/downloads/repo/yum/\" target=\"_blank\">https://dev.mysql.com/downloads/repo/yum/</a>，找到redhat的版本<strong>Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package</strong>,并复制download的地址，然后下载下来：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e009d44e%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22wget%20http%3A%2F%2Frepo.mysql.com%2Fmysql-community-release-el7-5.noarch.rpm%22%7D\"></card><p><br /></p><p>2.进行rpm解包并安装mysql-server</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2268cb047b%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22rpm%20-ivh%20mysql-community-release-el7-5.noarch.rpm%5Cnyum%20update%5Cnyum%20install%20mysql-server%22%7D\"></card><p>3.修改权限</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227a8db900%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22chown%20mysql%3Amysql%20-R%20%2Fvar%2Flib%2Fmysql%22%7D\"></card><p>4.然后就可以启动mysql了。。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22f6cd2da2%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22systemctl%20start%20mysqld%22%7D\"></card><p><br /></p><h1 id=\"1qgpbs\"><a href=\"#1qgpbs\"></a>问题记录</h1><p>当然，看着上面好像很爽，很快的样子，但是没想到接下来坑还是很多的。都有点怀疑自己了，到现在装个mysql还这么多问题。关键是，网上的解决办法，都是什么乱七八糟的。</p><h2 id=\"117oeg\"><a href=\"#117oeg\"></a>1.状态查看-灰色</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e10fa695%22%2C%22mode%22%3A%22powershell%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20systemctl%20status%20mysqld%5Cn%E2%97%8F%20mysqld.service%20-%20MySQL%20Server%5Cn%20%20%20Loaded%3A%20loaded%20(%2Fusr%2Flib%2Fsystemd%2Fsystem%2Fmysqld.service%3B%20enabled%3B%20vendor%20preset%3A%20disabled)%5Cn%20%20%20Active%3A%20inactive%20(dead)%5Cn%20%20%20%20%20Docs%3A%20man%3Amysqld(8)%5Cn%20%20%20%20%20%20%20%20%20%20%20http%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2Fen%2Fusing-systemd.html%5Cn%5Cn%E2%9E%9C%20%20~%20ps%20ajx%20%7C%20grep%20mysql%5Cn%201768%20%201784%20%201784%20%201784%20%3F%20%20%20%20%20%20%20%20%20%20%20-1%20Ssl%20%20%20%20999%20%20%200%3A19%20mysqld%22%7D\"></card><p>1.看了一下版本号，没错是8.0：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22caff7955%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20mysqladmin%20--version%5Cnmysqladmin%20%20Ver%208.0.13%20for%20Linux%20on%20x86_64%20(MySQL%20Community%20Server%20-%20GPL)%22%7D\"></card><p>2.然后mysql连一波，出问题，连不上：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221ee30587%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20mysql%5CnERROR%202002%20(HY000)%3A%20Can't%20connect%20to%20local%20MySQL%20server%20through%20socket%20'%2Fvar%2Flib%2Fmysql%2Fmysql.sock'%20(2)%22%7D\"></card><p>看样子是没有这个socket，应该是位置不对，于是`sudo find / -name mysql.sock `赶紧搜一下，什么都没有，没有办法，重启一下试试吧。</p><p>3.重启</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22eb61b0ea%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20sudo%20systemctl%20restart%20mysqld%5CnJob%20for%20mysqld.service%20failed%20because%20the%20control%20process%20exited%20with%20error%20code.%20See%20%5C%22systemctl%20status%20mysqld.service%5C%22%20and%20%5C%22journalctl%20-xe%5C%22%20for%20details.%22%7D\"></card><p>不行，换种方式重启看看：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a4f327ae%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20service%20mysqld%20start%5CnRedirecting%20to%20%2Fbin%2Fsystemctl%20start%20mysqld.service%5Cn%3D%3D%3D%3D%20AUTHENTICATING%20FOR%20org.freedesktop.systemd1.manage-units%20%3D%3D%3D%5CnAuthentication%20is%20required%20to%20manage%20system%20services%20or%20units.%5CnAuthenticating%20as%3A%20root%5CnPassword%3A%20%5Cnpolkit-agent-helper-1%3A%20pam_authenticate%20failed%3A%20Authentication%20failure%5Cn%3D%3D%3D%3D%20AUTHENTICATION%20FAILED%20%3D%3D%3D%5CnFailed%20to%20start%20mysqld.service%3A%20Access%20denied%5CnSee%20system%20logs%20and%20'systemctl%20status%20mysqld.service'%20for%20details.%22%7D\"></card><p><br /></p><h2 id=\"5wg9re\">2.错误：2002</h2><p>错误详情：</p><p>ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)</p><p><br /></p><p>这个错误网上找了一下，有看起来还可以的处理:<a href=\"http://blog.51cto.com/pengjc/1861088\" target=\"_blank\">http://blog.51cto.com/pengjc/1861088</a> 。但是实际上我打开都没有这个文件，搜也没有搜到，于是放弃，这个问题应该不算个问题，先放着解决别的。  </p><p><br /></p><h2 id=\"e6syft\">3.错误：service failed</h2><p><span>错误详情：</span></p><p>Job for mysqld.service failed because the control process exited with error code. See &quot;systemctl status mysqld.service&quot; and &quot;journalctl -xe&quot; for details.</p><p>看了一下网上的解决办法，说是由于权限的问题：<a href=\"https://www.cnblogs.com/ivictor/p/5146247.html\" target=\"_blank\">https://www.cnblogs.com/ivictor/p/5146247.html</a> ，通过命令`chown mysql.mysql /var/run/mysqld/`，但是问题还是没有解决。  </p><p>看了一下<a href=\"https://stackoverflow.com/questions/42317139/job-for-mysqld-service-failed-see-systemctl-status-mysqld-service\" target=\"_blank\">stackoverflow</a>上面的说法，先通过`tail -f /var/log/mysqld.log`查看一下,，但是我的这个问题不是因为没有权限，</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2209dbf3fb%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20%20tail%20%2Fvar%2Flog%2Fmysqld.log%5Cn2018-12-07T09%3A13%3A21.651467Z%200%20%5BERROR%5D%20%5BMY-010119%5D%20%5BServer%5D%20Aborting%5Cn2018-12-07T09%3A13%3A21.655750Z%200%20%5BSystem%5D%20%5BMY-010910%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%3A%20Shutdown%20complete%20(mysqld%208.0.13)%20%20MySQL%20Community%20Server%20-%20GPL.%5Cn2018-12-07T09%3A15%3A40.466437Z%200%20%5BSystem%5D%20%5BMY-010116%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%20(mysqld%208.0.13)%20starting%20as%20process%2012759%5Cn2018-12-07T09%3A15%3A40.965670Z%200%20%5BERROR%5D%20%5BMY-012681%5D%20%5BInnoDB%5D%20mmap(137428992%20bytes)%20failed%3B%20errno%2012%5Cn2018-12-07T09%3A15%3A40.965740Z%201%20%5BERROR%5D%20%5BMY-012956%5D%20%5BInnoDB%5D%20Cannot%20allocate%20memory%20for%20the%20buffer%20pool%5Cn2018-12-07T09%3A15%3A40.965766Z%201%20%5BERROR%5D%20%5BMY-012930%5D%20%5BInnoDB%5D%20Plugin%20initialization%20aborted%20with%20error%20Generic%20error.%5Cn2018-12-07T09%3A15%3A40.965794Z%201%20%5BERROR%5D%20%5BMY-010334%5D%20%5BServer%5D%20Failed%20to%20initialize%20DD%20Storage%20Engine%5Cn2018-12-07T09%3A15%3A40.965949Z%200%20%5BERROR%5D%20%5BMY-010020%5D%20%5BServer%5D%20Data%20Dictionary%20initialization%20failed.%5Cn2018-12-07T09%3A15%3A40.965977Z%200%20%5BERROR%5D%20%5BMY-010119%5D%20%5BServer%5D%20Aborting%5Cn2018-12-07T09%3A15%3A40.966835Z%200%20%5BSystem%5D%20%5BMY-010910%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%3A%20Shutdown%20complete%20(mysqld%208.0.13)%20%20MySQL%20Community%20Server%20-%20GPL.%22%7D\"></card><p>搜了一下这个问题：</p><p>`[ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12`</p><p>看样子是内存映射出错，再通过命令`journalctl -xe`看一下,同时也找到了原因：原来是<strong>swap分区是0(https://blog.csdn.net/sxyandapp/article/details/77091007),于是一阵操作：</strong></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2264110012%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20free%20-m%5Cn%2Fdev%2Fvda1%20%20%20%20%20%20%20%20%20%20%20%20%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ext4%20%20%20%20%20%20%20noatime%2Cacl%2Cuser_xattr%201%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20total%20%20%20%20%20%20%20%20used%20%20%20%20%20%20%20%20free%20%20%20%20%20%20shared%20%20buff%2Fcache%20%20%20available%5CnMem%3A%20%20%20%20%20%20%20%20%20%20%20%20992%20%20%20%20%20%20%20%20%20516%20%20%20%20%20%20%20%20%20304%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20171%20%20%20%20%20%20%20%20%20321%5CnSwap%3A%20%20%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20%20%200%5Cn%5Cn%E2%9E%9C%20%20~%20dd%20if%3D%2Fdev%2Fzero%20of%3D%2Fswap%20bs%3D1M%20count%3D512%5Cndd%3A%20failed%20to%20open%20%E2%80%98%2Fswap%E2%80%99%3A%20Permission%20denied%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20dd%20if%3D%2Fdev%2Fzero%20of%3D%2Fswap%20bs%3D1M%20count%3D512%5Cn512%2B0%20records%20in%5Cn512%2B0%20records%20out%5Cn536870912%20bytes%20(537%20MB)%20copied%2C%204.01658%20s%2C%20134%20MB%2Fs%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20mkswap%20%2Fswap%20%5CnSetting%20up%20swapspace%20version%201%2C%20size%20%3D%20524284%20KiB%5Cnno%20label%2C%20UUID%3D9bbac588-e6ee-4b1c-a398-4ac460ad476a%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20swapon%20%2Fswap%20%5Cnswapon%3A%20%2Fswap%3A%20insecure%20permissions%200644%2C%200600%20suggested.%5Cn%5Cn%E2%9E%9C%20%20~%20free%20-m%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20total%20%20%20%20%20%20%20%20used%20%20%20%20%20%20%20%20free%20%20%20%20%20%20shared%20%20buff%2Fcache%20%20%20available%5CnMem%3A%20%20%20%20%20%20%20%20%20%20%20%20992%20%20%20%20%20%20%20%20%20516%20%20%20%20%20%20%20%20%20%2064%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20410%20%20%20%20%20%20%20%20%20317%5CnSwap%3A%20%20%20%20%20%20%20%20%20%20%20511%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20511%5Cn%5Cn%5Cnvi%20%2Fetc%2Ffstab%5Cn%23%E5%9C%A8%E5%85%B6%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%A6%82%E4%B8%8B%E4%B8%80%E8%A1%8C%2C%E4%BF%9D%E8%AF%81%E4%B8%8B%E6%AC%A1%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%90%8E%EF%BC%8C%E6%AD%A4swap%E5%88%86%E5%8C%BA%E8%A2%AB%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E7%9A%84fstab%E6%96%87%E4%BB%B6%5Cn%2Fswap%20swap%20swap%20defaults%200%200%22%7D\"></card><p>之后再重启就好了。</p><h2 id=\"75lwvk\">4.错误：登录问题</h2><p>错误详情：</p><p>error: 'Access denied for user 'root'@'localhost' (using password: NO)'</p><p><br /></p><p>这个其实是密码的问题，没有设置密码的时候，mysql会生成一个临时的密码，通过命令：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b1ac3faa%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20sudo%20grep%20'temporary%20password'%20%2Fvar%2Flog%2Fmysqld.log%5Cn2018-12-07T09%3A08%3A22.908621Z%205%20%5BNote%5D%20%5BMY-010454%5D%20%5BServer%5D%20A%20temporary%20password%20is%20generated%20for%20root%40localhost%3A%20TdqPeZ-n%3B4Ah%22%7D\"></card><p>可以看到生成的临时密码，然后用临时密码登录即可。</p><p><br /></p><h2 id=\"wt3kod\">5.修改密码</h2><p>可能因为8.0的版本，修改的密码不能过于简单，并且命令好像也有些不一样了，用的是``</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227f9439c1%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22ALTER%20USER%20'root'%40'localhost'%20IDENTIFIED%20BY%20'MyNewPass'%3B%22%7D\"></card><p><br /></p><p>看到一个别人的回答：</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png%22%2C%22originWidth%22%3A695%2C%22originHeight%22%3A148%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A695%2C%22height%22%3A148%7D\"></card></p><p>应该是后面才改的？</p><p><br /></p><h1 id=\"69ioxf\"><a href=\"#69ioxf\"></a>6.外网连接mysql</h1><p>由于两台服务器的版本有点不一样，修改外网连接也有点不一样。</p><h2 id=\"zvrisn\"><a href=\"#zvrisn\"></a><a href=\"https://blog.csdn.net/w20228396/article/details/70143500\" target=\"_blank\">MySQL5.7</a></h2><p>1.修改配置文件</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221f68ea75%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%5Cnsudo%20vi%20%2Fetc%2Fmysql%2Fmysql.conf.d%2Fmysqld.cnf%20%20%20%23%20bind-address%3D127.0.0.1%20%E4%BF%AE%E6%94%B9%E6%88%90%20bind-address%3D0.0.0.0%5Cn%5Cn%23%20%E9%87%8D%E5%90%AF%E6%9C%8D%E5%8A%A1%5Cnservice%20mysql%20restart%5Cn%5Cn%23%20%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5mysql%E7%9A%84%E8%B4%A6%E5%8F%B7%5Cn%3E%20grant%20all%20on%20*.*%20to%20root%40'%25'%20identified%20by%20'123456'%3B%5Cn%3E%20flush%20privileges%3B%5Cn%23%20%5Cn*.*%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%20%C2%A0%20%E7%AC%AC%E4%B8%80%E4%B8%AA*%E8%A1%A8%E7%A4%BA%E5%BA%93%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA*%E8%A1%A8%E7%A4%BA%E8%A1%A8%3B%20*.*%E5%AF%B9%E5%85%A8%E9%83%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%85%A8%E9%83%A8%E8%A1%A8%E6%8E%88%E6%9D%83%EF%BC%8Cso.ok%20%E8%A1%A8%E7%A4%BA%E5%8F%AA%E5%AF%B9so%E8%BF%99%E4%B8%AA%E5%BA%93%E4%B8%AD%E7%9A%84ok%E8%A1%A8%E6%8E%88%E6%9D%83%5Cnroot%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%C2%A0%E8%A1%A8%E7%A4%BA%E8%A6%81%E7%BB%99%E5%93%AA%E4%B8%AA%E7%94%A8%E6%88%B7%E6%8E%88%E6%9D%83%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E6%98%AF%E5%AD%98%E5%9C%A8%E7%9A%84%E7%94%A8%E6%88%B7%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%5Cn'%25'%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%20%C2%A0%20%E8%A1%A8%E7%A4%BA%E5%85%81%E8%AE%B8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E7%9A%84IP%E5%9C%B0%E5%9D%80%EF%BC%8C%25%E4%BB%A3%E8%A1%A8%E5%85%81%E8%AE%B8%E6%89%80%E6%9C%89IP%E8%BF%9E%E6%8E%A5%22%7D\"></card><p><br /></p><h2 id=\"d0cydb\"><a href=\"#d0cydb\"></a><a href=\"https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0\" target=\"_blank\">MySQL8.0</a></h2><p>8.0的版本总结的对权限的管理严格很多，毕竟数据很重要，只有安全才能放心。尝试过上述方式，但是连接不上。最终在Stack Overflow上找到了办法。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22acc2d0be%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22CREATE%20USER%20'root'%40'%25'%20IDENTIFIED%20BY%20'root'%3B%5CnGRANT%20ALL%20PRIVILEGES%20ON%20*.*%20TO%20'root'%40'%25'%20WITH%20GRANT%20OPTION%3B%22%7D\"></card><p>但是修改之后还是会有问题，出现了2059错误：  </p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png%22%2C%22originWidth%22%3A586%2C%22originHeight%22%3A129%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A586%2C%22height%22%3A129%7D\"></card></p><p>解决方式可以采用修改密码为简单密码：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%222ca88bb8%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22SET%20GLOBAL%20validate_password.policy%3D0%3B%5CnALTER%20USER%20'root'%40'%25'%20IDENTIFIED%20WITH%20mysql_native_password%20BY%20'12345678'%3B%22%7D\"></card><p><br /></p><h1 id=\"iEnxq\">使用过程问题</h1><h2 id=\"aV8gC\">1.导入数据出错</h2><p>错误代码：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%3E%20LOAD%20DATA%20LOCAL%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%3B%5CnERROR%201148%20(42000)%3A%20The%20used%20command%20is%20not%20allowed%20with%20this%20MySQL%20version%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5CnERROR%201290%20(HY000)%3A%20The%20MySQL%20server%20is%20running%20with%20the%20--secure-file-priv%20option%20so%20it%20ca%5Cnnnot%20execute%20this%20statement%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%20LINES%20TERMINATED%20BY%20'%5C%5Cr%5C%5Cn'%3B%5CnERROR%201290%20(HY000)%3A%20The%20MySQL%20server%20is%20running%20with%20the%20--secure-file-priv%20option%20so%20it%20ca%5Cnnnot%20execute%20this%20statement%22%2C%22id%22%3A%22CjByt%22%7D\"></card><p>原因：</p><p><span class=\"lake-fontsize-12\" style=\"color: #4F4F4F;\">secure_file_priv 设置了指定目录，需要在指定的目录下进行数据导出。</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%3E%20show%20variables%20like%20'%25secure%25'%3B%5Cn%2B--------------------------%2B-----------------------%2B%5Cn%7C%20Variable_name%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Value%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%5Cn%2B--------------------------%2B-----------------------%2B%5Cn%7C%20require_secure_transport%20%7C%20OFF%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%5Cn%7C%20secure_file_priv%20%20%20%20%20%20%20%20%20%7C%20%2Fvar%2Flib%2Fmysql-files%2F%20%7C%2B--------------------------%2B-----------------------%2B%5Cn2%20rows%20in%20set%20(0.01%20sec)%22%2C%22id%22%3A%22CDeKE%22%7D\"></card><p><br /></p><p>数据导入需要注意的:</p><ul><li>空值要用 <code>\\N</code> 代替，而不能直接使用空</li><li>分隔符一般用 <code>tab</code> </li><li>注意换行符</li></ul><p><br /><cursor /></p><h1 id=\"dinty\">总结</h1><p>总之，感觉之前windows和ubuntu下都没有这么麻烦，这里总结一下吧，感觉以后会用的很多，不想踩坑了。</p><p><br /></p><h1 id=\"ex7rxf\"><a href=\"#ex7rxf\"></a>参考：</h1><p><a href=\"https://juejin.im/entry/5af5d2786fb9a07aaf3547cc\" target=\"_blank\">MySQL8.0.11连接错误2059解决方法</a></p><p><a href=\"https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0\" target=\"_blank\">How to grant all privileges to root user in MySQL 8.0</a></p><p><a href=\"https://www.cnblogs.com/echo-coding/p/9172636.html\" target=\"_blank\">centos mysql初探 -- 配置、基本操作及问题</a></p><p><br /></p><p><br /></p><p><br /></p>",
    "body_draft_lake": "<!doctype lake><p>title:  CentOS7安装并使用MySQL</p><p>categories: MySQL</p><p>tags: [MySQL,学习]</p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22Mk9yL%22%7D\"></card><blockquote><p>MySQL在CentOS上的安装和使用  </p></blockquote><p><br /></p><p>&lt;!--more--&gt;  </p><h1 id=\"nvr1gq\"><a href=\"#nvr1gq\"></a>yum安装</h1><p>date: 2018-12-9 21:57:59</p><p>update: 2018-12-9 21:57:59</p><p>1.首先找到官网yum的地址：<a href=\"https://dev.mysql.com/downloads/repo/yum/\" target=\"_blank\">https://dev.mysql.com/downloads/repo/yum/</a>，找到redhat的版本<strong>Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package</strong>,并复制download的地址，然后下载下来：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e009d44e%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22wget%20http%3A%2F%2Frepo.mysql.com%2Fmysql-community-release-el7-5.noarch.rpm%22%7D\"></card><p><br /></p><p>2.进行rpm解包并安装mysql-server</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2268cb047b%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22rpm%20-ivh%20mysql-community-release-el7-5.noarch.rpm%5Cnyum%20update%5Cnyum%20install%20mysql-server%22%7D\"></card><p>3.修改权限</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227a8db900%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22chown%20mysql%3Amysql%20-R%20%2Fvar%2Flib%2Fmysql%22%7D\"></card><p>4.然后就可以启动mysql了。。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22f6cd2da2%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22systemctl%20start%20mysqld%22%7D\"></card><p><br /></p><h1 id=\"1qgpbs\"><a href=\"#1qgpbs\"></a>问题记录</h1><p>当然，看着上面好像很爽，很快的样子，但是没想到接下来坑还是很多的。都有点怀疑自己了，到现在装个mysql还这么多问题。关键是，网上的解决办法，都是什么乱七八糟的。</p><h2 id=\"117oeg\"><a href=\"#117oeg\"></a>1.状态查看-灰色</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e10fa695%22%2C%22mode%22%3A%22powershell%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20systemctl%20status%20mysqld%5Cn%E2%97%8F%20mysqld.service%20-%20MySQL%20Server%5Cn%20%20%20Loaded%3A%20loaded%20(%2Fusr%2Flib%2Fsystemd%2Fsystem%2Fmysqld.service%3B%20enabled%3B%20vendor%20preset%3A%20disabled)%5Cn%20%20%20Active%3A%20inactive%20(dead)%5Cn%20%20%20%20%20Docs%3A%20man%3Amysqld(8)%5Cn%20%20%20%20%20%20%20%20%20%20%20http%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2Fen%2Fusing-systemd.html%5Cn%5Cn%E2%9E%9C%20%20~%20ps%20ajx%20%7C%20grep%20mysql%5Cn%201768%20%201784%20%201784%20%201784%20%3F%20%20%20%20%20%20%20%20%20%20%20-1%20Ssl%20%20%20%20999%20%20%200%3A19%20mysqld%22%7D\"></card><p>1.看了一下版本号，没错是8.0：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22caff7955%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20mysqladmin%20--version%5Cnmysqladmin%20%20Ver%208.0.13%20for%20Linux%20on%20x86_64%20(MySQL%20Community%20Server%20-%20GPL)%22%7D\"></card><p>2.然后mysql连一波，出问题，连不上：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221ee30587%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20mysql%5CnERROR%202002%20(HY000)%3A%20Can't%20connect%20to%20local%20MySQL%20server%20through%20socket%20'%2Fvar%2Flib%2Fmysql%2Fmysql.sock'%20(2)%22%7D\"></card><p>看样子是没有这个socket，应该是位置不对，于是`sudo find / -name mysql.sock `赶紧搜一下，什么都没有，没有办法，重启一下试试吧。</p><p>3.重启</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22eb61b0ea%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20sudo%20systemctl%20restart%20mysqld%5CnJob%20for%20mysqld.service%20failed%20because%20the%20control%20process%20exited%20with%20error%20code.%20See%20%5C%22systemctl%20status%20mysqld.service%5C%22%20and%20%5C%22journalctl%20-xe%5C%22%20for%20details.%22%7D\"></card><p>不行，换种方式重启看看：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a4f327ae%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20service%20mysqld%20start%5CnRedirecting%20to%20%2Fbin%2Fsystemctl%20start%20mysqld.service%5Cn%3D%3D%3D%3D%20AUTHENTICATING%20FOR%20org.freedesktop.systemd1.manage-units%20%3D%3D%3D%5CnAuthentication%20is%20required%20to%20manage%20system%20services%20or%20units.%5CnAuthenticating%20as%3A%20root%5CnPassword%3A%20%5Cnpolkit-agent-helper-1%3A%20pam_authenticate%20failed%3A%20Authentication%20failure%5Cn%3D%3D%3D%3D%20AUTHENTICATION%20FAILED%20%3D%3D%3D%5CnFailed%20to%20start%20mysqld.service%3A%20Access%20denied%5CnSee%20system%20logs%20and%20'systemctl%20status%20mysqld.service'%20for%20details.%22%7D\"></card><p><br /></p><h2 id=\"5wg9re\">2.错误：2002</h2><p>错误详情：</p><p>ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)</p><p><br /></p><p>这个错误网上找了一下，有看起来还可以的处理:<a href=\"http://blog.51cto.com/pengjc/1861088\" target=\"_blank\">http://blog.51cto.com/pengjc/1861088</a> 。但是实际上我打开都没有这个文件，搜也没有搜到，于是放弃，这个问题应该不算个问题，先放着解决别的。  </p><p><br /></p><h2 id=\"e6syft\">3.错误：service failed</h2><p><span>错误详情：</span></p><p>Job for mysqld.service failed because the control process exited with error code. See &quot;systemctl status mysqld.service&quot; and &quot;journalctl -xe&quot; for details.</p><p>看了一下网上的解决办法，说是由于权限的问题：<a href=\"https://www.cnblogs.com/ivictor/p/5146247.html\" target=\"_blank\">https://www.cnblogs.com/ivictor/p/5146247.html</a> ，通过命令`chown mysql.mysql /var/run/mysqld/`，但是问题还是没有解决。  </p><p>看了一下<a href=\"https://stackoverflow.com/questions/42317139/job-for-mysqld-service-failed-see-systemctl-status-mysqld-service\" target=\"_blank\">stackoverflow</a>上面的说法，先通过`tail -f /var/log/mysqld.log`查看一下,，但是我的这个问题不是因为没有权限，</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2209dbf3fb%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20%20tail%20%2Fvar%2Flog%2Fmysqld.log%5Cn2018-12-07T09%3A13%3A21.651467Z%200%20%5BERROR%5D%20%5BMY-010119%5D%20%5BServer%5D%20Aborting%5Cn2018-12-07T09%3A13%3A21.655750Z%200%20%5BSystem%5D%20%5BMY-010910%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%3A%20Shutdown%20complete%20(mysqld%208.0.13)%20%20MySQL%20Community%20Server%20-%20GPL.%5Cn2018-12-07T09%3A15%3A40.466437Z%200%20%5BSystem%5D%20%5BMY-010116%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%20(mysqld%208.0.13)%20starting%20as%20process%2012759%5Cn2018-12-07T09%3A15%3A40.965670Z%200%20%5BERROR%5D%20%5BMY-012681%5D%20%5BInnoDB%5D%20mmap(137428992%20bytes)%20failed%3B%20errno%2012%5Cn2018-12-07T09%3A15%3A40.965740Z%201%20%5BERROR%5D%20%5BMY-012956%5D%20%5BInnoDB%5D%20Cannot%20allocate%20memory%20for%20the%20buffer%20pool%5Cn2018-12-07T09%3A15%3A40.965766Z%201%20%5BERROR%5D%20%5BMY-012930%5D%20%5BInnoDB%5D%20Plugin%20initialization%20aborted%20with%20error%20Generic%20error.%5Cn2018-12-07T09%3A15%3A40.965794Z%201%20%5BERROR%5D%20%5BMY-010334%5D%20%5BServer%5D%20Failed%20to%20initialize%20DD%20Storage%20Engine%5Cn2018-12-07T09%3A15%3A40.965949Z%200%20%5BERROR%5D%20%5BMY-010020%5D%20%5BServer%5D%20Data%20Dictionary%20initialization%20failed.%5Cn2018-12-07T09%3A15%3A40.965977Z%200%20%5BERROR%5D%20%5BMY-010119%5D%20%5BServer%5D%20Aborting%5Cn2018-12-07T09%3A15%3A40.966835Z%200%20%5BSystem%5D%20%5BMY-010910%5D%20%5BServer%5D%20%2Fusr%2Fsbin%2Fmysqld%3A%20Shutdown%20complete%20(mysqld%208.0.13)%20%20MySQL%20Community%20Server%20-%20GPL.%22%7D\"></card><p>搜了一下这个问题：</p><p>`[ERROR] [MY-012681] [InnoDB] mmap(137428992 bytes) failed; errno 12`</p><p>看样子是内存映射出错，再通过命令`journalctl -xe`看一下,同时也找到了原因：原来是<strong>swap分区是0(https://blog.csdn.net/sxyandapp/article/details/77091007),于是一阵操作：</strong></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2264110012%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20free%20-m%5Cn%2Fdev%2Fvda1%20%20%20%20%20%20%20%20%20%20%20%20%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ext4%20%20%20%20%20%20%20noatime%2Cacl%2Cuser_xattr%201%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20total%20%20%20%20%20%20%20%20used%20%20%20%20%20%20%20%20free%20%20%20%20%20%20shared%20%20buff%2Fcache%20%20%20available%5CnMem%3A%20%20%20%20%20%20%20%20%20%20%20%20992%20%20%20%20%20%20%20%20%20516%20%20%20%20%20%20%20%20%20304%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20171%20%20%20%20%20%20%20%20%20321%5CnSwap%3A%20%20%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20%20%200%5Cn%5Cn%E2%9E%9C%20%20~%20dd%20if%3D%2Fdev%2Fzero%20of%3D%2Fswap%20bs%3D1M%20count%3D512%5Cndd%3A%20failed%20to%20open%20%E2%80%98%2Fswap%E2%80%99%3A%20Permission%20denied%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20dd%20if%3D%2Fdev%2Fzero%20of%3D%2Fswap%20bs%3D1M%20count%3D512%5Cn512%2B0%20records%20in%5Cn512%2B0%20records%20out%5Cn536870912%20bytes%20(537%20MB)%20copied%2C%204.01658%20s%2C%20134%20MB%2Fs%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20mkswap%20%2Fswap%20%5CnSetting%20up%20swapspace%20version%201%2C%20size%20%3D%20524284%20KiB%5Cnno%20label%2C%20UUID%3D9bbac588-e6ee-4b1c-a398-4ac460ad476a%5Cn%5Cn%E2%9E%9C%20%20~%20sudo%20swapon%20%2Fswap%20%5Cnswapon%3A%20%2Fswap%3A%20insecure%20permissions%200644%2C%200600%20suggested.%5Cn%5Cn%E2%9E%9C%20%20~%20free%20-m%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20total%20%20%20%20%20%20%20%20used%20%20%20%20%20%20%20%20free%20%20%20%20%20%20shared%20%20buff%2Fcache%20%20%20available%5CnMem%3A%20%20%20%20%20%20%20%20%20%20%20%20992%20%20%20%20%20%20%20%20%20516%20%20%20%20%20%20%20%20%20%2064%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20410%20%20%20%20%20%20%20%20%20317%5CnSwap%3A%20%20%20%20%20%20%20%20%20%20%20511%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20%20%20511%5Cn%5Cn%5Cnvi%20%2Fetc%2Ffstab%5Cn%23%E5%9C%A8%E5%85%B6%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%A6%82%E4%B8%8B%E4%B8%80%E8%A1%8C%2C%E4%BF%9D%E8%AF%81%E4%B8%8B%E6%AC%A1%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%90%8E%EF%BC%8C%E6%AD%A4swap%E5%88%86%E5%8C%BA%E8%A2%AB%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E7%9A%84fstab%E6%96%87%E4%BB%B6%5Cn%2Fswap%20swap%20swap%20defaults%200%200%22%7D\"></card><p>之后再重启就好了。</p><h2 id=\"75lwvk\">4.错误：登录问题</h2><p>错误详情：</p><p>error: 'Access denied for user 'root'@'localhost' (using password: NO)'</p><p><br /></p><p>这个其实是密码的问题，没有设置密码的时候，mysql会生成一个临时的密码，通过命令：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b1ac3faa%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%9E%9C%20%20~%20sudo%20grep%20'temporary%20password'%20%2Fvar%2Flog%2Fmysqld.log%5Cn2018-12-07T09%3A08%3A22.908621Z%205%20%5BNote%5D%20%5BMY-010454%5D%20%5BServer%5D%20A%20temporary%20password%20is%20generated%20for%20root%40localhost%3A%20TdqPeZ-n%3B4Ah%22%7D\"></card><p>可以看到生成的临时密码，然后用临时密码登录即可。</p><p><br /></p><h2 id=\"wt3kod\">5.修改密码</h2><p>可能因为8.0的版本，修改的密码不能过于简单，并且命令好像也有些不一样了，用的是``</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227f9439c1%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22ALTER%20USER%20'root'%40'localhost'%20IDENTIFIED%20BY%20'MyNewPass'%3B%22%7D\"></card><p><br /></p><p>看到一个别人的回答：</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png%22%2C%22originWidth%22%3A695%2C%22originHeight%22%3A148%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A695%2C%22height%22%3A148%7D\"></card></p><p>应该是后面才改的？</p><p><br /></p><h1 id=\"69ioxf\"><a href=\"#69ioxf\"></a>6.外网连接mysql</h1><p>由于两台服务器的版本有点不一样，修改外网连接也有点不一样。</p><h2 id=\"zvrisn\"><a href=\"#zvrisn\"></a><a href=\"https://blog.csdn.net/w20228396/article/details/70143500\" target=\"_blank\">MySQL5.7</a></h2><p>1.修改配置文件</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221f68ea75%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%5Cnsudo%20vi%20%2Fetc%2Fmysql%2Fmysql.conf.d%2Fmysqld.cnf%20%20%20%23%20bind-address%3D127.0.0.1%20%E4%BF%AE%E6%94%B9%E6%88%90%20bind-address%3D0.0.0.0%5Cn%5Cn%23%20%E9%87%8D%E5%90%AF%E6%9C%8D%E5%8A%A1%5Cnservice%20mysql%20restart%5Cn%5Cn%23%20%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5mysql%E7%9A%84%E8%B4%A6%E5%8F%B7%5Cn%3E%20grant%20all%20on%20*.*%20to%20root%40'%25'%20identified%20by%20'123456'%3B%5Cn%3E%20flush%20privileges%3B%5Cn%23%20%5Cn*.*%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%20%C2%A0%20%E7%AC%AC%E4%B8%80%E4%B8%AA*%E8%A1%A8%E7%A4%BA%E5%BA%93%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA*%E8%A1%A8%E7%A4%BA%E8%A1%A8%3B%20*.*%E5%AF%B9%E5%85%A8%E9%83%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%85%A8%E9%83%A8%E8%A1%A8%E6%8E%88%E6%9D%83%EF%BC%8Cso.ok%20%E8%A1%A8%E7%A4%BA%E5%8F%AA%E5%AF%B9so%E8%BF%99%E4%B8%AA%E5%BA%93%E4%B8%AD%E7%9A%84ok%E8%A1%A8%E6%8E%88%E6%9D%83%5Cnroot%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%C2%A0%E8%A1%A8%E7%A4%BA%E8%A6%81%E7%BB%99%E5%93%AA%E4%B8%AA%E7%94%A8%E6%88%B7%E6%8E%88%E6%9D%83%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E6%98%AF%E5%AD%98%E5%9C%A8%E7%9A%84%E7%94%A8%E6%88%B7%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%5Cn'%25'%C2%A0%20%C2%A0%C2%A0%20%C2%A0%C2%A0%20%C2%A0%20%E8%A1%A8%E7%A4%BA%E5%85%81%E8%AE%B8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E7%9A%84IP%E5%9C%B0%E5%9D%80%EF%BC%8C%25%E4%BB%A3%E8%A1%A8%E5%85%81%E8%AE%B8%E6%89%80%E6%9C%89IP%E8%BF%9E%E6%8E%A5%22%7D\"></card><p><br /></p><h2 id=\"d0cydb\"><a href=\"#d0cydb\"></a><a href=\"https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0\" target=\"_blank\">MySQL8.0</a></h2><p>8.0的版本总结的对权限的管理严格很多，毕竟数据很重要，只有安全才能放心。尝试过上述方式，但是连接不上。最终在Stack Overflow上找到了办法。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22acc2d0be%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22CREATE%20USER%20'root'%40'%25'%20IDENTIFIED%20BY%20'root'%3B%5CnGRANT%20ALL%20PRIVILEGES%20ON%20*.*%20TO%20'root'%40'%25'%20WITH%20GRANT%20OPTION%3B%22%7D\"></card><p>但是修改之后还是会有问题，出现了2059错误：  </p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1544449883818-59e9985f-7a74-47f5-954e-4e8aa80ced7c.png%22%2C%22originWidth%22%3A586%2C%22originHeight%22%3A129%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A586%2C%22height%22%3A129%7D\"></card></p><p>解决方式可以采用修改密码为简单密码：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%222ca88bb8%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22SET%20GLOBAL%20validate_password.policy%3D0%3B%5CnALTER%20USER%20'root'%40'%25'%20IDENTIFIED%20WITH%20mysql_native_password%20BY%20'12345678'%3B%22%7D\"></card><p><br /></p><h1 id=\"iEnxq\">使用过程问题</h1><h2 id=\"aV8gC\">1.导入数据出错</h2><p>错误代码：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%3E%20LOAD%20DATA%20LOCAL%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%3B%5CnERROR%201148%20(42000)%3A%20The%20used%20command%20is%20not%20allowed%20with%20this%20MySQL%20version%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5CnERROR%201290%20(HY000)%3A%20The%20MySQL%20server%20is%20running%20with%20the%20--secure-file-priv%20option%20so%20it%20ca%5Cnnnot%20execute%20this%20statement%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fhome%2Fmianhk%2Fpet.txt'%20INTO%20TABLE%20pet%20LINES%20TERMINATED%20BY%20'%5C%5Cr%5C%5Cn'%3B%5CnERROR%201290%20(HY000)%3A%20The%20MySQL%20server%20is%20running%20with%20the%20--secure-file-priv%20option%20so%20it%20ca%5Cnnnot%20execute%20this%20statement%5Cn%5Cnmysql%3E%20LOAD%20DATA%20INFILE%20'%2Fvar%2Flib%2Fmysql-files%2Fpet.txt'%20INTO%20TABLE%20pet%3B%5CnQuery%20OK%2C%2010%20rows%20affected%20(0.01%20sec)%5CnRecords%3A%2010%20%20Deleted%3A%200%20%20Skipped%3A%200%20%20Warnings%3A%200%22%2C%22id%22%3A%22CjByt%22%7D\"></card><p>原因：<cursor /></p><p><span class=\"lake-fontsize-12\" style=\"color: #4F4F4F;\">secure_file_priv 设置了指定目录，需要在指定的目录下进行数据导出。</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%3E%20show%20variables%20like%20'%25secure%25'%3B%5Cn%2B--------------------------%2B-----------------------%2B%5Cn%7C%20Variable_name%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Value%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%5Cn%2B--------------------------%2B-----------------------%2B%5Cn%7C%20require_secure_transport%20%7C%20OFF%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%5Cn%7C%20secure_file_priv%20%20%20%20%20%20%20%20%20%7C%20%2Fvar%2Flib%2Fmysql-files%2F%20%7C%2B--------------------------%2B-----------------------%2B%5Cn2%20rows%20in%20set%20(0.01%20sec)%22%2C%22id%22%3A%22CDeKE%22%7D\"></card><p><br /></p><p>数据导入需要注意的:</p><ul><li>空值要用 <code>\\N</code> 代替，而不能直接使用空</li><li>分隔符一般用 <code>tab</code> </li><li>注意换行符</li></ul><p><br /></p><h1 id=\"dinty\">总结</h1><p>总之，感觉之前windows和ubuntu下都没有这么麻烦，这里总结一下吧，感觉以后会用的很多，不想踩坑了。</p><p><br /></p><h1 id=\"ex7rxf\"><a href=\"#ex7rxf\"></a>参考：</h1><p><a href=\"https://juejin.im/entry/5af5d2786fb9a07aaf3547cc\" target=\"_blank\">MySQL8.0.11连接错误2059解决方法</a></p><p><a href=\"https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0\" target=\"_blank\">How to grant all privileges to root user in MySQL 8.0</a></p><p><a href=\"https://www.cnblogs.com/echo-coding/p/9172636.html\" target=\"_blank\">centos mysql初探 -- 配置、基本操作及问题</a></p><p><br /></p><p><br /></p><p><br /></p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-14T09:06:35.000Z",
    "deleted_at": null,
    "created_at": "2018-12-07T09:41:58.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2019-05-14T08:44:21.000Z",
    "first_published_at": null,
    "word_count": 1937,
    "cover": "https://cdn.nlark.com/yuque/0/2018/png/187932/1544177770052-39cd9fe0-1c11-4059-be21-08de2d19446b.png",
    "description": "title:  CentOS7安装并使用MySQLcategories: MySQLtags: [MySQL,学习]MySQL在CentOS上的安装和使用  <!--more-->  yum安装date: 2018-12-9 21:57:59update: 2018-12-9 21:57:59...",
    "custom_description": null,
    "hits": 30,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1035369,
    "slug": "sqofpv",
    "title": "云服务器工具安装",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "<a name=\"duollf\"></a>\n# Centos7.4\n由于之前用的都是ubuntu，很多的安装感觉都很方便，直接apt-get install,换了centos，对于yum安装还不太熟，虽然命令看起来差不多，~~但是总感觉包比较少~~。然后先换个网易的源吧。。\n<a name=\"smgwtc\"></a>\n## 更换网易yum源\n[centos更换yum源](https://cloud.tencent.com/info/ef387d90b5642e20d26beecf206a6b72.html)\n<a name=\"h46xgf\"></a>\n### \n```\n#1.备份CentOS-Base.repo\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n#2.进入目录\ncd /etc/yum.repos.d/\n#3.下载163的yum源配置文件并修改文件名为CentOS-Base.repo\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n#运行yum makecache生成缓存\nyum makecache\n#更新系统\nyum -y update\n```\n\n<a name=\"n30pmq\"></a>\n## 安装mysql-server\n哇，安装了很多遍，从没遇到这么复杂过，以至于我专门总结了一篇。\n<a name=\"v2qqqe\"></a>\n# Tmux\n<a name=\"9pgial\"></a>\n# ZSH\n<a name=\"gcpxtl\"></a>\n## 1.安装zsh\n```powershell\nyum -y install zsh\n```\n安装[oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh) \n```\nsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"\n```\n\n",
    "body_html": null,
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><h1 id=\"duollf\"><a href=\"#duollf\" id=\"centos7.4\"></a>Centos7.4</h1><p>由于之前用的都是ubuntu，很多的安装感觉都很方便，直接apt-get install,换了centos，对于yum安装还不太熟，虽然命令看起来差不多，<del>但是总感觉包比较少</del>。然后先换个网易的源吧。。</p><h2 id=\"smgwtc\"><a href=\"#smgwtc\" id=\"更换网易yum源\"></a>更换网易yum源</h2><p>[centos更换yum源](https://cloud.tencent.com/info/ef387d90b5642e20d26beecf206a6b72.html)</p><h3 id=\"h46xgf\"></h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226864d8de%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%231.%E5%A4%87%E4%BB%BDCentOS-Base.repo%5Cnmv%20%2Fetc%2Fyum.repos.d%2FCentOS-Base.repo%20%2Fetc%2Fyum.repos.d%2FCentOS-Base.repo.backup%5Cn%232.%E8%BF%9B%E5%85%A5%E7%9B%AE%E5%BD%95%5Cncd%20%2Fetc%2Fyum.repos.d%2F%5Cn%233.%E4%B8%8B%E8%BD%BD163%E7%9A%84yum%E6%BA%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B9%B6%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BACentOS-Base.repo%5Cnwget%20-O%20%2Fetc%2Fyum.repos.d%2FCentOS-Base.repo%20http%3A%2F%2Fmirrors.aliyun.com%2Frepo%2FCentos-7.repo%5Cn%23%E8%BF%90%E8%A1%8Cyum%20makecache%E7%94%9F%E6%88%90%E7%BC%93%E5%AD%98%5Cnyum%20makecache%5Cn%23%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%5Cnyum%20-y%20update%22%7D\"></card><p><br /></p><h2 id=\"n30pmq\"><a href=\"#n30pmq\" id=\"安装mysql-server\"></a>安装mysql-server</h2><p>哇，安装了很多遍，从没遇到这么复杂过，以至于我专门总结了一篇。</p><h1 id=\"v2qqqe\"><a href=\"#v2qqqe\" id=\"tmux\"></a>Tmux</h1><h1 id=\"9pgial\"><a href=\"#9pgial\" id=\"zsh\"></a>ZSH</h1><h2 id=\"gcpxtl\"><a href=\"#gcpxtl\" id=\"1.安装zsh\"></a>1.安装zsh</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e9f92bbb%22%2C%22mode%22%3A%22powershell%22%2C%22code%22%3A%22yum%20-y%20install%20zsh%22%7D\"></card><p>安装<a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">oh-my-zsh</a> </p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22fc046501%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22sh%20-c%20%5C%22%24(wget%20https%3A%2F%2Fraw.githubusercontent.com%2Frobbyrussell%2Foh-my-zsh%2Fmaster%2Ftools%2Finstall.sh%20-O%20-)%5C%22%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2018-12-07T09:41:41.000Z",
    "deleted_at": null,
    "created_at": "2018-12-07T03:15:36.000Z",
    "updated_at": "2020-07-11T15:53:43.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": "2020-07-11T15:53:42.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1030549,
    "slug": "qga31w",
    "title": "go语言问题",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "go语言问题<br />URL编码问题：/zz_spfxmcx_mx.jspx?dengJh=夏1800678 打开不了<br />[http://www.cnblogs.com/the-moving-ear/p/3523663.html](http://www.cnblogs.com/the-moving-ear/p/3523663.html)\n\n<a name=\"3sqtsb\"></a>\n## 没有net/url包\n\n",
    "body_html": null,
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><p>go语言问题</p><p>URL编码问题：/zz_spfxmcx_mx.jspx?dengJh=夏1800678 打开不了</p><p><a href=\"http://www.cnblogs.com/the-moving-ear/p/3523663.html\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">http://www.cnblogs.com/the-moving-ear/p/3523663.html</a></p><p><br /></p><h2 id=\"3sqtsb\"><a href=\"#3sqtsb\" id=\"没有net-url包\"></a>没有net/url包</h2><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2018-12-12T01:50:14.000Z",
    "deleted_at": null,
    "created_at": "2018-12-05T11:08:04.000Z",
    "updated_at": "2020-07-11T15:53:43.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": "2020-07-11T15:53:42.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1017057,
    "slug": "xz596r",
    "title": "Go语言学习笔记",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "<a name=\"yiegtp\"></a>\n# Go语言解决的问题\n\n<a name=\"mya2pe\"></a>\n## 高性能+快的开发速度\n1.开发速度：编译器只会关注被直接引用的库，而不用遍历依赖链中所有依赖的库。很多 Go 程序可以在 1 秒内编译完。  <br />2.并发：goroutine很像线程，但是它占用的内存远少于线程，使用它需要的代码更少。通道（ channel）是一种内置的数据结构，可以让用户在不同的 goroutine 之间同步发送具有类型的消息。这让编程模型更倾向于在 goroutine之间发送消息，而不是让多个 goroutine 争夺同一个数据的使用权。goroutine 使用的内存比线程更少， Go 语言运行时会自动在配置的一组逻辑处理器上调度执行 goroutine。每个逻辑处<br />理器绑定到一个操作系统线程上。  <br />3.类型系统：灵活的、无继承的类型系统。类型简单，接口对一组行为建模。  <br />4.内存管理：现代化的垃圾回收机制。\n\n<a name=\"pav5xe\"></a>\n## Golang常用工具链\n\n\n",
    "body_html": null,
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><h1 id=\"yiegtp\"><a href=\"#yiegtp\" id=\"go语言解决的问题\"></a>Go语言解决的问题</h1><p><br /></p><h2 id=\"mya2pe\"><a href=\"#mya2pe\" id=\"高性能+快的开发速度\"></a>高性能+快的开发速度</h2><p>1.开发速度：编译器只会关注被直接引用的库，而不用遍历依赖链中所有依赖的库。很多 Go 程序可以在 1 秒内编译完。  </p><p>2.并发：goroutine很像线程，但是它占用的内存远少于线程，使用它需要的代码更少。通道（ channel）是一种内置的数据结构，可以让用户在不同的 goroutine 之间同步发送具有类型的消息。这让编程模型更倾向于在 goroutine之间发送消息，而不是让多个 goroutine 争夺同一个数据的使用权。goroutine 使用的内存比线程更少， Go 语言运行时会自动在配置的一组逻辑处理器上调度执行 goroutine。每个逻辑处<br />理器绑定到一个操作系统线程上。  </p><p>3.类型系统：灵活的、无继承的类型系统。类型简单，接口对一组行为建模。  </p><p>4.内存管理：现代化的垃圾回收机制。</p><p><br /></p><h2 id=\"pav5xe\"><a href=\"#pav5xe\" id=\"golang常用工具链\"></a>Golang常用工具链</h2><p><br /></p><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2018-12-26T13:30:13.000Z",
    "deleted_at": null,
    "created_at": "2018-12-01T02:43:16.000Z",
    "updated_at": "2020-07-11T15:53:43.000Z",
    "published_at": "2020-07-11T15:53:43.000Z",
    "first_published_at": "2020-07-11T15:53:43.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "title": "无标题",
    "description": "",
    "created_at": "2018-12-01T02:42:59.000Z",
    "updated_at": "2018-12-01T02:42:59.000Z",
    "published_at": null,
    "format": "asl",
    "slug": "gyryh3",
    "last_editor": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "large_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "followers_count": 3,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2019-05-01T07:47:16.000Z",
      "_serializer": "v2.user"
    },
    "body": ""
  },
  {
    "id": 970170,
    "slug": "eg7hkp",
    "title": "使用语雀编辑器写静态博客",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title:  使用语雀编辑器写静态博客<br />date: 2018-11-14 22:27:10\r<br />update: 2018-11-14 22:27:10<br />categories: 工具<br />tags: [Hexo,折腾,语雀]\r<br />\r<br />\r<br />---\n> 本来以为已经是最后一次折腾了，但是总是生活不停，折腾不止，觉得本地文件管起来还是有点麻烦，看到语雀markdown又做的这么好，前几天还准备拿它当云笔记用，但是据说底层存的都是md格式，有的时候又还是不太方便，不过做编辑器来说确实很爽了，自带图床，还有github上开源的一个接口。   \n\n\n<!--more-->\n\n<a name=\"s7pfan\"></a>\n# 准备工作\n<a name=\"p3r4ex\"></a>\n## 更新node.js和npm\n刚刚来就是坑，不过还是准备从正常的步骤开始说吧，就是博客基于的是nodejs，很多包的安装都是采用npm统一管理的，因为有些插件需要使用新的版本，所以需要先更新一下，这里只说一下windows下面的操作。\n<a name=\"p7w2ix\"></a>\n### 更新node.js\nwindow下并没有网上说的乱七八糟的命令行更新方式，直接在[官网](http://nodejs.cn/)下载最新的安装包就可以。然后安装在之前的位置进行覆盖就可以更新了。更新之后通过命令:\n```git\n$node -v\nv10.13.0\n```\n<a name=\"85nlcu\"></a>\n### 更新npm\n通过命令：\n```git\n$npm install -g npm\n\n#更新后的版本可以看到\n$npm -v\n6.4.1\n```\n<a name=\"wng1dw\"></a>\n### 更新包\n可以使用命令查看可以更新的包:\n```git\n$npm outdated         #查看需要更新的包：\nPackage                 Current  Wanted  Latest  Location\nhexo-helper-live2d      MISSING   3.1.0   3.1.0  hexo-site\nhexo                      3.3.9   3.8.0   3.8.0  hexo-site\nhexo-douban              0.2.14  0.2.16   1.0.6  hexo-site\nhexo-generator-archive    0.1.4   0.1.5   0.1.5  hexo-site\nhexo-generator-search     2.2.5   2.3.0   2.3.0  hexo-site\nhexo-renderer-ejs         0.2.0   0.2.0   0.3.1  hexo-site\nhexo-renderer-marked     0.2.11  0.2.11   0.3.2  hexo-site\nhexo-server               0.2.2   0.2.2   0.3.3  hexo-site\n$npm install --save  #\n```\n之后修改`package.json`文件，修改到对应的版本。然后执行命令，进行更新：\n```\n$npm install --save\n```\n<a name=\"ac8d0a27\"></a>\n## 安装语雀文章下载插件\n首先这里鸣谢开源的插件：[[yuque-hexo](https://github.com/x-cold/yuque-hexo)](https://github.com/x-cold/yuque-hexo)，通过工具可以将语雀知识库中的文件同步到本地，大部分功能和步骤在仓库中都有些，但是自己做的时候还是踩了坑，这里就还是写一下吧。\n<a name=\"z8p4qn\"></a>\n### 1.创建语雀知识库\n打开[语雀](https://www.yuque.com/) 创建自己的博客知识库，并且要**设置成公开的。可以在设置中看到链接如下：**<br />![](https://cdn.nlark.com/yuque/0/2018/png/187932/1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png#width=375)<br />同时打开[blog知识库](https://www.yuque.com/mianhk/gaqqwc):[https://www.yuque.com/mianhk/gaqqwc](https://www.yuque.com/mianhk/gaqqwc)可以打开知识库。\n<a name=\"p1gbwg\"></a>\n### 2.在本地安装yuque-hexo\n```git\nnpm i -g yuque-hexo\n```\n<a name=\"2nybfh\"></a>\n### 3.配置package.json\n```\n  \"scripts\": {\n    \"clean\": \"npm run clean:yuque && hexo clean\",\n    \"clean:yuque\": \"DEBUG=yuque-hexo.* yuque-hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"publish\": \"npm run clean && npm run deploy\",\n    \"dev\": \"hexo s\",\n    \"sync\": \"DEBUG=yuque-hexo.* yuque-hexo sync\",\n    \"reset\": \"npm run clean:yuque && npm run sync\"\n  },   \n  \"yuqueConfig\": {\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",    #这是语雀的永久链接，直接复制就可以\n    \"login\": \"mianhk\",                      #用户名，上个链接的第一个下划线\n    \"repo\": \"gaqqwc\",                      #知识库链接，第二个下划线\n    \"mdNameFormat\": \"slug\",               #导出本地的文件名为随机的数字，比直接的中文title要好看，\n                                                可以直接用了\n    \"postPath\": \"source/_posts/yuque\"     #存在本地文件夹的位置\n  }\n```\n\n<a name=\"0rl2so\"></a>\n### 4.删除和同步文章\n```\n#删除文章\n$yuque-clean\n[INFO] yuque-hexo clean start.\n[INFO] remove yuque posts: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\\n[INFO] remove yuque local file: F:\\blog\\mianhk.github.io\\yuque.json\n[INFO] yuque-hexo clean finished.\n\n#同步文章\n$yuque-hexo sync\n[INFO] yuque-hexo sync start.\n[INFO] remove yuque posts: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\\n[INFO] loading config: F:\\blog\\mianhk.github.io\\package.json\n[INFO] downloading articles: {\"baseUrl\":\"https://www.yuque.com/api/v2\",\"login\":\"mianhk\",\"repo\":\"gaqqwc\",\"mdNameFormat\":\"slug\",\"postPath\":\"source/_posts/yuque\"}\n[INFO] reading from local file: F:\\blog\\mianhk.github.io\\yuque.json\n[INFO] download article body: 11月生活小结\n[INFO] download articls done!\n[INFO] writing to local file: F:\\blog\\mianhk.github.io\\yuque.json\n[INFO] create posts director (if it not exists): F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\n[INFO] generate post file: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\xzxhcv.md\n[INFO] yuque-hexo sync finished.\n```\n\n<a name=\"enltgy\"></a>\n### 5.修改文章的title和tag等\n还是跟之前的格式直接写即可。\n```makedown\ntitle:  \ndate: \nupdate: \ncategories: \ntags: []\n```\n\n<a name=\"974chn\"></a>\n### 6.部署博客\n\n<a name=\"mzmxge\"></a>\n# 记录一些坑\n\n- 知识库一定要是公开的\n\n- windows下更新nodejs不能用n，即使强制使用了也还是无法更新\n\n- 新版本的npm。如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。\n\n\n\n<a name=\"vpz7ep\"></a>\n## Reference:\n\n- [https://github.com/x-cold/yuque-hexo](https://github.com/x-cold/yuque-hexo)\n\n- [https://luan.ma/post/yuque2blog/](https://luan.ma/post/yuque2blog/)\n\n- [https://www.zhihu.com/question/62331583](https://www.zhihu.com/question/62331583)\n\n- [将 Hexo 升级到 v3.5.0](https://tommy.net.cn/2018/02/26/upgrade-hexo-to-v3-5-0/) \n\n- [Demo Json](https://github.com/x-cold/blog/blob/master/package.json#L26) \n\n\n",
    "body_draft": "title:  使用语雀编辑器写静态博客<br />date: 2018-11-14 22:27:10\r<br />update: 2018-11-14 22:27:10<br />categories: 工具<br />tags: [Hexo,折腾,语雀]\r<br />\r<br />\r<br />---\n> 本来以为已经是最后一次折腾了，但是总是生活不停，折腾不止，觉得本地文件管起来还是有点麻烦，看到语雀markdown又做的这么好，前几天还准备拿它当云笔记用，但是据说底层存的都是md格式，有的时候又还是不太方便，不过做编辑器来说确实很爽了，自带图床，还有github上开源的一个接口。   \n\n\n<!--more-->\n\n<a name=\"s7pfan\"></a>\n# 准备工作\n<a name=\"p3r4ex\"></a>\n## 更新node.js和npm\n刚刚来就是坑，不过还是准备从正常的步骤开始说吧，就是博客基于的是nodejs，很多包的安装都是采用npm统一管理的，因为有些插件需要使用新的版本，所以需要先更新一下，这里只说一下windows下面的操作。\n<a name=\"p7w2ix\"></a>\n### 更新node.js\nwindow下并没有网上说的乱七八糟的命令行更新方式，直接在[官网](http://nodejs.cn/)下载最新的安装包就可以。然后安装在之前的位置进行覆盖就可以更新了。更新之后通过命令:\n```git\n$node -v\nv10.13.0\n```\n<a name=\"85nlcu\"></a>\n### 更新npm\n通过命令：\n```git\n$npm install -g npm\n\n#更新后的版本可以看到\n$npm -v\n6.4.1\n```\n<a name=\"wng1dw\"></a>\n### 更新包\n可以使用命令查看可以更新的包:\n```git\n$npm outdated         #查看需要更新的包：\nPackage                 Current  Wanted  Latest  Location\nhexo-helper-live2d      MISSING   3.1.0   3.1.0  hexo-site\nhexo                      3.3.9   3.8.0   3.8.0  hexo-site\nhexo-douban              0.2.14  0.2.16   1.0.6  hexo-site\nhexo-generator-archive    0.1.4   0.1.5   0.1.5  hexo-site\nhexo-generator-search     2.2.5   2.3.0   2.3.0  hexo-site\nhexo-renderer-ejs         0.2.0   0.2.0   0.3.1  hexo-site\nhexo-renderer-marked     0.2.11  0.2.11   0.3.2  hexo-site\nhexo-server               0.2.2   0.2.2   0.3.3  hexo-site\n$npm install --save  #\n```\n之后修改`package.json`文件，修改到对应的版本。然后执行命令，进行更新：\n```\n$npm install --save\n```\n<a name=\"ac8d0a27\"></a>\n## 安装语雀文章下载插件\n首先这里鸣谢开源的插件：[[yuque-hexo](https://github.com/x-cold/yuque-hexo)](https://github.com/x-cold/yuque-hexo)，通过工具可以将语雀知识库中的文件同步到本地，大部分功能和步骤在仓库中都有些，但是自己做的时候还是踩了坑，这里就还是写一下吧。\n<a name=\"z8p4qn\"></a>\n### 1.创建语雀知识库\n打开[语雀](https://www.yuque.com/) 创建自己的博客知识库，并且要**设置成公开的。可以在设置中看到链接如下：**<br />![](https://cdn.nlark.com/yuque/0/2018/png/187932/1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png#width=375)<br />同时打开[blog知识库](https://www.yuque.com/mianhk/gaqqwc):[https://www.yuque.com/mianhk/gaqqwc](https://www.yuque.com/mianhk/gaqqwc)可以打开知识库。\n<a name=\"p1gbwg\"></a>\n### 2.在本地安装yuque-hexo\n```git\nnpm i -g yuque-hexo\n```\n<a name=\"2nybfh\"></a>\n### 3.配置package.json\n```\n  \"scripts\": {\n    \"clean\": \"npm run clean:yuque && hexo clean\",\n    \"clean:yuque\": \"DEBUG=yuque-hexo.* yuque-hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"publish\": \"npm run clean && npm run deploy\",\n    \"dev\": \"hexo s\",\n    \"sync\": \"DEBUG=yuque-hexo.* yuque-hexo sync\",\n    \"reset\": \"npm run clean:yuque && npm run sync\"\n  },   \n  \"yuqueConfig\": {\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",    #这是语雀的永久链接，直接复制就可以\n    \"login\": \"mianhk\",                      #用户名，上个链接的第一个下划线\n    \"repo\": \"gaqqwc\",                      #知识库链接，第二个下划线\n    \"mdNameFormat\": \"slug\",               #导出本地的文件名为随机的数字，比直接的中文title要好看，\n                                                可以直接用了\n    \"postPath\": \"source/_posts/yuque\"     #存在本地文件夹的位置\n  }\n```\n\n<a name=\"0rl2so\"></a>\n### 4.删除和同步文章\n```\n#删除文章\n$yuque-clean\n[INFO] yuque-hexo clean start.\n[INFO] remove yuque posts: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\\n[INFO] remove yuque local file: F:\\blog\\mianhk.github.io\\yuque.json\n[INFO] yuque-hexo clean finished.\n\n#同步文章\n$yuque-hexo sync\n[INFO] yuque-hexo sync start.\n[INFO] remove yuque posts: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\\n[INFO] loading config: F:\\blog\\mianhk.github.io\\package.json\n[INFO] downloading articles: {\"baseUrl\":\"https://www.yuque.com/api/v2\",\"login\":\"mianhk\",\"repo\":\"gaqqwc\",\"mdNameFormat\":\"slug\",\"postPath\":\"source/_posts/yuque\"}\n[INFO] reading from local file: F:\\blog\\mianhk.github.io\\yuque.json\n[INFO] download article body: 11月生活小结\n[INFO] download articls done!\n[INFO] writing to local file: F:\\blog\\mianhk.github.io\\yuque.json\n[INFO] create posts director (if it not exists): F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\n[INFO] generate post file: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\xzxhcv.md\n[INFO] yuque-hexo sync finished.\n```\n\n<a name=\"enltgy\"></a>\n### 5.修改文章的title和tag等\n还是跟之前的格式直接写即可。\n```makedown\ntitle:  \ndate: \nupdate: \ncategories: \ntags: []\n```\n\n<a name=\"974chn\"></a>\n### 6.部署博客\n\n<a name=\"mzmxge\"></a>\n# 记录一些坑\n\n- 知识库一定要是公开的\n\n- windows下更新nodejs不能用n，即使强制使用了也还是无法更新\n\n- 新版本的npm。如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。\n\n\n\n<a name=\"vpz7ep\"></a>\n## Reference:\n\n- [https://github.com/x-cold/yuque-hexo](https://github.com/x-cold/yuque-hexo)\n\n- [https://luan.ma/post/yuque2blog/](https://luan.ma/post/yuque2blog/)\n\n- [https://www.zhihu.com/question/62331583](https://www.zhihu.com/question/62331583)\n\n- [将 Hexo 升级到 v3.5.0](https://tommy.net.cn/2018/02/26/upgrade-hexo-to-v3-5-0/) \n\n- [Demo Json](https://github.com/x-cold/blog/blob/master/package.json#L26) \n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">title: &nbsp;使用语雀编辑器写静态博客</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">date: 2018-11-14 22:27:10</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">update: 2018-11-14 22:27:10</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: 工具</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [Hexo,折腾,语雀]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">---</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">本来以为已经是最后一次折腾了，但是总是生活不停，折腾不止，觉得本地文件管起来还是有点麻烦，看到语雀markdown又做的这么好，前几天还准备拿它当云笔记用，但是据说底层存的都是md格式，有的时候又还是不太方便，不过做编辑器来说确实很爽了，自带图床，还有github上开源的一个接口。 &nbsp; </p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">&lt;!--more--&gt;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"s7pfan\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#s7pfan\"></a>准备工作</h1><h2 id=\"p3r4ex\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#p3r4ex\"></a>更新node.js和npm</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">刚刚来就是坑，不过还是准备从正常的步骤开始说吧，就是博客基于的是nodejs，很多包的安装都是采用npm统一管理的，因为有些插件需要使用新的版本，所以需要先更新一下，这里只说一下windows下面的操作。</p><h3 id=\"p7w2ix\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#p7w2ix\"></a>更新node.js</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">window下并没有网上说的乱七八糟的命令行更新方式，直接在<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>下载最新的安装包就可以。然后安装在之前的位置进行覆盖就可以更新了。更新之后通过命令:</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22ed2ff298%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24node%20-v%5Cnv10.13.0%22%7D\" id=\"ed2ff298\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$node -v\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">v10.13.0</span></span></pre></div></div></div><h3 id=\"85nlcu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#85nlcu\"></a>更新npm</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">通过命令：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%228de08b6f%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24npm%20install%20-g%20npm%5Cn%5Cn%23%E6%9B%B4%E6%96%B0%E5%90%8E%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%5Cn%24npm%20-v%5Cn6.4.1%22%7D\" id=\"8de08b6f\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$npm install -g npm\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#更新后的版本可以看到\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$npm -v\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">6.4.1</span></span></pre></div></div></div><h3 id=\"wng1dw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#wng1dw\"></a>更新包</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以使用命令查看可以更新的包:</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22a4fff8b0%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24npm%20outdated%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%23%E6%9F%A5%E7%9C%8B%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E7%9A%84%E5%8C%85%EF%BC%9A%5CnPackage%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Current%20%20Wanted%20%20Latest%20%20Location%5Cnhexo-helper-live2d%20%20%20%20%20%20MISSING%20%20%203.1.0%20%20%203.1.0%20%20hexo-site%5Cnhexo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%203.3.9%20%20%203.8.0%20%20%203.8.0%20%20hexo-site%5Cnhexo-douban%20%20%20%20%20%20%20%20%20%20%20%20%20%200.2.14%20%200.2.16%20%20%201.0.6%20%20hexo-site%5Cnhexo-generator-archive%20%20%20%200.1.4%20%20%200.1.5%20%20%200.1.5%20%20hexo-site%5Cnhexo-generator-search%20%20%20%20%202.2.5%20%20%202.3.0%20%20%202.3.0%20%20hexo-site%5Cnhexo-renderer-ejs%20%20%20%20%20%20%20%20%200.2.0%20%20%200.2.0%20%20%200.3.1%20%20hexo-site%5Cnhexo-renderer-marked%20%20%20%20%200.2.11%20%200.2.11%20%20%200.3.2%20%20hexo-site%5Cnhexo-server%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200.2.2%20%20%200.2.2%20%20%200.3.3%20%20hexo-site%5Cn%24npm%20install%20--save%20%20%23%22%7D\" id=\"a4fff8b0\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$npm outdated &nbsp; &nbsp; &nbsp; &nbsp; #查看需要更新的包：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Package                 Current  Wanted  Latest  Location\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-helper-live2d      MISSING   3.1.0   3.1.0  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo                      3.3.9   3.8.0   3.8.0  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-douban              0.2.14  0.2.16   1.0.6  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-generator-archive    0.1.4   0.1.5   0.1.5  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-generator-search     2.2.5   2.3.0   2.3.0  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-renderer-ejs         0.2.0   0.2.0   0.3.1  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-renderer-marked     0.2.11  0.2.11   0.3.2  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hexo-server               0.2.2   0.2.2   0.3.3  hexo-site\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$npm install --save  #</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">之后修改`package.json`文件，修改到对应的版本。然后执行命令，进行更新：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2294bf6c98%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%24npm%20install%20--save%22%7D\" id=\"94bf6c98\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$npm install --save</span></span></pre></div></div></div><h2 style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#安装语雀文章下载插件\"></a>安装语雀文章下载插件</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">首先这里鸣谢开源的插件：[<a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\" rel=\"noopener noreferrer\">yuque-hexo</a>](https://github.com/x-cold/yuque-hexo)，通过工具可以将语雀知识库中的文件同步到本地，大部分功能和步骤在仓库中都有些，但是自己做的时候还是踩了坑，这里就还是写一下吧。</p><h3 id=\"z8p4qn\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#z8p4qn\"></a>1.创建语雀知识库</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">打开<a href=\"https://www.yuque.com/\" target=\"_blank\">语雀</a> 创建自己的博客知识库，并且要<strong>设置成公开的。可以在设置中看到链接如下：</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png%22%2C%22width%22%3A375%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png\" class=\"image lake-drag-image\" style=\"visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">同时打开<a href=\"https://www.yuque.com/mianhk/gaqqwc\" target=\"_blank\">blog知识库</a>:<a href=\"https://www.yuque.com/mianhk/gaqqwc\" target=\"_blank\">https://www.yuque.com/mianhk/gaqqwc</a>可以打开知识库。</p><h3 id=\"p1gbwg\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#p1gbwg\"></a>2.在本地安装<span style=\"color: #4A4A4A;\"><span style=\"background-color: #FFFFFF;\">yuque-hexo</span></span></h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22e44971b2%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22npm%20i%20-g%20yuque-hexo%22%7D\" id=\"e44971b2\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">npm i -g yuque-hexo</span></span></pre></div></div></div><h3 id=\"2nybfh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#2nybfh\"></a>3.配置package.json</h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2217fd4269%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%20%20%5C%22scripts%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22clean%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22clean%3Ayuque%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22deploy%5C%22%3A%20%5C%22hexo%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22publish%5C%22%3A%20%5C%22npm%20run%20clean%20%26%26%20npm%20run%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22dev%5C%22%3A%20%5C%22hexo%20s%5C%22%2C%5Cn%20%20%20%20%5C%22sync%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20sync%5C%22%2C%5Cn%20%20%20%20%5C%22reset%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20npm%20run%20sync%5C%22%5Cn%20%20%7D%2C%C2%A0%20%20%5Cn%20%C2%A0%5C%22yuqueConfig%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22baseUrl%5C%22%3A%20%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%20%20%20%20%23%E8%BF%99%E6%98%AF%E8%AF%AD%E9%9B%80%E7%9A%84%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%E5%B0%B1%E5%8F%AF%E4%BB%A5%5Cn%20%20%20%20%5C%22login%5C%22%3A%20%5C%22mianhk%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E7%94%A8%E6%88%B7%E5%90%8D%EF%BC%8C%E4%B8%8A%E4%B8%AA%E9%93%BE%E6%8E%A5%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%5Cn%20%20%20%20%5C%22repo%5C%22%3A%20%5C%22gaqqwc%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E7%9F%A5%E8%AF%86%E5%BA%93%E9%93%BE%E6%8E%A5%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%5Cn%20%20%20%20%5C%22mdNameFormat%5C%22%3A%20%5C%22slug%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E5%AF%BC%E5%87%BA%E6%9C%AC%E5%9C%B0%E7%9A%84%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%8C%E6%AF%94%E7%9B%B4%E6%8E%A5%E7%9A%84%E4%B8%AD%E6%96%87title%E8%A6%81%E5%A5%BD%E7%9C%8B%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E4%BA%86%5Cn%20%20%20%20%5C%22postPath%5C%22%3A%20%5C%22source%2F_posts%2Fyuque%5C%22%20%20%20%20%20%23%E5%AD%98%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%8D%E7%BD%AE%5Cn%20%20%7D%22%7D\" id=\"17fd4269\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  \"scripts\": {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"clean\": \"npm run clean:yuque &amp;&amp; hexo clean\",\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"clean:yuque\": \"DEBUG=yuque-hexo.* yuque-hexo clean\",\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"deploy\": \"hexo deploy\",\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"publish\": \"npm run clean &amp;&amp; npm run deploy\",\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"dev\": \"hexo s\",\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"sync\": \"DEBUG=yuque-hexo.* yuque-hexo sync\",\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"reset\": \"npm run clean:yuque &amp;&amp; npm run sync\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  },&nbsp;  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> &nbsp;\"yuqueConfig\": {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"baseUrl\": \"https://www.yuque.com/api/v2\",    #这是语雀的永久链接，直接复制就可以\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"login\": \"mianhk\",                      #用户名，上个链接的第一个下划线\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"repo\": \"gaqqwc\",                      #知识库链接，第二个下划线\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"mdNameFormat\": \"slug\",               #导出本地的文件名为随机的数字，比直接的中文title要好看，\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                                可以直接用了\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"postPath\": \"source/_posts/yuque\"     #存在本地文件夹的位置\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"0rl2so\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#0rl2so\"></a>4.删除和同步文章</h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2240fdb86b%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%23%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0%5Cn%24yuque-clean%5Cn%5BINFO%5D%20yuque-hexo%20clean%20start.%5Cn%5BINFO%5D%20remove%20yuque%20posts%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5C%5Cn%5BINFO%5D%20remove%20yuque%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20yuque-hexo%20clean%20finished.%5Cn%5Cn%23%E5%90%8C%E6%AD%A5%E6%96%87%E7%AB%A0%5Cn%24yuque-hexo%20sync%5Cn%5BINFO%5D%20yuque-hexo%20sync%20start.%5Cn%5BINFO%5D%20remove%20yuque%20posts%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5C%5Cn%5BINFO%5D%20loading%20config%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cpackage.json%5Cn%5BINFO%5D%20downloading%20articles%3A%20%7B%5C%22baseUrl%5C%22%3A%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%5C%22login%5C%22%3A%5C%22mianhk%5C%22%2C%5C%22repo%5C%22%3A%5C%22gaqqwc%5C%22%2C%5C%22mdNameFormat%5C%22%3A%5C%22slug%5C%22%2C%5C%22postPath%5C%22%3A%5C%22source%2F_posts%2Fyuque%5C%22%7D%5Cn%5BINFO%5D%20reading%20from%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20download%20article%20body%3A%2011%E6%9C%88%E7%94%9F%E6%B4%BB%E5%B0%8F%E7%BB%93%5Cn%5BINFO%5D%20download%20articls%20done!%5Cn%5BINFO%5D%20writing%20to%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20create%20posts%20director%20(if%20it%20not%20exists)%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5Cn%5BINFO%5D%20generate%20post%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5Cxzxhcv.md%5Cn%5BINFO%5D%20yuque-hexo%20sync%20finished.%22%7D\" id=\"40fdb86b\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#删除文章\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$yuque-clean\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] yuque-hexo clean start.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] remove yuque posts: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] remove yuque local file: F:\\blog\\mianhk.github.io\\yuque.json\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] yuque-hexo clean finished.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#同步文章\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$yuque-hexo sync\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] yuque-hexo sync start.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] remove yuque posts: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] loading config: F:\\blog\\mianhk.github.io\\package.json\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] downloading articles: {\"baseUrl\":\"https://www.yuque.com/api/v2\",\"login\":\"mianhk\",\"repo\":\"gaqqwc\",\"mdNameFormat\":\"slug\",\"postPath\":\"source/_posts/yuque\"}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] reading from local file: F:\\blog\\mianhk.github.io\\yuque.json\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] download article body: 11月生活小结\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] download articls done!\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] writing to local file: F:\\blog\\mianhk.github.io\\yuque.json\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] create posts director (if it not exists): F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] generate post file: F:\\blog\\mianhk.github.io\\source\\_posts\\yuque\\xzxhcv.md\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">[INFO] yuque-hexo sync finished.</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"enltgy\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#enltgy\"></a>5.修改文章的title和tag等</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">还是跟之前的格式直接写即可。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%223957235e%22%2C%22mode%22%3A%22makedown%22%2C%22code%22%3A%22title%3A%20%20%5Cndate%3A%20%5Cnupdate%3A%20%5Cncategories%3A%20%5Cntags%3A%20%5B%5D%22%7D\" id=\"3957235e\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">title:  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">date: \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">update: \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">categories: \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tags: []</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"974chn\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#974chn\"></a>6.部署博客</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h1 id=\"mzmxge\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><a href=\"#mzmxge\"></a>记录一些坑</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">知识库一定要是公开的</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">windows下更新nodejs不能用n，即使强制使用了也还是无法更新</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">新版本的npm。<span style=\"color: #1A1A1A;\"><span style=\"background-color: #FFFFFF;\">如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。</span></span></p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"vpz7ep\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#vpz7ep\"></a>Reference:</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/x-cold/yuque-hexo</a></p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://luan.ma/post/yuque2blog/\" target=\"_blank\" rel=\"noopener noreferrer\">https://luan.ma/post/yuque2blog/</a></p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://www.zhihu.com/question/62331583\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.zhihu.com/question/62331583</a></p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://tommy.net.cn/2018/02/26/upgrade-hexo-to-v3-5-0/\" target=\"_blank\" rel=\"noopener noreferrer\">将 Hexo 升级到 v3.5.0</a></p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://github.com/x-cold/blog/blob/master/package.json#L26\" target=\"_blank\" rel=\"noopener noreferrer\">Demo Json</a></p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><p>title:  使用语雀编辑器写静态博客</p><p>date: 2018-11-14 22:27:10\r</p><p>update: 2018-11-14 22:27:10</p><p>categories: 工具</p><p>tags: [Hexo,折腾,语雀]\r</p><p>\r</p><p>\r</p><p>---</p><blockquote><p>本来以为已经是最后一次折腾了，但是总是生活不停，折腾不止，觉得本地文件管起来还是有点麻烦，看到语雀markdown又做的这么好，前几天还准备拿它当云笔记用，但是据说底层存的都是md格式，有的时候又还是不太方便，不过做编辑器来说确实很爽了，自带图床，还有github上开源的一个接口。   </p></blockquote><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><h1 id=\"s7pfan\"><a href=\"#s7pfan\" id=\"准备工作\"></a>准备工作</h1><h2 id=\"p3r4ex\"><a href=\"#p3r4ex\" id=\"更新node.js和npm\"></a>更新node.js和npm</h2><p>刚刚来就是坑，不过还是准备从正常的步骤开始说吧，就是博客基于的是nodejs，很多包的安装都是采用npm统一管理的，因为有些插件需要使用新的版本，所以需要先更新一下，这里只说一下windows下面的操作。</p><h3 id=\"p7w2ix\"><a href=\"#p7w2ix\" id=\"更新node.js\"></a>更新node.js</h3><p>window下并没有网上说的乱七八糟的命令行更新方式，直接在<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">官网</a>下载最新的安装包就可以。然后安装在之前的位置进行覆盖就可以更新了。更新之后通过命令:</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ed2ff298%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24node%20-v%5Cnv10.13.0%22%7D\"></card><h3 id=\"85nlcu\"><a href=\"#85nlcu\" id=\"更新npm\"></a>更新npm</h3><p>通过命令：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228de08b6f%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24npm%20install%20-g%20npm%5Cn%5Cn%23%E6%9B%B4%E6%96%B0%E5%90%8E%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%5Cn%24npm%20-v%5Cn6.4.1%22%7D\"></card><h3 id=\"wng1dw\"><a href=\"#wng1dw\" id=\"更新包\"></a>更新包</h3><p>可以使用命令查看可以更新的包:</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a4fff8b0%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24npm%20outdated%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%23%E6%9F%A5%E7%9C%8B%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E7%9A%84%E5%8C%85%EF%BC%9A%5CnPackage%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Current%20%20Wanted%20%20Latest%20%20Location%5Cnhexo-helper-live2d%20%20%20%20%20%20MISSING%20%20%203.1.0%20%20%203.1.0%20%20hexo-site%5Cnhexo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%203.3.9%20%20%203.8.0%20%20%203.8.0%20%20hexo-site%5Cnhexo-douban%20%20%20%20%20%20%20%20%20%20%20%20%20%200.2.14%20%200.2.16%20%20%201.0.6%20%20hexo-site%5Cnhexo-generator-archive%20%20%20%200.1.4%20%20%200.1.5%20%20%200.1.5%20%20hexo-site%5Cnhexo-generator-search%20%20%20%20%202.2.5%20%20%202.3.0%20%20%202.3.0%20%20hexo-site%5Cnhexo-renderer-ejs%20%20%20%20%20%20%20%20%200.2.0%20%20%200.2.0%20%20%200.3.1%20%20hexo-site%5Cnhexo-renderer-marked%20%20%20%20%200.2.11%20%200.2.11%20%20%200.3.2%20%20hexo-site%5Cnhexo-server%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200.2.2%20%20%200.2.2%20%20%200.3.3%20%20hexo-site%5Cn%24npm%20install%20--save%20%20%23%22%7D\"></card><p>之后修改`package.json`文件，修改到对应的版本。然后执行命令，进行更新：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2294bf6c98%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%24npm%20install%20--save%22%7D\"></card><h2 id=\"安装语雀文章下载插件\"><a href=\"#安装语雀文章下载插件\" id=\"安装语雀文章下载插件\"></a>安装语雀文章下载插件</h2><p>首先这里鸣谢开源的插件：[<a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">yuque-hexo</a>](https://github.com/x-cold/yuque-hexo)，通过工具可以将语雀知识库中的文件同步到本地，大部分功能和步骤在仓库中都有些，但是自己做的时候还是踩了坑，这里就还是写一下吧。</p><h3 id=\"z8p4qn\"><a href=\"#z8p4qn\" id=\"1.创建语雀知识库\"></a>1.创建语雀知识库</h3><p>打开<a href=\"https://www.yuque.com/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">语雀</a> 创建自己的博客知识库，并且要<strong>设置成公开的。可以在设置中看到链接如下：</strong></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png%22%2C%22width%22%3A375%7D\"></card></p><p>同时打开<a href=\"https://www.yuque.com/mianhk/gaqqwc\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">blog知识库</a>:<a href=\"https://www.yuque.com/mianhk/gaqqwc\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.yuque.com/mianhk/gaqqwc</a>可以打开知识库。</p><h3 id=\"p1gbwg\"><a href=\"#p1gbwg\" id=\"span,[object-object],2.在本地安装,span,[object-object],span,[object-object],yuque-hexo\"></a>2.在本地安装<span style=\"color:rgb(74, 74, 74)\"><span style=\"background-color:rgb(255, 255, 255)\">yuque-hexo</span></span></h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e44971b2%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22npm%20i%20-g%20yuque-hexo%22%7D\"></card><h3 id=\"2nybfh\"><a href=\"#2nybfh\" id=\"3.配置package.json\"></a>3.配置package.json</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2217fd4269%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%20%20%5C%22scripts%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22clean%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22clean%3Ayuque%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22deploy%5C%22%3A%20%5C%22hexo%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22publish%5C%22%3A%20%5C%22npm%20run%20clean%20%26%26%20npm%20run%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22dev%5C%22%3A%20%5C%22hexo%20s%5C%22%2C%5Cn%20%20%20%20%5C%22sync%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20sync%5C%22%2C%5Cn%20%20%20%20%5C%22reset%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20npm%20run%20sync%5C%22%5Cn%20%20%7D%2C%C2%A0%20%20%5Cn%20%C2%A0%5C%22yuqueConfig%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22baseUrl%5C%22%3A%20%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%20%20%20%20%23%E8%BF%99%E6%98%AF%E8%AF%AD%E9%9B%80%E7%9A%84%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%E5%B0%B1%E5%8F%AF%E4%BB%A5%5Cn%20%20%20%20%5C%22login%5C%22%3A%20%5C%22mianhk%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E7%94%A8%E6%88%B7%E5%90%8D%EF%BC%8C%E4%B8%8A%E4%B8%AA%E9%93%BE%E6%8E%A5%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%5Cn%20%20%20%20%5C%22repo%5C%22%3A%20%5C%22gaqqwc%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E7%9F%A5%E8%AF%86%E5%BA%93%E9%93%BE%E6%8E%A5%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%5Cn%20%20%20%20%5C%22mdNameFormat%5C%22%3A%20%5C%22slug%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E5%AF%BC%E5%87%BA%E6%9C%AC%E5%9C%B0%E7%9A%84%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%8C%E6%AF%94%E7%9B%B4%E6%8E%A5%E7%9A%84%E4%B8%AD%E6%96%87title%E8%A6%81%E5%A5%BD%E7%9C%8B%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E4%BA%86%5Cn%20%20%20%20%5C%22postPath%5C%22%3A%20%5C%22source%2F_posts%2Fyuque%5C%22%20%20%20%20%20%23%E5%AD%98%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%8D%E7%BD%AE%5Cn%20%20%7D%22%7D\"></card><p><br /></p><h3 id=\"0rl2so\"><a href=\"#0rl2so\" id=\"4.删除和同步文章\"></a>4.删除和同步文章</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2240fdb86b%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%23%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0%5Cn%24yuque-clean%5Cn%5BINFO%5D%20yuque-hexo%20clean%20start.%5Cn%5BINFO%5D%20remove%20yuque%20posts%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5C%5Cn%5BINFO%5D%20remove%20yuque%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20yuque-hexo%20clean%20finished.%5Cn%5Cn%23%E5%90%8C%E6%AD%A5%E6%96%87%E7%AB%A0%5Cn%24yuque-hexo%20sync%5Cn%5BINFO%5D%20yuque-hexo%20sync%20start.%5Cn%5BINFO%5D%20remove%20yuque%20posts%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5C%5Cn%5BINFO%5D%20loading%20config%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cpackage.json%5Cn%5BINFO%5D%20downloading%20articles%3A%20%7B%5C%22baseUrl%5C%22%3A%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%5C%22login%5C%22%3A%5C%22mianhk%5C%22%2C%5C%22repo%5C%22%3A%5C%22gaqqwc%5C%22%2C%5C%22mdNameFormat%5C%22%3A%5C%22slug%5C%22%2C%5C%22postPath%5C%22%3A%5C%22source%2F_posts%2Fyuque%5C%22%7D%5Cn%5BINFO%5D%20reading%20from%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20download%20article%20body%3A%2011%E6%9C%88%E7%94%9F%E6%B4%BB%E5%B0%8F%E7%BB%93%5Cn%5BINFO%5D%20download%20articls%20done!%5Cn%5BINFO%5D%20writing%20to%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20create%20posts%20director%20(if%20it%20not%20exists)%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5Cn%5BINFO%5D%20generate%20post%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5Cxzxhcv.md%5Cn%5BINFO%5D%20yuque-hexo%20sync%20finished.%22%7D\"></card><p><br /></p><h3 id=\"enltgy\"><a href=\"#enltgy\" id=\"5.修改文章的title和tag等\"></a>5.修改文章的title和tag等</h3><p>还是跟之前的格式直接写即可。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223957235e%22%2C%22mode%22%3A%22makedown%22%2C%22code%22%3A%22title%3A%20%20%5Cndate%3A%20%5Cnupdate%3A%20%5Cncategories%3A%20%5Cntags%3A%20%5B%5D%22%7D\"></card><p><br /></p><h3 id=\"974chn\"><a href=\"#974chn\" id=\"6.部署博客\"></a>6.部署博客</h3><p><br /></p><h1 id=\"mzmxge\"><a href=\"#mzmxge\" id=\"记录一些坑\"></a>记录一些坑</h1><p><br /></p><ul><li><p>知识库一定要是公开的</p></li></ul><ul><li><p>windows下更新nodejs不能用n，即使强制使用了也还是无法更新</p></li></ul><ul><li><p>新版本的npm。<span style=\"color:rgb(26, 26, 26)\"><span style=\"background-color:rgb(255, 255, 255)\">如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。</span></span></p></li></ul><p><br /></p><p><br /></p><h2 id=\"vpz7ep\"><a href=\"#vpz7ep\" id=\"reference:\"></a>Reference:</h2><ul><li><p><a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/x-cold/yuque-hexo</a></p></li></ul><ul><li><p><a href=\"https://luan.ma/post/yuque2blog/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://luan.ma/post/yuque2blog/</a></p></li></ul><ul><li><p><a href=\"https://www.zhihu.com/question/62331583\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.zhihu.com/question/62331583</a></p></li></ul><ul><li><p><a href=\"https://tommy.net.cn/2018/02/26/upgrade-hexo-to-v3-5-0/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">将 Hexo 升级到 v3.5.0</a> </p></li></ul><ul><li><p><a href=\"https://github.com/x-cold/blog/blob/master/package.json#L26\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Demo Json</a> </p></li></ul><p><br /></p>",
    "body_draft_lake": "<!doctype lake><p>title:  使用语雀编辑器写静态博客</p><p>date: 2018-11-14 22:27:10\r</p><p>update: 2018-11-14 22:27:10</p><p>categories: 工具</p><p>tags: [Hexo,折腾,语雀]\r</p><p>\r</p><p>\r</p><p>---</p><blockquote><p>本来以为已经是最后一次折腾了，但是总是生活不停，折腾不止，觉得本地文件管起来还是有点麻烦，看到语雀markdown又做的这么好，前几天还准备拿它当云笔记用，但是据说底层存的都是md格式，有的时候又还是不太方便，不过做编辑器来说确实很爽了，自带图床，还有github上开源的一个接口。   </p></blockquote><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><h1 id=\"s7pfan\"><a href=\"#s7pfan\" id=\"准备工作\"></a>准备工作</h1><h2 id=\"p3r4ex\"><a href=\"#p3r4ex\" id=\"更新node.js和npm\"></a>更新node.js和npm</h2><p>刚刚来就是坑，不过还是准备从正常的步骤开始说吧，就是博客基于的是nodejs，很多包的安装都是采用npm统一管理的，因为有些插件需要使用新的版本，所以需要先更新一下，这里只说一下windows下面的操作。</p><h3 id=\"p7w2ix\"><a href=\"#p7w2ix\" id=\"更新node.js\"></a>更新node.js</h3><p>window下并没有网上说的乱七八糟的命令行更新方式，直接在<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">官网</a>下载最新的安装包就可以。然后安装在之前的位置进行覆盖就可以更新了。更新之后通过命令:</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ed2ff298%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24node%20-v%5Cnv10.13.0%22%7D\"></card><h3 id=\"85nlcu\"><a href=\"#85nlcu\" id=\"更新npm\"></a>更新npm</h3><p>通过命令：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228de08b6f%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24npm%20install%20-g%20npm%5Cn%5Cn%23%E6%9B%B4%E6%96%B0%E5%90%8E%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%5Cn%24npm%20-v%5Cn6.4.1%22%7D\"></card><h3 id=\"wng1dw\"><a href=\"#wng1dw\" id=\"更新包\"></a>更新包</h3><p>可以使用命令查看可以更新的包:</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a4fff8b0%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22%24npm%20outdated%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%23%E6%9F%A5%E7%9C%8B%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E7%9A%84%E5%8C%85%EF%BC%9A%5CnPackage%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Current%20%20Wanted%20%20Latest%20%20Location%5Cnhexo-helper-live2d%20%20%20%20%20%20MISSING%20%20%203.1.0%20%20%203.1.0%20%20hexo-site%5Cnhexo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%203.3.9%20%20%203.8.0%20%20%203.8.0%20%20hexo-site%5Cnhexo-douban%20%20%20%20%20%20%20%20%20%20%20%20%20%200.2.14%20%200.2.16%20%20%201.0.6%20%20hexo-site%5Cnhexo-generator-archive%20%20%20%200.1.4%20%20%200.1.5%20%20%200.1.5%20%20hexo-site%5Cnhexo-generator-search%20%20%20%20%202.2.5%20%20%202.3.0%20%20%202.3.0%20%20hexo-site%5Cnhexo-renderer-ejs%20%20%20%20%20%20%20%20%200.2.0%20%20%200.2.0%20%20%200.3.1%20%20hexo-site%5Cnhexo-renderer-marked%20%20%20%20%200.2.11%20%200.2.11%20%20%200.3.2%20%20hexo-site%5Cnhexo-server%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200.2.2%20%20%200.2.2%20%20%200.3.3%20%20hexo-site%5Cn%24npm%20install%20--save%20%20%23%22%7D\"></card><p>之后修改`package.json`文件，修改到对应的版本。然后执行命令，进行更新：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2294bf6c98%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%24npm%20install%20--save%22%7D\"></card><h2 id=\"安装语雀文章下载插件\"><a href=\"#安装语雀文章下载插件\" id=\"安装语雀文章下载插件\"></a>安装语雀文章下载插件</h2><p>首先这里鸣谢开源的插件：[<a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">yuque-hexo</a>](https://github.com/x-cold/yuque-hexo)，通过工具可以将语雀知识库中的文件同步到本地，大部分功能和步骤在仓库中都有些，但是自己做的时候还是踩了坑，这里就还是写一下吧。</p><h3 id=\"z8p4qn\"><a href=\"#z8p4qn\" id=\"1.创建语雀知识库\"></a>1.创建语雀知识库</h3><p>打开<a href=\"https://www.yuque.com/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">语雀</a> 创建自己的博客知识库，并且要<strong>设置成公开的。可以在设置中看到链接如下：</strong></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png%22%2C%22width%22%3A375%7D\"></card></p><p>同时打开<a href=\"https://www.yuque.com/mianhk/gaqqwc\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">blog知识库</a>:<a href=\"https://www.yuque.com/mianhk/gaqqwc\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.yuque.com/mianhk/gaqqwc</a>可以打开知识库。</p><h3 id=\"p1gbwg\"><a href=\"#p1gbwg\" id=\"span,[object-object],2.在本地安装,span,[object-object],span,[object-object],yuque-hexo\"></a>2.在本地安装<span style=\"color:rgb(74, 74, 74)\"><span style=\"background-color:rgb(255, 255, 255)\">yuque-hexo</span></span></h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e44971b2%22%2C%22mode%22%3A%22git%22%2C%22code%22%3A%22npm%20i%20-g%20yuque-hexo%22%7D\"></card><h3 id=\"2nybfh\"><a href=\"#2nybfh\" id=\"3.配置package.json\"></a>3.配置package.json</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2217fd4269%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%20%20%5C%22scripts%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22clean%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22clean%3Ayuque%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22deploy%5C%22%3A%20%5C%22hexo%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22publish%5C%22%3A%20%5C%22npm%20run%20clean%20%26%26%20npm%20run%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22dev%5C%22%3A%20%5C%22hexo%20s%5C%22%2C%5Cn%20%20%20%20%5C%22sync%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20sync%5C%22%2C%5Cn%20%20%20%20%5C%22reset%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20npm%20run%20sync%5C%22%5Cn%20%20%7D%2C%C2%A0%20%20%5Cn%20%C2%A0%5C%22yuqueConfig%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22baseUrl%5C%22%3A%20%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%20%20%20%20%23%E8%BF%99%E6%98%AF%E8%AF%AD%E9%9B%80%E7%9A%84%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%E5%B0%B1%E5%8F%AF%E4%BB%A5%5Cn%20%20%20%20%5C%22login%5C%22%3A%20%5C%22mianhk%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E7%94%A8%E6%88%B7%E5%90%8D%EF%BC%8C%E4%B8%8A%E4%B8%AA%E9%93%BE%E6%8E%A5%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%5Cn%20%20%20%20%5C%22repo%5C%22%3A%20%5C%22gaqqwc%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E7%9F%A5%E8%AF%86%E5%BA%93%E9%93%BE%E6%8E%A5%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%5Cn%20%20%20%20%5C%22mdNameFormat%5C%22%3A%20%5C%22slug%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%E5%AF%BC%E5%87%BA%E6%9C%AC%E5%9C%B0%E7%9A%84%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%8C%E6%AF%94%E7%9B%B4%E6%8E%A5%E7%9A%84%E4%B8%AD%E6%96%87title%E8%A6%81%E5%A5%BD%E7%9C%8B%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E4%BA%86%5Cn%20%20%20%20%5C%22postPath%5C%22%3A%20%5C%22source%2F_posts%2Fyuque%5C%22%20%20%20%20%20%23%E5%AD%98%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%8D%E7%BD%AE%5Cn%20%20%7D%22%7D\"></card><p><br /></p><h3 id=\"0rl2so\"><a href=\"#0rl2so\" id=\"4.删除和同步文章\"></a>4.删除和同步文章</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2240fdb86b%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%23%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0%5Cn%24yuque-clean%5Cn%5BINFO%5D%20yuque-hexo%20clean%20start.%5Cn%5BINFO%5D%20remove%20yuque%20posts%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5C%5Cn%5BINFO%5D%20remove%20yuque%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20yuque-hexo%20clean%20finished.%5Cn%5Cn%23%E5%90%8C%E6%AD%A5%E6%96%87%E7%AB%A0%5Cn%24yuque-hexo%20sync%5Cn%5BINFO%5D%20yuque-hexo%20sync%20start.%5Cn%5BINFO%5D%20remove%20yuque%20posts%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5C%5Cn%5BINFO%5D%20loading%20config%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cpackage.json%5Cn%5BINFO%5D%20downloading%20articles%3A%20%7B%5C%22baseUrl%5C%22%3A%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%5C%22login%5C%22%3A%5C%22mianhk%5C%22%2C%5C%22repo%5C%22%3A%5C%22gaqqwc%5C%22%2C%5C%22mdNameFormat%5C%22%3A%5C%22slug%5C%22%2C%5C%22postPath%5C%22%3A%5C%22source%2F_posts%2Fyuque%5C%22%7D%5Cn%5BINFO%5D%20reading%20from%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20download%20article%20body%3A%2011%E6%9C%88%E7%94%9F%E6%B4%BB%E5%B0%8F%E7%BB%93%5Cn%5BINFO%5D%20download%20articls%20done!%5Cn%5BINFO%5D%20writing%20to%20local%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Cyuque.json%5Cn%5BINFO%5D%20create%20posts%20director%20(if%20it%20not%20exists)%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5Cn%5BINFO%5D%20generate%20post%20file%3A%20F%3A%5C%5Cblog%5C%5Cmianhk.github.io%5C%5Csource%5C%5C_posts%5C%5Cyuque%5C%5Cxzxhcv.md%5Cn%5BINFO%5D%20yuque-hexo%20sync%20finished.%22%7D\"></card><p><br /></p><h3 id=\"enltgy\"><a href=\"#enltgy\" id=\"5.修改文章的title和tag等\"></a>5.修改文章的title和tag等</h3><p>还是跟之前的格式直接写即可。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223957235e%22%2C%22mode%22%3A%22makedown%22%2C%22code%22%3A%22title%3A%20%20%5Cndate%3A%20%5Cnupdate%3A%20%5Cncategories%3A%20%5Cntags%3A%20%5B%5D%22%7D\"></card><p><br /></p><h3 id=\"974chn\"><a href=\"#974chn\" id=\"6.部署博客\"></a>6.部署博客</h3><p><br /></p><h1 id=\"mzmxge\"><a href=\"#mzmxge\" id=\"记录一些坑\"></a>记录一些坑</h1><p><br /></p><ul><li><p>知识库一定要是公开的</p></li></ul><ul><li><p>windows下更新nodejs不能用n，即使强制使用了也还是无法更新</p></li></ul><ul><li><p>新版本的npm。<span style=\"color:rgb(26, 26, 26)\"><span style=\"background-color:rgb(255, 255, 255)\">如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。</span></span></p></li></ul><p><br /></p><p><br /></p><h2 id=\"vpz7ep\"><a href=\"#vpz7ep\" id=\"reference:\"></a>Reference:</h2><ul><li><p><a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/x-cold/yuque-hexo</a></p></li></ul><ul><li><p><a href=\"https://luan.ma/post/yuque2blog/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://luan.ma/post/yuque2blog/</a></p></li></ul><ul><li><p><a href=\"https://www.zhihu.com/question/62331583\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.zhihu.com/question/62331583</a></p></li></ul><ul><li><p><a href=\"https://tommy.net.cn/2018/02/26/upgrade-hexo-to-v3-5-0/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">将 Hexo 升级到 v3.5.0</a> </p></li></ul><ul><li><p><a href=\"https://github.com/x-cold/blog/blob/master/package.json#L26\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Demo Json</a> </p></li></ul><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-07-11T15:53:42.000Z",
    "deleted_at": null,
    "created_at": "2018-11-14T13:53:08.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": null,
    "word_count": 1030,
    "cover": "https://cdn.nlark.com/yuque/0/2018/png/187932/1542204775155-271c9311-4643-4ccd-8692-24ab7351e0cb.png#width=375",
    "description": "title:  使用语雀编辑器写静态博客date: 2018-11-14 22:27:10update: 2018-11-14 22:27:10categories: 工具tags: [Hexo,折腾,语雀]---本来以为已经是最后一次折腾了，但是总是生活不停，折腾不止，觉得本地文件管起来还是...",
    "custom_description": null,
    "hits": 89,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 945394,
    "slug": "xzxhcv",
    "title": "11月生活小结",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title:  11月生活小结<br />date: 2018-11-05 20:04:46\r<br />update: 2018-11-05 20:04:50\r<br />categories: 随笔\r<br />tags: [随笔,生活,日常总结]\r\n\n---\n\n\n> 最近又到了生活有点不知道干什么的时候，有的时候觉得自己对什么都很有信心，有的时候又觉得什么都做不好。想起来以前总是站在自己的角度看一些事情，看自己。直到现在有时候看看，自己的问题，一直放在那，并没有好多少，只不过我像对待其他人一样宽容的对待了自己。\n\n\n![](https://cdn.nlark.com/yuque/0/2018/png/187932/1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png#width=596)\n<a name=\"b8zftw\"></a>\n## 专注的做自己该做的事情\n发现自己原来一直是个喜欢折腾的人，平时折腾Linux，折腾chrome的插件，学一些东西的时候，好像总是把关注点搞错了。先以几件事举个例子吧。 \n<a name=\"g7awld\"></a>\n### 学习C++\n比如学个语言，C++，先在网上搜Windows下 C好用的编辑器，嗯，找到了Dev C，觉得还挺好的，确实，直接编译就能运行，而且还是gcc的编译，也比较符合现在吧，总比那些VC6.0要好。然后写了一段，刷题的时候发现怎么有的时候中文粘贴会有问题，垃圾，赶紧换一个。  \n\n于是就看到了网上的很多说vim搭建IDE很酷，而且vim自己也用过，自己也恰好有台云服务器，自己要做的也是Linux下的C++开发，也恰好可以练习一些比如gcc工具链呀，写写Makefile呀，嗯，于是网上找了一堆vim的配置，配置的很酷，找了很多，各种修改，甚至白天都没心思干活了也要搞好，中午回宿舍开着电脑马上开始弄，到了后面折腾的都累了，在github上找到了一个别人配好的，看了一下界面，唉，算了就这个吧。于是vim下一阵操作，还学了配置的一些快捷键：诸如切换窗口，切换文件，语法错误之类的，还有即时运行之类的操作。就像下面这样。。\n\n![](https://cdn.nlark.com/yuque/0/2018/png/187932/1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png#width=504)\n\n过段时间发现，这个云服务器下面写代码还是不太好，1M的小水管，有的时候会卡，这就很难受了，而且说得联系Makefile那些，其实能练的也比较少，一般都是直接make一下文件就好了，或者是一个写好的Makefile直接全编译了。于是又转回了Windows，试了一下宇宙IDE--VS，果然不一样，先下个最新版吧，2017怎么这么大呀，算了，换2015吧，额，2015好像也有点大，要不就试试2013吧，这个大小好像还凑和，于是下载下来，一顿折腾，终于可以写了，唉，这个怎么每次还要加pause才行呀，而且这个小黑框输入也太难受了，而且打开一下这么大，算了，溜了溜了。\n\n又看到Idea家的跨平台的Clion，因为之前用过idea，所以觉得还不错，现代的IDE，那就用用看吧，但是这个环境，还要配置<br />MINGW64呀，算了，配置吧，网上一大堆了，虽然有些有坑，虽然有的时候网速很慢，但是没事，我能克服困难。。于是就用了这个，确实还挺好看的，用着也还算顺手吧，赶紧把主题呀，各种呀配置一下呀，哦，还有vim，这么好用的工具。试了一段时间写项目确实不错，做个小项目，写起来还可以的。但是是要在Linux下编译的呀，于是又找到了ftp工具。。。\n\n讲道理到这应该也差不多了，但是，Clion每次打开也是很大了，总感觉不是很方便，要不还是？ 哦，最近正好出了一个编辑器还挺好用的，网上看着各种推荐，vscode，网上都说还可以，微软做的，我试试吧。哎，做编辑器确实可以，平时写个算法之类的呀。于是又是各种插件折腾，对了，再弄个c++的编译环境吧，但是这个编译也有点慢呀，算了，忍忍吧。\n\n上面大概是这一年多以来学习C++过程的坑了，不知道很多Programmer是不是也跟我一样，但是回头想想真的花了很多乱七八糟的时间来做一些无关紧要的事情，其实就是没有抓住重点吧。\n\n<a name=\"drb7hh\"></a>\n### 服务器和博客的折腾\n因为一直有台服务器，为了不用开虚拟机就做Linux操作，自己在上面的折腾也算是蛮多吧，从最开始想跑个微信（一个github上的项目），然后折腾vim，折腾挖矿（收益当然是不用说，但是当时感觉还不错），后面又折腾Jupyter notebook，tmux，zsh，也是花费了不少的时间，但是结果是，关于真正技术方面的，反而学到的比较少。\n\n<a name=\"h5c2dp\"></a>\n## What's Next\n有的时候自己也在想这些原因，以前可能也会有些这样，但是至少能在一方面能够保持很好的一个学习状态，但是直到最近，可能也是找完了工作吧，心态也有些放松了，所以就更。但是，真正的自由，是在自律的条件下的。<br />所以计划和要求也还是要有的：\n\n- 学习MySQL和Go语言\n\n- 每周至少一篇技术博客\n\n- 上班时间，就干该干的事情\n\n- 玩的时候，一定不要想着学习\n\n- 不吃夜宵\n\n\n",
    "body_draft": "title:  11月生活小结<br />date: 2018-11-05 20:04:46\r<br />update: 2018-11-05 20:04:50\r<br />categories: 随笔\r<br />tags: [随笔,生活,日常总结]\r\n\n---\n\n\n> 最近又到了生活有点不知道干什么的时候，有的时候觉得自己对什么都很有信心，有的时候又觉得什么都做不好。想起来以前总是站在自己的角度看一些事情，看自己。直到现在有时候看看，自己的问题，一直放在那，并没有好多少，只不过我像对待其他人一样宽容的对待了自己。\n\n\n![](https://cdn.nlark.com/yuque/0/2018/png/187932/1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png#width=596)\n<a name=\"b8zftw\"></a>\n## 专注的做自己该做的事情\n发现自己原来一直是个喜欢折腾的人，平时折腾Linux，折腾chrome的插件，学一些东西的时候，好像总是把关注点搞错了。先以几件事举个例子吧。 \n<a name=\"g7awld\"></a>\n### 学习C++\n比如学个语言，C++，先在网上搜Windows下 C好用的编辑器，嗯，找到了Dev C，觉得还挺好的，确实，直接编译就能运行，而且还是gcc的编译，也比较符合现在吧，总比那些VC6.0要好。然后写了一段，刷题的时候发现怎么有的时候中文粘贴会有问题，垃圾，赶紧换一个。  \n\n于是就看到了网上的很多说vim搭建IDE很酷，而且vim自己也用过，自己也恰好有台云服务器，自己要做的也是Linux下的C++开发，也恰好可以练习一些比如gcc工具链呀，写写Makefile呀，嗯，于是网上找了一堆vim的配置，配置的很酷，找了很多，各种修改，甚至白天都没心思干活了也要搞好，中午回宿舍开着电脑马上开始弄，到了后面折腾的都累了，在github上找到了一个别人配好的，看了一下界面，唉，算了就这个吧。于是vim下一阵操作，还学了配置的一些快捷键：诸如切换窗口，切换文件，语法错误之类的，还有即时运行之类的操作。就像下面这样。。\n\n![](https://cdn.nlark.com/yuque/0/2018/png/187932/1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png#width=504)\n\n过段时间发现，这个云服务器下面写代码还是不太好，1M的小水管，有的时候会卡，这就很难受了，而且说得联系Makefile那些，其实能练的也比较少，一般都是直接make一下文件就好了，或者是一个写好的Makefile直接全编译了。于是又转回了Windows，试了一下宇宙IDE--VS，果然不一样，先下个最新版吧，2017怎么这么大呀，算了，换2015吧，额，2015好像也有点大，要不就试试2013吧，这个大小好像还凑和，于是下载下来，一顿折腾，终于可以写了，唉，这个怎么每次还要加pause才行呀，而且这个小黑框输入也太难受了，而且打开一下这么大，算了，溜了溜了。\n\n又看到Idea家的跨平台的Clion，因为之前用过idea，所以觉得还不错，现代的IDE，那就用用看吧，但是这个环境，还要配置<br />MINGW64呀，算了，配置吧，网上一大堆了，虽然有些有坑，虽然有的时候网速很慢，但是没事，我能克服困难。。于是就用了这个，确实还挺好看的，用着也还算顺手吧，赶紧把主题呀，各种呀配置一下呀，哦，还有vim，这么好用的工具。试了一段时间写项目确实不错，做个小项目，写起来还可以的。但是是要在Linux下编译的呀，于是又找到了ftp工具。。。\n\n讲道理到这应该也差不多了，但是，Clion每次打开也是很大了，总感觉不是很方便，要不还是？ 哦，最近正好出了一个编辑器还挺好用的，网上看着各种推荐，vscode，网上都说还可以，微软做的，我试试吧。哎，做编辑器确实可以，平时写个算法之类的呀。于是又是各种插件折腾，对了，再弄个c++的编译环境吧，但是这个编译也有点慢呀，算了，忍忍吧。\n\n上面大概是这一年多以来学习C++过程的坑了，不知道很多Programmer是不是也跟我一样，但是回头想想真的花了很多乱七八糟的时间来做一些无关紧要的事情，其实就是没有抓住重点吧。\n\n<a name=\"drb7hh\"></a>\n### 服务器和博客的折腾\n因为一直有台服务器，为了不用开虚拟机就做Linux操作，自己在上面的折腾也算是蛮多吧，从最开始想跑个微信（一个github上的项目），然后折腾vim，折腾挖矿（收益当然是不用说，但是当时感觉还不错），后面又折腾Jupyter notebook，tmux，zsh，也是花费了不少的时间，但是结果是，关于真正技术方面的，反而学到的比较少。\n\n<a name=\"h5c2dp\"></a>\n## What's Next\n有的时候自己也在想这些原因，以前可能也会有些这样，但是至少能在一方面能够保持很好的一个学习状态，但是直到最近，可能也是找完了工作吧，心态也有些放松了，所以就更。但是，真正的自由，是在自律的条件下的。<br />所以计划和要求也还是要有的：\n\n- 学习MySQL和Go语言\n\n- 每周至少一篇技术博客\n\n- 上班时间，就干该干的事情\n\n- 玩的时候，一定不要想着学习\n\n- 不吃夜宵\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">title: &nbsp;11月生活小结</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">date: 2018-11-05 20:04:46</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">update: 2018-11-05 20:04:50</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: 随笔</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [随笔,生活,日常总结]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22TCfht%22%7D\" id=\"TCfht\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">最近又到了生活有点不知道干什么的时候，有的时候觉得自己对什么都很有信心，有的时候又觉得什么都做不好。想起来以前总是站在自己的角度看一些事情，看自己。直到现在有时候看看，自己的问题，一直放在那，并没有好多少，只不过我像对待其他人一样宽容的对待了自己。</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png%22%2C%22width%22%3A596%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png\" class=\"image lake-drag-image\" style=\"visibility: visible;\"></span></p><h2 id=\"b8zftw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#b8zftw\"></a>专注的做自己该做的事情</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">发现自己原来一直是个喜欢折腾的人，平时折腾Linux，折腾chrome的插件，学一些东西的时候，好像总是把关注点搞错了。先以几件事举个例子吧。 </p><h3 id=\"g7awld\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#g7awld\"></a>学习C++</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">比如学个语言，C++，先在网上搜Windows下 C好用的编辑器，嗯，找到了Dev C，觉得还挺好的，确实，直接编译就能运行，而且还是gcc的编译，也比较符合现在吧，总比那些VC6.0要好。然后写了一段，刷题的时候发现怎么有的时候中文粘贴会有问题，垃圾，赶紧换一个。 &nbsp;<br><br>于是就看到了网上的很多说vim搭建IDE很酷，而且vim自己也用过，自己也恰好有台云服务器，自己要做的也是Linux下的C++开发，也恰好可以练习一些比如gcc工具链呀，写写Makefile呀，嗯，于是网上找了一堆vim的配置，配置的很酷，找了很多，各种修改，甚至白天都没心思干活了也要搞好，中午回宿舍开着电脑马上开始弄，到了后面折腾的都累了，在github上找到了一个别人配好的，看了一下界面，唉，算了就这个吧。于是vim下一阵操作，还学了配置的一些快捷键：诸如切换窗口，切换文件，语法错误之类的，还有即时运行之类的操作。就像下面这样。。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png%22%2C%22width%22%3A504%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2018/png/187932/1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png\" class=\"image lake-drag-image\" style=\"visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">过段时间发现，这个云服务器下面写代码还是不太好，1M的小水管，有的时候会卡，这就很难受了，而且说得联系Makefile那些，其实能练的也比较少，一般都是直接make一下文件就好了，或者是一个写好的Makefile直接全编译了。于是又转回了Windows，试了一下宇宙IDE--VS，果然不一样，先下个最新版吧，2017怎么这么大呀，算了，换2015吧，额，2015好像也有点大，要不就试试2013吧，这个大小好像还凑和，于是下载下来，一顿折腾，终于可以写了，唉，这个怎么每次还要加pause才行呀，而且这个小黑框输入也太难受了，而且打开一下这么大，算了，溜了溜了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">又看到Idea家的跨平台的Clion，因为之前用过idea，所以觉得还不错，现代的IDE，那就用用看吧，但是这个环境，还要配置<br>MINGW64呀，算了，配置吧，网上一大堆了，虽然有些有坑，虽然有的时候网速很慢，但是没事，我能克服困难。。于是就用了这个，确实还挺好看的，用着也还算顺手吧，赶紧把主题呀，各种呀配置一下呀，哦，还有vim，这么好用的工具。试了一段时间写项目确实不错，做个小项目，写起来还可以的。但是是要在Linux下编译的呀，于是又找到了ftp工具。。。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">讲道理到这应该也差不多了，但是，Clion每次打开也是很大了，总感觉不是很方便，要不还是？ 哦，最近正好出了一个编辑器还挺好用的，网上看着各种推荐，vscode，网上都说还可以，微软做的，我试试吧。哎，做编辑器确实可以，平时写个算法之类的呀。于是又是各种插件折腾，对了，再弄个c++的编译环境吧，但是这个编译也有点慢呀，算了，忍忍吧。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">上面大概是这一年多以来学习C++过程的坑了，不知道很多Programmer是不是也跟我一样，但是回头想想真的花了很多乱七八糟的时间来做一些无关紧要的事情，其实就是没有抓住重点吧。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"drb7hh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><a href=\"#drb7hh\"></a>服务器和博客的折腾</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">因为一直有台服务器，为了不用开虚拟机就做Linux操作，自己在上面的折腾也算是蛮多吧，从最开始想跑个微信（一个github上的项目），然后折腾vim，折腾挖矿（收益当然是不用说，但是当时感觉还不错），后面又折腾Jupyter notebook，tmux，zsh，也是花费了不少的时间，但是结果是，关于真正技术方面的，反而学到的比较少。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"h5c2dp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><a href=\"#h5c2dp\"></a>What's Next</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">有的时候自己也在想这些原因，以前可能也会有些这样，但是至少能在一方面能够保持很好的一个学习状态，但是直到最近，可能也是找完了工作吧，心态也有些放松了，所以就更。但是，真正的自由，是在自律的条件下的。<br>所以计划和要求也还是要有的：</p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">学习MySQL和Go语言</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">每周至少一篇技术博客</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">上班时间，就干该干的事情</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">玩的时候，一定不要想着学习</p></li></ul><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">不吃夜宵</p></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><p>title:  11月生活小结</p><p>date: 2018-11-05 20:04:46\r</p><p>update: 2018-11-05 20:04:50\r</p><p>categories: 随笔\r</p><p>tags: [随笔,生活,日常总结]\r</p><p><br /></p><card type=\"block\" name=\"hr\"></card><p><br /></p><blockquote><p>最近又到了生活有点不知道干什么的时候，有的时候觉得自己对什么都很有信心，有的时候又觉得什么都做不好。想起来以前总是站在自己的角度看一些事情，看自己。直到现在有时候看看，自己的问题，一直放在那，并没有好多少，只不过我像对待其他人一样宽容的对待了自己。</p></blockquote><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png%22%2C%22width%22%3A596%7D\"></card></p><h2 id=\"b8zftw\"><a href=\"#b8zftw\" id=\"专注的做自己该做的事情\"></a>专注的做自己该做的事情</h2><p>发现自己原来一直是个喜欢折腾的人，平时折腾Linux，折腾chrome的插件，学一些东西的时候，好像总是把关注点搞错了。先以几件事举个例子吧。 </p><h3 id=\"g7awld\"><a href=\"#g7awld\" id=\"学习c++\"></a>学习C++</h3><p>比如学个语言，C++，先在网上搜Windows下 C好用的编辑器，嗯，找到了Dev C，觉得还挺好的，确实，直接编译就能运行，而且还是gcc的编译，也比较符合现在吧，总比那些VC6.0要好。然后写了一段，刷题的时候发现怎么有的时候中文粘贴会有问题，垃圾，赶紧换一个。  <br /><br />于是就看到了网上的很多说vim搭建IDE很酷，而且vim自己也用过，自己也恰好有台云服务器，自己要做的也是Linux下的C++开发，也恰好可以练习一些比如gcc工具链呀，写写Makefile呀，嗯，于是网上找了一堆vim的配置，配置的很酷，找了很多，各种修改，甚至白天都没心思干活了也要搞好，中午回宿舍开着电脑马上开始弄，到了后面折腾的都累了，在github上找到了一个别人配好的，看了一下界面，唉，算了就这个吧。于是vim下一阵操作，还学了配置的一些快捷键：诸如切换窗口，切换文件，语法错误之类的，还有即时运行之类的操作。就像下面这样。。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png%22%2C%22width%22%3A504%7D\"></card></p><p><br /></p><p>过段时间发现，这个云服务器下面写代码还是不太好，1M的小水管，有的时候会卡，这就很难受了，而且说得联系Makefile那些，其实能练的也比较少，一般都是直接make一下文件就好了，或者是一个写好的Makefile直接全编译了。于是又转回了Windows，试了一下宇宙IDE--VS，果然不一样，先下个最新版吧，2017怎么这么大呀，算了，换2015吧，额，2015好像也有点大，要不就试试2013吧，这个大小好像还凑和，于是下载下来，一顿折腾，终于可以写了，唉，这个怎么每次还要加pause才行呀，而且这个小黑框输入也太难受了，而且打开一下这么大，算了，溜了溜了。</p><p><br /></p><p>又看到Idea家的跨平台的Clion，因为之前用过idea，所以觉得还不错，现代的IDE，那就用用看吧，但是这个环境，还要配置<br />MINGW64呀，算了，配置吧，网上一大堆了，虽然有些有坑，虽然有的时候网速很慢，但是没事，我能克服困难。。于是就用了这个，确实还挺好看的，用着也还算顺手吧，赶紧把主题呀，各种呀配置一下呀，哦，还有vim，这么好用的工具。试了一段时间写项目确实不错，做个小项目，写起来还可以的。但是是要在Linux下编译的呀，于是又找到了ftp工具。。。</p><p><br /></p><p>讲道理到这应该也差不多了，但是，Clion每次打开也是很大了，总感觉不是很方便，要不还是？ 哦，最近正好出了一个编辑器还挺好用的，网上看着各种推荐，vscode，网上都说还可以，微软做的，我试试吧。哎，做编辑器确实可以，平时写个算法之类的呀。于是又是各种插件折腾，对了，再弄个c++的编译环境吧，但是这个编译也有点慢呀，算了，忍忍吧。</p><p><br /></p><p>上面大概是这一年多以来学习C++过程的坑了，不知道很多Programmer是不是也跟我一样，但是回头想想真的花了很多乱七八糟的时间来做一些无关紧要的事情，其实就是没有抓住重点吧。</p><p><br /></p><h3 id=\"drb7hh\"><a href=\"#drb7hh\" id=\"服务器和博客的折腾\"></a>服务器和博客的折腾</h3><p>因为一直有台服务器，为了不用开虚拟机就做Linux操作，自己在上面的折腾也算是蛮多吧，从最开始想跑个微信（一个github上的项目），然后折腾vim，折腾挖矿（收益当然是不用说，但是当时感觉还不错），后面又折腾Jupyter notebook，tmux，zsh，也是花费了不少的时间，但是结果是，关于真正技术方面的，反而学到的比较少。</p><p><br /></p><h2 id=\"h5c2dp\"><a href=\"#h5c2dp\" id=\"what-s-next\"></a>What's Next</h2><p>有的时候自己也在想这些原因，以前可能也会有些这样，但是至少能在一方面能够保持很好的一个学习状态，但是直到最近，可能也是找完了工作吧，心态也有些放松了，所以就更。但是，真正的自由，是在自律的条件下的。<br />所以计划和要求也还是要有的：</p><ul><li><p>学习MySQL和Go语言</p></li></ul><ul><li><p>每周至少一篇技术博客</p></li></ul><ul><li><p>上班时间，就干该干的事情</p></li></ul><ul><li><p>玩的时候，一定不要想着学习</p></li></ul><ul><li><p>不吃夜宵</p></li></ul><p><br /></p>",
    "body_draft_lake": "<!doctype lake><p>title:  11月生活小结</p><p>date: 2018-11-05 20:04:46\r</p><p>update: 2018-11-05 20:04:50\r</p><p>categories: 随笔\r</p><p>tags: [随笔,生活,日常总结]\r</p><p><br /></p><card type=\"block\" name=\"hr\"></card><p><br /></p><blockquote><p>最近又到了生活有点不知道干什么的时候，有的时候觉得自己对什么都很有信心，有的时候又觉得什么都做不好。想起来以前总是站在自己的角度看一些事情，看自己。直到现在有时候看看，自己的问题，一直放在那，并没有好多少，只不过我像对待其他人一样宽容的对待了自己。</p></blockquote><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png%22%2C%22width%22%3A596%7D\"></card></p><h2 id=\"b8zftw\"><a href=\"#b8zftw\" id=\"专注的做自己该做的事情\"></a>专注的做自己该做的事情</h2><p>发现自己原来一直是个喜欢折腾的人，平时折腾Linux，折腾chrome的插件，学一些东西的时候，好像总是把关注点搞错了。先以几件事举个例子吧。 </p><h3 id=\"g7awld\"><a href=\"#g7awld\" id=\"学习c++\"></a>学习C++</h3><p>比如学个语言，C++，先在网上搜Windows下 C好用的编辑器，嗯，找到了Dev C，觉得还挺好的，确实，直接编译就能运行，而且还是gcc的编译，也比较符合现在吧，总比那些VC6.0要好。然后写了一段，刷题的时候发现怎么有的时候中文粘贴会有问题，垃圾，赶紧换一个。  <br /><br />于是就看到了网上的很多说vim搭建IDE很酷，而且vim自己也用过，自己也恰好有台云服务器，自己要做的也是Linux下的C++开发，也恰好可以练习一些比如gcc工具链呀，写写Makefile呀，嗯，于是网上找了一堆vim的配置，配置的很酷，找了很多，各种修改，甚至白天都没心思干活了也要搞好，中午回宿舍开着电脑马上开始弄，到了后面折腾的都累了，在github上找到了一个别人配好的，看了一下界面，唉，算了就这个吧。于是vim下一阵操作，还学了配置的一些快捷键：诸如切换窗口，切换文件，语法错误之类的，还有即时运行之类的操作。就像下面这样。。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F187932%2F1541417270624-4fa02e68-1d4c-4852-8be2-24498600aff1.png%22%2C%22width%22%3A504%7D\"></card></p><p><br /></p><p>过段时间发现，这个云服务器下面写代码还是不太好，1M的小水管，有的时候会卡，这就很难受了，而且说得联系Makefile那些，其实能练的也比较少，一般都是直接make一下文件就好了，或者是一个写好的Makefile直接全编译了。于是又转回了Windows，试了一下宇宙IDE--VS，果然不一样，先下个最新版吧，2017怎么这么大呀，算了，换2015吧，额，2015好像也有点大，要不就试试2013吧，这个大小好像还凑和，于是下载下来，一顿折腾，终于可以写了，唉，这个怎么每次还要加pause才行呀，而且这个小黑框输入也太难受了，而且打开一下这么大，算了，溜了溜了。</p><p><br /></p><p>又看到Idea家的跨平台的Clion，因为之前用过idea，所以觉得还不错，现代的IDE，那就用用看吧，但是这个环境，还要配置<br />MINGW64呀，算了，配置吧，网上一大堆了，虽然有些有坑，虽然有的时候网速很慢，但是没事，我能克服困难。。于是就用了这个，确实还挺好看的，用着也还算顺手吧，赶紧把主题呀，各种呀配置一下呀，哦，还有vim，这么好用的工具。试了一段时间写项目确实不错，做个小项目，写起来还可以的。但是是要在Linux下编译的呀，于是又找到了ftp工具。。。</p><p><br /></p><p>讲道理到这应该也差不多了，但是，Clion每次打开也是很大了，总感觉不是很方便，要不还是？ 哦，最近正好出了一个编辑器还挺好用的，网上看着各种推荐，vscode，网上都说还可以，微软做的，我试试吧。哎，做编辑器确实可以，平时写个算法之类的呀。于是又是各种插件折腾，对了，再弄个c++的编译环境吧，但是这个编译也有点慢呀，算了，忍忍吧。</p><p><br /></p><p>上面大概是这一年多以来学习C++过程的坑了，不知道很多Programmer是不是也跟我一样，但是回头想想真的花了很多乱七八糟的时间来做一些无关紧要的事情，其实就是没有抓住重点吧。</p><p><br /></p><h3 id=\"drb7hh\"><a href=\"#drb7hh\" id=\"服务器和博客的折腾\"></a>服务器和博客的折腾</h3><p>因为一直有台服务器，为了不用开虚拟机就做Linux操作，自己在上面的折腾也算是蛮多吧，从最开始想跑个微信（一个github上的项目），然后折腾vim，折腾挖矿（收益当然是不用说，但是当时感觉还不错），后面又折腾Jupyter notebook，tmux，zsh，也是花费了不少的时间，但是结果是，关于真正技术方面的，反而学到的比较少。</p><p><br /></p><h2 id=\"h5c2dp\"><a href=\"#h5c2dp\" id=\"what-s-next\"></a>What's Next</h2><p>有的时候自己也在想这些原因，以前可能也会有些这样，但是至少能在一方面能够保持很好的一个学习状态，但是直到最近，可能也是找完了工作吧，心态也有些放松了，所以就更。但是，真正的自由，是在自律的条件下的。<br />所以计划和要求也还是要有的：</p><ul><li><p>学习MySQL和Go语言</p></li></ul><ul><li><p>每周至少一篇技术博客</p></li></ul><ul><li><p>上班时间，就干该干的事情</p></li></ul><ul><li><p>玩的时候，一定不要想着学习</p></li></ul><ul><li><p>不吃夜宵</p></li></ul><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-07-11T15:53:42.000Z",
    "deleted_at": null,
    "created_at": "2018-11-05T11:00:51.000Z",
    "updated_at": "2020-09-06T15:29:41.000Z",
    "published_at": "2020-07-11T15:53:42.000Z",
    "first_published_at": null,
    "word_count": 1567,
    "cover": "https://cdn.nlark.com/yuque/0/2018/png/187932/1541420058802-2a13e83c-eb31-4adb-9ce0-5b8443a9ff3b.png#width=596",
    "description": "title:  11月生活小结date: 2018-11-05 20:04:46update: 2018-11-05 20:04:50categories: 随笔tags: [随笔,生活,日常总结]最近又到了生活有点不知道干什么的时候，有的时候觉得自己对什么都很有信心，有的时候又觉得什么都做不...",
    "custom_description": null,
    "hits": 20,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 8458570,
    "slug": "xuze3g",
    "title": "Python进阶",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-08T14:16:27.803Z",
      "updated_at": "2020-09-08T14:16:27.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "用了Python很久了，可能有些问题还没注意到，再复习下。    <br />\n\n\n---\n\n<a name=\"06npG\"></a>\n# 常见数据结构\n<a name=\"ltrGl\"></a>\n## 集合\n跟其他语言的set一样，集合是无重复元素的且无序的，显然底层是hash存储，对set中的元素增加和查找都是O(1)。因此不要随便使用pop()方法。\n```python\na = {1,2,3} # 定义\na.add(4) # 增加元素\na.remove(2) # 删除元素\nsorted(a) # 对set排序\n```\n\n<br />\n<br />大SD卡很快\n",
    "body_draft": "用了Python很久了，可能有些问题还没注意到，再复习下。    <br />\n\n\n---\n\n<a name=\"06npG\"></a>\n# 常见数据结构\n<a name=\"ltrGl\"></a>\n## 集合\n跟其他语言的set一样，集合是无重复元素的且无序的，显然底层是hash存储，对set中的元素增加和查找都是O(1)。因此不要随便使用pop()方法。\n```python\na = {1,2,3} # 定义\na.add(4) # 增加元素\na.remove(2) # 删除元素\nsorted(a) # 对set排序\n```\n\n<br />\n<br />大SD卡很快\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B9%2C0%2C6%5D%2C%5B9%2C0%2C6%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a0599a6c401dc637cca0141bd6eaf49b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">用了Python很久了，可能有些问题还没注意到，再复习下。&nbsp; &nbsp;&nbsp;</p><p data-lake-id=\"fe31bc864fdee41690570a50435ac9bb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" id=\"WhZjY\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><h1 data-lake-id=\"7156d5a4d33035e9fdf9c8587b8879fc\" id=\"06npG\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">常见数据结构</h1><h2 data-lake-id=\"f403cf18670aa7c5cf3e444091a3a575\" id=\"ltrGl\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">集合</h2><p data-lake-id=\"cfed71cbce98c1e027b3384b7e979e53\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">跟其他语言的set一样，集合是无重复元素的且无序的，显然底层是hash存储，对set中的元素增加和查找都是O(1)。因此不要随便使用pop()方法。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"UV2Jc\" class=\"lake-card-margin\" data-language=\"python\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>,<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>,<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3</span>} <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 定义</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">4</span>) <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 增加元素</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remove</span>(<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>) <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 删除元素</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sorted</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span>) <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 对set排序</span></span></span></pre></div></div></div><p data-lake-id=\"9ddd7ad0af933ce6baa23866440c0596\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"3f15078bd794e82c75c08ce1436c0a4a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9a6492aa1971f4f6bac63cee05fc925e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">大SD卡很快</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a0599a6c401dc637cca0141bd6eaf49b\">用了Python很久了，可能有些问题还没注意到，再复习下。    </p><p data-lake-id=\"fe31bc864fdee41690570a50435ac9bb\"><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22WhZjY%22%7D\"></card><h1 data-lake-id=\"7156d5a4d33035e9fdf9c8587b8879fc\" id=\"06npG\">常见数据结构</h1><h2 data-lake-id=\"f403cf18670aa7c5cf3e444091a3a575\" id=\"ltrGl\">集合</h2><p data-lake-id=\"cfed71cbce98c1e027b3384b7e979e53\">跟其他语言的set一样，集合是无重复元素的且无序的，显然底层是hash存储，对set中的元素增加和查找都是O(1)。因此不要随便使用pop()方法。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22python%22%2C%22code%22%3A%22a%20%3D%20%7B1%2C2%2C3%7D%20%23%20%E5%AE%9A%E4%B9%89%5Cna.add(4)%20%23%20%E5%A2%9E%E5%8A%A0%E5%85%83%E7%B4%A0%5Cna.remove(2)%20%23%20%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%5Cnsorted(a)%20%23%20%E5%AF%B9set%E6%8E%92%E5%BA%8F%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22UV2Jc%22%2C%22height%22%3A113%7D\"></card><p data-lake-id=\"9ddd7ad0af933ce6baa23866440c0596\"><br /></p><p data-lake-id=\"3f15078bd794e82c75c08ce1436c0a4a\"><br /></p><p data-lake-id=\"9a6492aa1971f4f6bac63cee05fc925e\">大SD卡很快</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a0599a6c401dc637cca0141bd6eaf49b\">用了Python很久了，可能有些问题还没注意到，再复习下。    </p><p data-lake-id=\"fe31bc864fdee41690570a50435ac9bb\"><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22WhZjY%22%7D\"></card><h1 data-lake-id=\"7156d5a4d33035e9fdf9c8587b8879fc\" id=\"06npG\">常见数据结构</h1><h2 data-lake-id=\"f403cf18670aa7c5cf3e444091a3a575\" id=\"ltrGl\">集合</h2><p data-lake-id=\"cfed71cbce98c1e027b3384b7e979e53\">跟其他语言的set一样，集合是无重复元素的且无序的，显然底层是hash存储，对set中的元素增加和查找都是O(1)。因此不要随便使用pop()方法。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22python%22%2C%22code%22%3A%22a%20%3D%20%7B1%2C2%2C3%7D%20%23%20%E5%AE%9A%E4%B9%89%5Cna.add(4)%20%23%20%E5%A2%9E%E5%8A%A0%E5%85%83%E7%B4%A0%5Cna.remove(2)%20%23%20%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%5Cnsorted(a)%20%23%20%E5%AF%B9set%E6%8E%92%E5%BA%8F%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22UV2Jc%22%2C%22height%22%3A113%7D\"></card><p data-lake-id=\"9ddd7ad0af933ce6baa23866440c0596\"><br /></p><p data-lake-id=\"3f15078bd794e82c75c08ce1436c0a4a\"><br /></p><p data-lake-id=\"9a6492aa1971f4f6bac63cee05fc925e\">大SD卡很快</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-06T15:55:42.000Z",
    "deleted_at": null,
    "created_at": "2020-06-20T11:13:49.000Z",
    "updated_at": "2020-09-06T15:55:42.000Z",
    "published_at": "2020-09-06T15:55:42.000Z",
    "first_published_at": "2020-06-20T14:05:34.000Z",
    "word_count": 142,
    "cover": null,
    "description": "用了Python很久了，可能有些问题还没注意到，再复习下。    常见数据结构集合跟其他语言的set一样，集合是无重复元素的且无序的，显然底层是hash存储，对set中的元素增加和查找都是O(1)。因此不要随便使用pop()方法。a = {1,2,3} # 定义 a.add(4) # 增加元素...",
    "custom_description": null,
    "hits": 4,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 5790146,
    "slug": "ytw18v",
    "title": "MySQL45讲总结",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n\n<a name=\"wCANo\"></a>\n# 01 | 基础架构：一条SQL查询语句是如何执行的？\n\n<br />配置：<br />wait_timeout：控制Sleep连接保持时间。线上未配置，默认8小时，\n<a name=\"r6QNN\"></a>\n#### SQL执行步骤\n客户端-连接器（管理连接、权限验证）-查询缓存（命中则直接返回，基本没啥用）-分析器（词法分析、语法分析，语法错误在这就能看到了）-优化器（执行计划生成、索引选择）-存储引擎（存储数据、提供读写接口）\n<a name=\"sDnON\"></a>\n#### server层\n连接器、查询缓存、分析器、优化器、执行器等，涵盖MySQL的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。\n<a name=\"WeaSU\"></a>\n#### 存储引擎\n负责数据的存储和提取。<br />\n\n<a name=\"lwsZV\"></a>\n### 连接器\nSleep：表示是空闲连接。<br />\n<br />数据库长连接和短连接：<br />长连接是连接成功后，如果客户端持续有请求，则一直使用同一个连接。优点：减少建立连接的动作，尽量使用<br />短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。<br />\n<br />全部使用长连接问题：可能MySQL占用内存会涨的很快，因为MySQL在执行过程中临时使用的内存是管理在连接对象里面的，会在连接断开才释放，如果长连接积累，会导致内存占用较大。<br />解决办法：定期断开长连接；5.7版本，执行比较大的操作的后，mysql_reset_connection来重新初始化连接资源，恢复连接到刚刚创建时的状态。miproxy连接数太多会自己断开<br />\n<br />内存：操作系统10G，应用8G，<br />线程级别的内存占用，<br />一个连接占多大，tcp占1M，文件系统描述符。<br />\n<br />为啥会用swap内存，<br />操作系统配置：是否使用swap    cpu结构有关 对称一致访问：每个核心访问最近的32G内存最快，开了的话，cpu0访问32G，这个进程用了32G就会用swap分区。 smp  numa  \n<a name=\"bcd2U\"></a>\n### 查询缓存\n基本没用了\n<a name=\"MEGbK\"></a>\n### 分析器\n词法分析：识别关键字，以及表名之类。<br />语法分析：根据语法规则判断语法是否错误。\n<a name=\"VTPqF\"></a>\n### 优化器\n索引顺序选择，多表join顺序等。\n<a name=\"JIta5\"></a>\n### 执行器\n执行前判断对表有没有相应权限。（没分析完词法，不知道是哪张表）<br />\n<br />问题：<br />1.Sleep连接是不是杀了一直没影响<br />2.miproxy对连接的管理：长短连接，长连接的维护。_功能怎么实现的，_<br />3.MySQL内存的使用。（innodb_buffer_size_pool之外的内存）。<br />4.数据库权限和表权限验证时间不一样<br />\n\n<a name=\"zqKmF\"></a>\n# 02 | 日志系统：一条SQL更新语句是如何执行的？\n线上配置：<br />innodb_flush_log_at_trx_commit：为1时保证每次事务的redo log都会持久化到磁盘。<br />sync_binlog：为1时保证每次事务的binlog都持久化到磁盘。<br />\n<br />更新流程：两阶段提交，涉及和binlog\n\n| <br /> | <br /> | <br /> | <br /> | <br /> | <br /> |\n| :--- | :--- | :--- | :--- | :--- | :--- |\n| redo log | 存储引擎层 | 物理日志（记录在哪个数据页上做了什么修改） | 大小固定，循环写 | <br /> | <br /> |\n| binlog | server层 | 逻辑日志（记录原始语句，对某行数据做了什么修改） | 追加写 | <br /> | <br /> |\n\n\n<br />redo log：保证了MySQL crash-safe能力。记录更新时，先把记录写到redo log并更新内存。<br />binlog：。。，<br />crash-safe：有了redo-log，可以保证数据库异常重启时，从redo log读取后写入内存再写入磁盘，保证数据部丢失。<br />\n<br />两阶段提交：<br />更新写入到内存后，redolog处于prapare阶段，然后写binlog，再调用引擎的提交事务接口，将redolog改成提交状态。<br />server是作为一个协调者。innodb只知道干啥。发起commit时候，innodb redo  write <br />innodb没完成不能马上写磁盘。<br />\n<br />MySQL磁盘满，会休眠，磁盘满。innodb队列变长了，可能都建立连接不成功：gdbc建立连接会show 变量，要不建立连接不成功，要不就连接数暴涨。<br />原因：如果在写完binlog到提交事务之间MySQL crash的问题。或者从备份恢复的时候。<br />\n<br />问题：<br />备份恢复apply log是在：将redo log的数据写入磁盘吗？<br />\n\n<a name=\"1RtAK\"></a>\n# 03 | 事务隔离：为什么你改了我还看不见？\n线上配置：<br />\n<br />事务ACID：Atomicity、Consistency、Isolation、Durability（原子性、一致性、隔离性、持久性）<br />\n<br />多个事务同时执行会出现的问题：脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）<br />隔离级别：<br />读未提交：可以看到未提交的事务<br />读提交：只有提交的事务才会被看到<br />可重复读：一个事务执行过程中看到的数据，总是和启动时看到的一样。不管其他的事务有没有启动。<br />串行化：顾名思义\n\n| <br /> | 脏读 | 不可重复读 | 幻读 | 视图开启时间（对于一个查询） |\n| :--- | :--- | :--- | :--- | :--- |\n| 读未提交 | 0 | 0 | 0 | 直接返回记录最新值 |\n| 读提交 | 1 | 0 | 0 | SQL执行时创建，此时有别的事务修改记录也可以看到 |\n| 可重复读 | 1 | 1 | 0 | 事务启动时创建，事务启动后的改动都看不到 |\n| 串行化 | 1 | 1 | 1 | 每次都加锁，避免并行 |\n\n\n<br />幻读的原因：update等操作的当前读，需要读取当前的数据，这个时候就会读到最新的更新数据了。表现为：单独select没有值，然后insert或者update，发现值已经有了。<br />\n<br />MVCC：undo log实现<br />\n\n<a name=\"a1jJq\"></a>\n# 04 | 深入浅出索引（上）\ninnodb索引类型：<br />主键索引和：根据叶子节点的内容<br />主键索引：叶子节点内容是整行数据<br />非主键索引：叶子节点内容是主键的值。也叫二级索引。使用二级索引，如果想获得整列的值，需要先从索引找到主键值，然后再根据主键查，需要回表。<br />\n<br />索引维护：<br />分裂：某个数据页满了，新插入数据的时候。<br />合并：相邻两个页删除了数据，利用率很低的时候。<br />ps：自增主键是不会分裂的，因为一直是增长的。<br />\n<br />问题：<br />1.同时插入较多数据时，索引维护是不是比较占资源。<br />2.业务字段做主键：只有一个索引；该索引必须是唯一索引？\n<a name=\"lVAwq\"></a>\n# 05 | 深入浅出索引（下）\n\n<br />避免回表的方式：<br />覆盖索引（组合索引）：<br />索引使用注意：<br />1.最左前缀原则：不管是对于组合索引，还是对于<br />2.索引下推：MySQL5.6优化，多个and条件的时候，对索引中的字段先过滤，减少回表次数。<br />2.索引列使用函数会导致索引失效<br />\n\n<a name=\"DHvEC\"></a>\n# 06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？\n\n<br />加锁范围分类：全局锁、表级锁和行锁。<br />全局锁<br />加全局锁方法：Flush tables with read lock (FTWRL)。使用场景：全库逻辑备份（innodb已经不需要了，可以使用--single-transaction）<br />表级锁<br />分为表锁和元数据锁（MDL）<br />表锁：lock tables … read/write。<br />元数据锁：当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。所以给小表加字段，如果读取较多的话，也会阻塞，会阻塞所有的查询和更新，如果客户端有重试机制，会导致该库线程打满。<br />\n<br />尽量使用FTWRL而不是set global read_only=1：<br />1.read_only可能会用来判断是主库还是备库。<br />2.FTWRL命令时，如果客户端异常断开，MySQL会自动释放，set global read_only会导致MySQL一直只读。\n\n<a name=\"QbuYh\"></a>\n# 07 | 行锁功过：怎么减少行锁对性能的影响？\n线上配置：<br />innodb_lock_wait_timeout：10<br />innodb_deadlock_detect：on<br />两阶段锁协议：行锁在需要的时候才加上，但是在事务结束后才释放。所以要把可能影响并发的锁放在后面。<br />死锁和死锁检测策略：<br />一直等待到超时：innodb_lock_wait_timeout：一直等待锁，直到超时。值不能太大，也不能太小。<br />死锁检测：发现死锁后，主动回滚死锁链条中的某偶一个事务，让其他事务执行。\n\n问题：<br />死锁检测成本：每个新来的线程，都要要判断会不会由于自己的加入导致死锁，如果同时更新同一行的线程很多的时候。CPU消耗。<br />原理怎么做的。\n\n<a name=\"RZLu1\"></a>\n# 08 | 事务到底是隔离的还是不隔离的？\nundolog：实现了MVCC<br />数据可见性，锁是实现隔离级别。<br />查询和更新是当前读还是一致性读。<br />一致性读：可重复读隔离级别下，读取数据时，会根据row trx_id找到是否能读到当前值，不在的话会根据redo log往前找。<br />当前读：操作数据都是要读当前。可重复读隔离级别下，如果需要更新数据，只能拿最新的数据更新，这个时候虽然别的事务还没有提交，但还是能看到的。<br />undolog 大小。共享表空间<br />\n\n<a name=\"0r9jz\"></a>\n# 09 | 普通索引和唯一索引，应该怎么选择？\n\n\n<a name=\"hC6sk\"></a>\n# 12 | 为什么我的MySQL会“抖”一下？\n线上配置：<br />innodb_flush_neighbors：1<br />innodb_io_capacity：5000<br />innodb_max_dirty_pages_pct：75<br />\n<br />为什么会抖一下：<br />1.redo log满了。redo log中的checkpoint前移动，需要刷脏页。（应该避免，因为此时数据库服务已经阻塞，需要控制刷脏页频率）  一般不会设置，不同百分比的时候不一样。<br />2.内存不足，需要淘汰脏页。buffer_pool    <br />3.日常刷脏页。对应MySQL的配置。<br />4.MySQL正常关闭。<br />\n<br />正常使用的数据库，buffer一般未被使用的情况比较少，如果一个查询，需要的内存比较大，查询需要从磁盘读取很多页的时候，也要将脏页刷到磁盘中。<br />可用的页，刷脏页，写到磁盘，redolog checkpoint 往前走，free list flush list lru list<br />\n<br />脏页刷盘参考：一个是脏页比例，一个是redo log写盘速度。<br />\n<br />如果高配机器redo log设置比较小的话：redo log很容易被写满，就会导致经常要因为redo log满了而刷盘。表现为：磁盘压力很小，但是数据库出现间歇性的性能下跌<br />\n<br />\n\n<a name=\"WyU22\"></a>\n# 13 | 为什么表数据删掉一半，表文件大小不变？\n：怎么正确的回收表空间<br />innodb_file_per_table：1 默认值<br />删除整个表数据会删除，但是删除表中的部分数据，空间是怎么回收的。<br />\n<br />delete删除一条记录：将记录标记为已删除，之后可以复用。<br />delete删除多条记录：如果整个页被删除，则整页都被标记为可复用。相邻的两页使用率低，会合并。但空间均不会被释放。同理：插入数据，如果当前页已满，肯定会开启新页，也会造成数据空洞。<br />\n<br />压缩空间：alter table A engine=InnoDB。5.5之前不要用，会阻塞DML。5.6版本之后：Online DDL（先建新表，并将旧表的更新写在一个文件中，新表搞好之后，再读取文件中的更新。**会有很短时间的MDL写锁**）<br />\n<br />DDL过程如果是Online的，就一定是inplace的？\n\n<a name=\"Lvqoc\"></a>\n# 14 | count(*)这么慢，我该怎么办？\n\n<br />不加where条件：<br />MyISAM引擎：把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高；<br />InnoDB引擎：数据一行一行地从引擎里面读出来，然后累积计数。<br />show table status：不准确。<br />\n<br />加where条件：<br />InnoDB引擎：选择从引擎读<br />\n<br />效率排序：count(字段)<count(主键id)<count(1)≈count(*)<br />count(*)：特殊处理过，因为不会为null，server会按行累计。<br />\n<br />count(1)：InnoDB引擎遍历整张表，但不取值。server层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加。<br />count(主键id)：InnoDB引擎会遍历整张表，把每一行的id值都取出来，返回给server层。server层拿到id后，判断是不可能为空的，就按行累加。<br />count(字段)：根据是否为not null进行判断。<br />\n\n<a name=\"EAyss\"></a>\n# 15 | 答疑文章（一）：日志和索引相关问题\n日志相关：<br />1.两阶段提交不同瞬间MySQL异常重启怎么保证数据完整性：<br />测试<br />\n<br />\n\n<a name=\"GM6Os\"></a>\n# 16 | “order by”是怎么工作的？\n<a name=\"sk0zO\"></a>\n## 全字段排序\n排序过程对字符串做了“紧凑”处理。即使name字段的定义是varchar(16)，在排序过程中还是要按照实际长度来分配空间的。<br />\n<br />\n<br />max_length_for_sort_data\n<a name=\"sbCzu\"></a>\n##  rowid排序\n\n\n",
    "body_draft": "\n\n<a name=\"wCANo\"></a>\n# 01 | 基础架构：一条SQL查询语句是如何执行的？\n\n<br />配置：<br />wait_timeout：控制Sleep连接保持时间。线上未配置，默认8小时，\n<a name=\"r6QNN\"></a>\n#### SQL执行步骤\n客户端-连接器（管理连接、权限验证）-查询缓存（命中则直接返回，基本没啥用）-分析器（词法分析、语法分析，语法错误在这就能看到了）-优化器（执行计划生成、索引选择）-存储引擎（存储数据、提供读写接口）\n<a name=\"sDnON\"></a>\n#### server层\n连接器、查询缓存、分析器、优化器、执行器等，涵盖MySQL的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。\n<a name=\"WeaSU\"></a>\n#### 存储引擎\n负责数据的存储和提取。<br />\n\n<a name=\"lwsZV\"></a>\n### 连接器\nSleep：表示是空闲连接。<br />\n<br />数据库长连接和短连接：<br />长连接是连接成功后，如果客户端持续有请求，则一直使用同一个连接。优点：减少建立连接的动作，尽量使用<br />短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。<br />\n<br />全部使用长连接问题：可能MySQL占用内存会涨的很快，因为MySQL在执行过程中临时使用的内存是管理在连接对象里面的，会在连接断开才释放，如果长连接积累，会导致内存占用较大。<br />解决办法：定期断开长连接；5.7版本，执行比较大的操作的后，mysql_reset_connection来重新初始化连接资源，恢复连接到刚刚创建时的状态。miproxy连接数太多会自己断开<br />\n<br />内存：操作系统10G，应用8G，<br />线程级别的内存占用，<br />一个连接占多大，tcp占1M，文件系统描述符。<br />\n<br />为啥会用swap内存，<br />操作系统配置：是否使用swap    cpu结构有关 对称一致访问：每个核心访问最近的32G内存最快，开了的话，cpu0访问32G，这个进程用了32G就会用swap分区。 smp  numa  \n<a name=\"bcd2U\"></a>\n### 查询缓存\n基本没用了\n<a name=\"MEGbK\"></a>\n### 分析器\n词法分析：识别关键字，以及表名之类。<br />语法分析：根据语法规则判断语法是否错误。\n<a name=\"VTPqF\"></a>\n### 优化器\n索引顺序选择，多表join顺序等。\n<a name=\"JIta5\"></a>\n### 执行器\n执行前判断对表有没有相应权限。（没分析完词法，不知道是哪张表）<br />\n<br />问题：<br />1.Sleep连接是不是杀了一直没影响<br />2.miproxy对连接的管理：长短连接，长连接的维护。_功能怎么实现的，_<br />3.MySQL内存的使用。（innodb_buffer_size_pool之外的内存）。<br />4.数据库权限和表权限验证时间不一样<br />\n\n<a name=\"zqKmF\"></a>\n# 02 | 日志系统：一条SQL更新语句是如何执行的？\n线上配置：<br />innodb_flush_log_at_trx_commit：为1时保证每次事务的redo log都会持久化到磁盘。<br />sync_binlog：为1时保证每次事务的binlog都持久化到磁盘。<br />\n<br />更新流程：两阶段提交，涉及和binlog\n\n| <br /> | <br /> | <br /> | <br /> | <br /> | <br /> |\n| :--- | :--- | :--- | :--- | :--- | :--- |\n| redo log | 存储引擎层 | 物理日志（记录在哪个数据页上做了什么修改） | 大小固定，循环写 | <br /> | <br /> |\n| binlog | server层 | 逻辑日志（记录原始语句，对某行数据做了什么修改） | 追加写 | <br /> | <br /> |\n\n\n<br />redo log：保证了MySQL crash-safe能力。记录更新时，先把记录写到redo log并更新内存。<br />binlog：。。，<br />crash-safe：有了redo-log，可以保证数据库异常重启时，从redo log读取后写入内存再写入磁盘，保证数据部丢失。<br />\n<br />两阶段提交：<br />更新写入到内存后，redolog处于prapare阶段，然后写binlog，再调用引擎的提交事务接口，将redolog改成提交状态。<br />server是作为一个协调者。innodb只知道干啥。发起commit时候，innodb redo  write <br />innodb没完成不能马上写磁盘。<br />\n<br />MySQL磁盘满，会休眠，磁盘满。innodb队列变长了，可能都建立连接不成功：gdbc建立连接会show 变量，要不建立连接不成功，要不就连接数暴涨。<br />原因：如果在写完binlog到提交事务之间MySQL crash的问题。或者从备份恢复的时候。<br />\n<br />问题：<br />备份恢复apply log是在：将redo log的数据写入磁盘吗？<br />\n\n<a name=\"1RtAK\"></a>\n# 03 | 事务隔离：为什么你改了我还看不见？\n线上配置：<br />\n<br />事务ACID：Atomicity、Consistency、Isolation、Durability（原子性、一致性、隔离性、持久性）<br />\n<br />多个事务同时执行会出现的问题：脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）<br />隔离级别：<br />读未提交：可以看到未提交的事务<br />读提交：只有提交的事务才会被看到<br />可重复读：一个事务执行过程中看到的数据，总是和启动时看到的一样。不管其他的事务有没有启动。<br />串行化：顾名思义\n\n| <br /> | 脏读 | 不可重复读 | 幻读 | 视图开启时间（对于一个查询） |\n| :--- | :--- | :--- | :--- | :--- |\n| 读未提交 | 0 | 0 | 0 | 直接返回记录最新值 |\n| 读提交 | 1 | 0 | 0 | SQL执行时创建，此时有别的事务修改记录也可以看到 |\n| 可重复读 | 1 | 1 | 0 | 事务启动时创建，事务启动后的改动都看不到 |\n| 串行化 | 1 | 1 | 1 | 每次都加锁，避免并行 |\n\n\n<br />幻读的原因：update等操作的当前读，需要读取当前的数据，这个时候就会读到最新的更新数据了。表现为：单独select没有值，然后insert或者update，发现值已经有了。<br />\n<br />MVCC：undo log实现<br />\n\n<a name=\"a1jJq\"></a>\n# 04 | 深入浅出索引（上）\ninnodb索引类型：<br />主键索引和：根据叶子节点的内容<br />主键索引：叶子节点内容是整行数据<br />非主键索引：叶子节点内容是主键的值。也叫二级索引。使用二级索引，如果想获得整列的值，需要先从索引找到主键值，然后再根据主键查，需要回表。<br />\n<br />索引维护：<br />分裂：某个数据页满了，新插入数据的时候。<br />合并：相邻两个页删除了数据，利用率很低的时候。<br />ps：自增主键是不会分裂的，因为一直是增长的。<br />\n<br />问题：<br />1.同时插入较多数据时，索引维护是不是比较占资源。<br />2.业务字段做主键：只有一个索引；该索引必须是唯一索引？\n<a name=\"lVAwq\"></a>\n# 05 | 深入浅出索引（下）\n\n<br />避免回表的方式：<br />覆盖索引（组合索引）：<br />索引使用注意：<br />1.最左前缀原则：不管是对于组合索引，还是对于<br />2.索引下推：MySQL5.6优化，多个and条件的时候，对索引中的字段先过滤，减少回表次数。<br />2.索引列使用函数会导致索引失效<br />\n\n<a name=\"DHvEC\"></a>\n# 06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？\n\n<br />加锁范围分类：全局锁、表级锁和行锁。<br />全局锁<br />加全局锁方法：Flush tables with read lock (FTWRL)。使用场景：全库逻辑备份（innodb已经不需要了，可以使用--single-transaction）<br />表级锁<br />分为表锁和元数据锁（MDL）<br />表锁：lock tables … read/write。<br />元数据锁：当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。所以给小表加字段，如果读取较多的话，也会阻塞，会阻塞所有的查询和更新，如果客户端有重试机制，会导致该库线程打满。<br />\n<br />尽量使用FTWRL而不是set global read_only=1：<br />1.read_only可能会用来判断是主库还是备库。<br />2.FTWRL命令时，如果客户端异常断开，MySQL会自动释放，set global read_only会导致MySQL一直只读。\n\n<a name=\"QbuYh\"></a>\n# 07 | 行锁功过：怎么减少行锁对性能的影响？\n线上配置：<br />innodb_lock_wait_timeout：10<br />innodb_deadlock_detect：on<br />两阶段锁协议：行锁在需要的时候才加上，但是在事务结束后才释放。所以要把可能影响并发的锁放在后面。<br />死锁和死锁检测策略：<br />一直等待到超时：innodb_lock_wait_timeout：一直等待锁，直到超时。值不能太大，也不能太小。<br />死锁检测：发现死锁后，主动回滚死锁链条中的某偶一个事务，让其他事务执行。\n\n问题：<br />死锁检测成本：每个新来的线程，都要要判断会不会由于自己的加入导致死锁，如果同时更新同一行的线程很多的时候。CPU消耗。<br />原理怎么做的。\n\n<a name=\"RZLu1\"></a>\n# 08 | 事务到底是隔离的还是不隔离的？\nundolog：实现了MVCC<br />数据可见性，锁是实现隔离级别。<br />查询和更新是当前读还是一致性读。<br />一致性读：可重复读隔离级别下，读取数据时，会根据row trx_id找到是否能读到当前值，不在的话会根据redo log往前找。<br />当前读：操作数据都是要读当前。可重复读隔离级别下，如果需要更新数据，只能拿最新的数据更新，这个时候虽然别的事务还没有提交，但还是能看到的。<br />undolog 大小。共享表空间<br />\n\n<a name=\"0r9jz\"></a>\n# 09 | 普通索引和唯一索引，应该怎么选择？\n\n\n<a name=\"hC6sk\"></a>\n# 12 | 为什么我的MySQL会“抖”一下？\n线上配置：<br />innodb_flush_neighbors：1<br />innodb_io_capacity：5000<br />innodb_max_dirty_pages_pct：75<br />\n<br />为什么会抖一下：<br />1.redo log满了。redo log中的checkpoint前移动，需要刷脏页。（应该避免，因为此时数据库服务已经阻塞，需要控制刷脏页频率）  一般不会设置，不同百分比的时候不一样。<br />2.内存不足，需要淘汰脏页。buffer_pool    <br />3.日常刷脏页。对应MySQL的配置。<br />4.MySQL正常关闭。<br />\n<br />正常使用的数据库，buffer一般未被使用的情况比较少，如果一个查询，需要的内存比较大，查询需要从磁盘读取很多页的时候，也要将脏页刷到磁盘中。<br />可用的页，刷脏页，写到磁盘，redolog checkpoint 往前走，free list flush list lru list<br />\n<br />脏页刷盘参考：一个是脏页比例，一个是redo log写盘速度。<br />\n<br />如果高配机器redo log设置比较小的话：redo log很容易被写满，就会导致经常要因为redo log满了而刷盘。表现为：磁盘压力很小，但是数据库出现间歇性的性能下跌<br />\n<br />\n\n<a name=\"WyU22\"></a>\n# 13 | 为什么表数据删掉一半，表文件大小不变？\n：怎么正确的回收表空间<br />innodb_file_per_table：1 默认值<br />删除整个表数据会删除，但是删除表中的部分数据，空间是怎么回收的。<br />\n<br />delete删除一条记录：将记录标记为已删除，之后可以复用。<br />delete删除多条记录：如果整个页被删除，则整页都被标记为可复用。相邻的两页使用率低，会合并。但空间均不会被释放。同理：插入数据，如果当前页已满，肯定会开启新页，也会造成数据空洞。<br />\n<br />压缩空间：alter table A engine=InnoDB。5.5之前不要用，会阻塞DML。5.6版本之后：Online DDL（先建新表，并将旧表的更新写在一个文件中，新表搞好之后，再读取文件中的更新。**会有很短时间的MDL写锁**）<br />\n<br />DDL过程如果是Online的，就一定是inplace的？\n\n<a name=\"Lvqoc\"></a>\n# 14 | count(*)这么慢，我该怎么办？\n\n<br />不加where条件：<br />MyISAM引擎：把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高；<br />InnoDB引擎：数据一行一行地从引擎里面读出来，然后累积计数。<br />show table status：不准确。<br />\n<br />加where条件：<br />InnoDB引擎：选择从引擎读<br />\n<br />效率排序：count(字段)<count(主键id)<count(1)≈count(*)<br />count(*)：特殊处理过，因为不会为null，server会按行累计。<br />\n<br />count(1)：InnoDB引擎遍历整张表，但不取值。server层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加。<br />count(主键id)：InnoDB引擎会遍历整张表，把每一行的id值都取出来，返回给server层。server层拿到id后，判断是不可能为空的，就按行累加。<br />count(字段)：根据是否为not null进行判断。<br />\n\n<a name=\"EAyss\"></a>\n# 15 | 答疑文章（一）：日志和索引相关问题\n日志相关：<br />1.两阶段提交不同瞬间MySQL异常重启怎么保证数据完整性：<br />测试<br />\n<br />\n\n<a name=\"GM6Os\"></a>\n# 16 | “order by”是怎么工作的？\n<a name=\"sk0zO\"></a>\n## 全字段排序\n排序过程对字符串做了“紧凑”处理。即使name字段的定义是varchar(16)，在排序过程中还是要按照实际长度来分配空间的。<br />\n<br />\n<br />max_length_for_sort_data\n<a name=\"sbCzu\"></a>\n##  rowid排序\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><p data-lake-id=\"09df46f59fbc3242c2f80214a07bc754\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><br></span><br></p><p data-lake-id=\"c8530503ee8282c6cee92196d0f7d2a5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"0b56185ceff7253f7c9e1960dee68411\" id=\"wCANo\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">01 | 基础架构：一条SQL查询语句是如何执行的？</h1><p data-lake-id=\"7bb2a84f8f276da7c6ee08e8a7220fa2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bf5107179b54afa2760002ac3aab1f41\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">配置：</p><p data-lake-id=\"f168e6f1a414e9337d812208fe3eb20e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">wait_timeout：控制Sleep连接保持时间。线上未配置，默认8小时，</p><h4 data-lake-id=\"534e68c6168bd2e4c7790cc1847d619d\" id=\"r6QNN\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">SQL执行步骤</h4><p data-lake-id=\"1949b95b5e970debd99d2483b227b4b7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">客户端-连接器（管理连接、权限验证）-查询缓存（命中则直接返回，基本没啥用）-分析器（词法分析、语法分析，语法错误在这就能看到了）-优化器（执行计划生成、索引选择）-存储引擎（存储数据、提供读写接口）</p><h4 data-lake-id=\"4c5b62be2a54771639e2b921ccd91a90\" id=\"sDnON\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">server层</h4><p data-lake-id=\"fbf0b48d21f7809618db53e5e9bfe9a6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">连接器、查询缓存、分析器、优化器、执行器等，涵盖MySQL的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。</p><h4 data-lake-id=\"98dc54119c5f566ea828bd6c44cd39d0\" id=\"WeaSU\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">存储引擎</h4><p data-lake-id=\"21e0dfd7caae90b55504b22d68b8ad7a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">负责数据的存储和提取。</p><p data-lake-id=\"50a48f063550b4f6873121218b94cf97\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"b595e982a44b116803d08417e7eab9c7\" id=\"lwsZV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">连接器</h3><p data-lake-id=\"45be6d3b6d599ff6d0478a20b6665fff\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Sleep：表示是空闲连接。</p><p data-lake-id=\"da1cee222c74e1b4f321be1b3d6303fd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f4f46b202aca08eeec5956d39149e37b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">数据库长连接和短连接：</p><p data-lake-id=\"abdf120308d2154de73fc628629eaeae\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">长连接是连接成功后，如果客户端持续有请求，则一直使用同一个连接。优点：减少建立连接的动作，<span style=\"color: #F5222D;\">尽量使用</span></p><p data-lake-id=\"20b4ef7430d5dece8e75f93b2bd38c6a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。</p><p data-lake-id=\"2e8d3d28e4a61cf8d5017f24e21da611\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8f733532bd6b5b8762d43bd842df6e2a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">全部使用长连接问题：可能MySQL占用内存会涨的很快，因为MySQL在执行过程中临时使用的内存是管理在连接对象里面的，<span style=\"color: #FF0000;\">会在连接断开才释放</span>，如果长连接积累，会导致内存占用较大。</p><p data-lake-id=\"0e761b09d4687ea16c0e90f99a134d44\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">解决办法：定期断开长连接；5.7版本，执行比较大的操作的后，mysql_reset_connection来重新初始化连接资源，恢复连接到刚刚创建时的状态。miproxy连接数太多会自己断开</p><p data-lake-id=\"a7cb8762369e0fab31c2fd8707faf16e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1791da3a924b4eb71b43b467b3c5caf4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">内存：操作系统10G，应用8G，</p><p data-lake-id=\"477f6bdcd007a14a70e1f7f7f6f66c3a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">线程级别的内存占用，</p><p data-lake-id=\"7ce558b32931212364eb449afdbd5661\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个连接占多大，tcp占1M，文件系统描述符。</p><p data-lake-id=\"2a4c90862f1abba1182ec10716b9f8a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4db9e9df2b441ce3cbc987838e78bdd5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为啥会用swap内存，</p><p data-lake-id=\"e41cb684b2bbc077f5d694f87405a539\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">操作系统配置：是否使用swap&nbsp; &nbsp; cpu结构有关 对称一致访问：每个核心访问最近的32G内存最快，开了的话，cpu0访问32G，这个进程用了32G就会用swap分区。 smp&nbsp; numa&nbsp;&nbsp;</p><h3 data-lake-id=\"9166c015860f59a2dd19f67b87294108\" id=\"bcd2U\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">查询缓存</h3><p data-lake-id=\"214394ad1477a73c4f82157752c9e72d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">基本没用了</p><h3 data-lake-id=\"58663b1213246aee68eb274355e9ba82\" id=\"MEGbK\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">分析器</h3><p data-lake-id=\"5bb9493298f0988a87449d159828ee90\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">词法分析：识别关键字，以及表名之类。</p><p data-lake-id=\"c3341b037fb6ccfcd825c5ee0926c5b1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">语法分析：根据语法规则判断语法是否错误。</p><h3 data-lake-id=\"6f3c9bb1a9e52300b0b750d6988c3cd5\" id=\"VTPqF\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">优化器</h3><p data-lake-id=\"c2e477beb112ed84f6b57f54db0c9c1e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">索引顺序选择，多表join顺序等。</p><h3 data-lake-id=\"1cc98e337b251ebcb003eec3c6e57fbe\" id=\"JIta5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">执行器</h3><p data-lake-id=\"c6f054207f95e340dea5002104f970b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">执行前判断对表有没有相应权限。（没分析完词法，不知道是哪张表）</p><p data-lake-id=\"fee06cd25379f72e6775e07f0c2b54fa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8309234cdf3cb01584a30772ed4aa6e4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">问题：</p><p data-lake-id=\"a4ae520c821c2fcb79949e3099f21569\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">1.Sleep连接是不是杀了一直没影响</p><p data-lake-id=\"3ee656bbaeafe63c2cf7e0fd7f23e3f8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">2.miproxy对连接的管理：长短连接，长连接的维护。<em>功能怎么实现的，</em></p><p data-lake-id=\"fe81e43dcb74e3902d1203a861c3b4a9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">3.MySQL内存的使用。（innodb_buffer_size_pool之外的内存）。</p><p data-lake-id=\"c4612bed1626101d196cbe01e1216f76\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">4.数据库权限和表权限验证时间不一样</p><p data-lake-id=\"e99130e26bbb8ed869fd6be3617a683d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"13b9da6d1743e05c19901b67dbb04756\" id=\"zqKmF\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">02 | 日志系统：一条SQL更新语句是如何执行的？</h1><p data-lake-id=\"e09b342fc25f964aebc020592077635f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">线上配置：</p><p data-lake-id=\"cb4a429bd558985f7865d364c202534b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb_flush_log_at_trx_commit：为1时保证每次事务的redo log都会持久化到磁盘。</p><p data-lake-id=\"625be067535afe140dfd15b572ec0e07\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\">sync_binlog：为1时保证每次事务的binlog都持久化到磁盘。</span></p><p data-lake-id=\"9fa1bc3b64c0a409a8b4eb4cb63c38a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"50c9fb1b1bb7d379f95f821f22e070a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">更新流程：两阶段提交，涉及和binlog</p><div data-card-type=\"block\" data-lake-card=\"table\" id=\"uWhfa\"><table class=\"lake-table\" style=\"width: 720px; outline: none; border-collapse: collapse;\"><colgroup><col span=\"1\" width=\"120\"><col span=\"1\" width=\"120\"><col span=\"1\" width=\"120\"><col span=\"1\" width=\"120\"><col span=\"1\" width=\"120\"><col span=\"1\" width=\"120\"></colgroup><tbody><tr style=\"height: 33px;\"><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td></tr><tr style=\"height: 33px;\"><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">redo log</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">存储引擎层</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">物理日志（记录在哪个数据页上做了什么修改）</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">大小固定，循环写</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">binlog</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">server层</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">逻辑日志（记录原始语句，对某行数据做了什么修改）</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">追加写</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td></tr></tbody></table></div><p data-lake-id=\"ad3723db29233763eb7432e7497310bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"60f4d70821703ee7dae0a44e996fc9d2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">redo log：保证了MySQL crash-safe能力。记录更新时，先把记录写到redo log并更新内存。</p><p data-lake-id=\"394158331bafbb331681d31ab3e1f441\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">binlog：。。，</p><p data-lake-id=\"f15eecbe3da39b026dfa37cf70708db3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">crash-safe：有了redo-log，可以保证数据库异常重启时，从redo log读取后写入内存再写入磁盘，保证数据部丢失。</p><p data-lake-id=\"abb17a1986df12bd3d11a0c30be593ad\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"97d6b050c1ab868e49244203269d0dff\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">两阶段提交：</p><p data-lake-id=\"2d7976b0cb786f3684336883632a5ed6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">更新写入到内存后，redolog处于prapare阶段，然后写binlog，再调用引擎的提交事务接口，将redolog改成提交状态。</p><p data-lake-id=\"8c4996cd369596d22ba0f5d6389ada95\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">server是作为一个协调者。innodb只知道干啥。发起commit时候，innodb redo&nbsp; write&nbsp;</p><p data-lake-id=\"7a7ace15f7469918714e907ea27a841c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb没完成不能马上写磁盘。</p><p data-lake-id=\"13b8b0129d6033cc7873bc3ede9d3303\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"aa3dc8b2a742e9809436c9347dbe2afb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">MySQL磁盘满，会休眠，磁盘满。innodb队列变长了，可能都建立连接不成功：gdbc建立连接会show 变量，要不建立连接不成功，要不就连接数暴涨。</p><p data-lake-id=\"eab530a1d3c1da3a5bf739ac0be53dc2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">原因：如果在写完binlog到提交事务之间MySQL crash的问题。或者从备份恢复的时候。</p><p data-lake-id=\"4603d8bf946029bb1e41ac932b52a216\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c048a640f8e59bb0b6ec6209b9c9cbd4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">问题：</p><p data-lake-id=\"1426cc579c7e9c13301cc841d9106ced\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">备份恢复apply log是在：将redo log的数据写入磁盘吗？</p><p data-lake-id=\"ea5869925082c68190bcba9091eee5d2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"8ec526c3a6de86a1a8ffa1d660e2edbb\" id=\"1RtAK\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">03 | 事务隔离：为什么你改了我还看不见？</h1><p data-lake-id=\"40d24f3ac90909d06d30f2196fdd343c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">线上配置：</p><p data-lake-id=\"6b3f65f8569576459088d3c76c227341\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8394f011313092ed4fadcf9f9fe9d260\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">事务ACID：Atomicity、Consistency、Isolation、Durability（原子性、一致性、隔离性、持久性）</p><p data-lake-id=\"40737a18ee3a89e8fd00267a34ee31b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cdd33e1f72f63f826f2d07464f8aeb04\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">多个事务同时执行会出现的问题：脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）</p><p data-lake-id=\"7a9a4d238425d61693cc0f0fdc6ec57f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">隔离级别：</p><p data-lake-id=\"f0a16c943ee4697b58de3daf02c6a250\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>读未提交：可以看到未提交的事务</span></p><p data-lake-id=\"81c22f90413212f1611a73fb5f9e4121\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">读提交：只有提交的事务才会被看到</p><p data-lake-id=\"5fe34b4648ac2ed12f00e613f4f4ec68\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可重复读：一个事务执行过程中看到的数据，总是和启动时看到的一样。不管其他的事务有没有启动。</p><p data-lake-id=\"37060ec226684a7a35a6c4d77427a072\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">串行化：顾名思义</p><div data-card-type=\"block\" data-lake-card=\"table\" id=\"JiUBB\"><table class=\"lake-table\" style=\"width: 720px; outline: none; border-collapse: collapse;\"><colgroup><col span=\"1\" width=\"144\"><col span=\"1\" width=\"144\"><col span=\"1\" width=\"144\"><col span=\"1\" width=\"144\"><col span=\"1\" width=\"144\"></colgroup><tbody><tr style=\"height: 33px;\"><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><br></td><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">脏读</td><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">不可重复读</td><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">幻读</td><td style=\"vertical-align: top; text-align: left; background-color: rgb(244, 245, 247); min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">视图开启时间（对于一个查询）</td></tr><tr style=\"height: 33px;\"><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">读未提交</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">0</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">0</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">0</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">直接返回记录最新值</td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">读提交</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">0</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">0</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">SQL执行时创建，此时有别的事务修改记录也可以看到</td></tr><tr style=\"height: 33px;\"><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">可重复读</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">0</td><td style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">事务启动时创建，事务启动后的改动都看不到</td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">串行化</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td colspan=\"1\" style=\"vertical-align: top; text-align: left; min-width: 90px; font-size: 14px; white-space: normal; overflow-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">每次都加锁，避免并行</td></tr></tbody></table></div><p data-lake-id=\"0661447e01d6eed4289ae72d6c0d3ff7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"45a91b68c50b3d79b4a44780c284aa27\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">幻读的原因：update等操作的当前读，需要读取当前的数据，这个时候就会读到最新的更新数据了。表现为：单独select没有值，然后insert或者update，发现值已经有了。</p><p data-lake-id=\"63cde8e1f5353f3b88e0bd13857cd4be\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b0e85dd19c2bf3a3e51bbf5c26bbe64d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">MVCC：undo log实现</p><p data-lake-id=\"2b8be3ff5f4e71d86b1df0f037f2142f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"e524bd39349805cdee0e20650a13d3f6\" id=\"a1jJq\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">04 | 深入浅出索引（上）</h1><p data-lake-id=\"37e8dc35289f4092238bb9958e4ad609\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb索引类型：</p><p data-lake-id=\"1ef7f4eadb75191261427bf9624241f5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">主键索引和：根据叶子节点的内容</p><p data-lake-id=\"d20d363dc4900267f656f3bfd4f87ca7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">主键索引：叶子节点内容是整行数据</p><p data-lake-id=\"c48388f16161e3a13c0976e71f372db3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">非主键索引：叶子节点内容是主键的值。也叫二级索引。使用二级索引，如果想获得整列的值，需要先从索引找到主键值，然后再根据主键查，需要回表。</p><p data-lake-id=\"43dddc805a422a7923fb8d438c43aa22\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f669c605b34dea5bd1a31ca47ec90192\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">索引维护：</p><p data-lake-id=\"0683d98216debb18bccd20b9626641f1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">分裂：某个数据页满了，新插入数据的时候。</p><p data-lake-id=\"a1967aecb49cdeebf14416e00fe96a88\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">合并：相邻两个页删除了数据，利用率很低的时候。</p><p data-lake-id=\"e68a94668a8045e951132175d011d8fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">ps：自增主键是不会分裂的，因为一直是增长的。</p><p data-lake-id=\"ee97b4b336db28351142c6fe08f51dff\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0429ed88e2df15fdfdd6b9a09dbdd0d5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">问题：</p><p data-lake-id=\"29302ad31064a2257ad1703c8492f1c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">1.同时插入较多数据时，索引维护是不是比较占资源。</p><p data-lake-id=\"450058682d2be3e264458c423a05bcdd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">2.业务字段做主键：只有一个索引；该索引必须是唯一索引？</p><h1 data-lake-id=\"94245f01f949656c4fc6088deb243dee\" id=\"lVAwq\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">05 | 深入浅出索引（下）</h1><p data-lake-id=\"09a8cb2d23346d984a4de922e36d6936\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"330c7e3823af62513a90fc1eb1b960a9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">避免回表的方式：</p><p data-lake-id=\"bd1ebeee99c266daefb1761b6c6c8053\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">覆盖索引（组合索引）：</p><p data-lake-id=\"c145c511d0ff39c3eafd212f6d5bcc9c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">索引使用注意：</p><p data-lake-id=\"e053e40687b4b04e0180614df8fa7977\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">1.最左前缀原则：不管是对于组合索引，还是对于</p><p data-lake-id=\"6eeba68ed3cdd5157ae6f6e45b8bfabb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">2.索引下推：MySQL5.6优化，多个and条件的时候，对索引中的字段先过滤，减少回表次数。</p><p data-lake-id=\"f7323fa7eb731d89d01023614c996604\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">2.索引列使用函数会导致索引失效</p><p data-lake-id=\"a9dc71d5cba630f549d4c5fab944e794\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"f5dd0a2d8467f4f1ee030a8b52269673\" id=\"DHvEC\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？</h1><p data-lake-id=\"f3b70eb39dbdd7d84ced28087f1bfb57\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5d915541fb5ea13289bc0c61f66a6e3d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">加锁范围分类：全局锁、表级锁和行锁。</p><p data-lake-id=\"f3f03256599904abbde2d2f50f94fc1b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">全局锁</p><p data-lake-id=\"a150252a34700120b791f6d0faea7134\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">加全局锁方法：<span style=\"color: #353535;\">Flush tables with read lock (FTWRL)。使用场景：全库逻辑备份（innodb已经不需要了，可以使用--single-transaction）</span></p><p data-lake-id=\"7ee87897632f4460ec41ee6f7efbe167\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">表级锁</p><p data-lake-id=\"7d87807c2212754fb62d18d3072df050\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">分为表锁和元数据锁（MDL）</p><p data-lake-id=\"15c284c66e72715f6ae4b9c20d3c254e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">表锁：lock tables … read/write。</p><p data-lake-id=\"58f319101a719cd0ce96fadda2f30a02\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">元数据锁：当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。所以给小表加字段，如果读取较多的话，也会阻塞，会阻塞所有的查询和更新，如果客户端有重试机制，会导致该库线程打满。</p><p data-lake-id=\"3650c08df946eb044c9082938ef277e3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5b75a60e4918dd11297da42090abda9a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\">尽量使用FTWRL而不是set global read_only=1：</span></p><p data-lake-id=\"fddb447ba32068e041a3b3b7e26bc8ed\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">1.read_only可能会用来判断是主库还是备库。</p><p data-lake-id=\"0c0ecee3c4724a67f854722799319a32\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">2.<span style=\"color: #353535;\">FTWRL命令时，如果客户端异常断开，MySQL会自动释放，set global read_only会导致MySQL一直只读。</span></p><p data-lake-id=\"e9a1f346346d8a28901a669c6d970782\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\"><br></span></p><p data-lake-id=\"f5e65039ebf211a7158cd191f3821267\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"5349ef04d15cd2d984f45ac8c20c4fb1\" id=\"QbuYh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">07 | 行锁功过：怎么减少行锁对性能的影响？</h1><p data-lake-id=\"231d31716f18ccd5e18afb8267a5cbc5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">线上配置：</p><p data-lake-id=\"189df8259445e7f254d6c12a1ad83c5e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb_lock_wait_timeout：10</p><p data-lake-id=\"9739ed1c38f63344ac52f5a4dbbbf4ba\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\">innodb_deadlock_detect：on</span></p><p data-lake-id=\"963e5b248d51ac9609dc26fed4318cd1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">两阶段锁协议：行锁在需要的时候才加上，但是在事务结束后才释放。所以要把可能影响并发的锁放在后面。</p><p data-lake-id=\"eca9d3c147d8bbd7a71835474cc6ae09\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">死锁和死锁检测策略：</p><p data-lake-id=\"4d2b92d9a4e2da3bba70811765630299\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一直等待到超时：innodb_lock_wait_timeout：一直等待锁，直到超时。值不能太大，也不能太小。</p><p data-lake-id=\"08b8e559fe4d6cc40215e353b50c5fae\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">死锁检测：<span style=\"color: #353535;\">发现死锁后，主动回滚死锁链条中的某偶一个事务，让其他事务执行。</span></p><p data-lake-id=\"ff11668c88783960caa9c17903e5b07c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\"><br></span></p><p data-lake-id=\"558a5318a6979fd67b45719fbf7e580f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\">问题：</span></p><p data-lake-id=\"c097e7296f0d3abc9c1009e39c0f158f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\">死锁检测成本：每个新来的线程，都要要判断会不会由于自己的加入导致死锁，如果同时更新同一行的线程很多的时候。CPU消耗。</span></p><p data-lake-id=\"dcba0155b90c8446f6263693385a99d5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\">原理怎么做的。</span></p><p data-lake-id=\"d6a86fc7acef42def7068c2dcd49e2f3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\"><br></span></p><p data-lake-id=\"fbe9ed9798d7c307c904b7b63472fd26\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"89141de8072a4acb9082006466fd5c9e\" id=\"RZLu1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">08 | 事务到底是隔离的还是不隔离的？</h1><p data-lake-id=\"55f5c65e23c438c76ad3b7b3a893dabe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">undolog：实现了MVCC</p><p data-lake-id=\"285790817a1411a1236f9f75d65a0afd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">数据可见性，锁是实现隔离级别。</p><p data-lake-id=\"98bd66d341bedc627844a0dc37508c31\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">查询和更新是当前读还是一致性读。</p><p data-lake-id=\"d5b9564e969d1a32102a40f949706ac6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一致性读：可重复读隔离级别下，读取数据时，会根据row trx_id找到是否能读到当前值，不在的话会根据redo log往前找。</p><p data-lake-id=\"cb4c6da12dd4e8466667c81e6a1c0808\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当前读：操作数据都是要读当前。可重复读隔离级别下，如果需要更新数据，只能拿最新的数据更新，这个时候虽然别的事务还没有提交，但还是能看到的。</p><p data-lake-id=\"b4e6d940ce7f6a6013d76bcb589d403e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>undolog 大小。共享表空间</span></p><p data-lake-id=\"43651ef666341707130c02c340b759b2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"df0069070e5be36ed6618f6d3d3dd3ce\" id=\"0r9jz\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\"><span style=\"color: #353535;\">09 | 普通索引和唯一索引，应该怎么选择？</span></h1><p data-lake-id=\"158ddea68e9e069242c818ab06afb213\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #353535;\"><br></span></p><p data-lake-id=\"211e4e56eef8b87b091713ce5d901aa9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"52d53be3df53a441a65f048237d19506\" id=\"hC6sk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">12 | 为什么我的MySQL会“抖”一下？</h1><p data-lake-id=\"26131aa0ee7e40f3f3adad8d4bfd1672\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">线上配置：</p><p data-lake-id=\"7b581cd5122af43702f50788837bbf6e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb_flush_neighbors：1</p><p data-lake-id=\"8c420638cac3ea077e2cbc973beb9ed4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb_io_capacity：5000</p><p data-lake-id=\"9e40edd200513692cc39f806bfd026b4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb_max_dirty_pages_pct：75</p><p data-lake-id=\"720342b774bd28eb13652a3495ef528a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e1ab36db1d83a97e9d8c778ed0af9290\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为什么会抖一下：</p><p data-lake-id=\"7e5cd62064d84b2b4eb8dfb570c42f04\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">1.redo log满了。redo log中的checkpoint前移动，需要刷脏页。（应该避免，因为此时数据库服务已经阻塞，需要控制刷脏页频率）&nbsp; 一般不会设置，不同百分比的时候不一样。</p><p data-lake-id=\"8ed2ac9ca781453f92ad48f0699ff8c7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">2.内存不足，需要淘汰脏页。buffer_pool&nbsp; &nbsp;&nbsp;</p><p data-lake-id=\"4ff4c0dac44a6328d7292fc2cee879e3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">3.日常刷脏页。对应MySQL的配置。</p><p data-lake-id=\"42aefdbff46502e6c9a831d0f44c641b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">4.MySQL正常关闭。</p><p data-lake-id=\"50023b5f39e19937a1aeec3e106f756c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"62f4acf1ec83c6d3719624cf1194bd26\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">正常使用的数据库，buffer一般未被使用的情况比较少，如果一个查询，需要的内存比较大，查询需要从磁盘读取很多页的时候，也要将脏页刷到磁盘中。</p><p data-lake-id=\"747e5e6f85fd15548292788ea532ca32\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可用的页，刷脏页，写到磁盘，redolog checkpoint 往前走，free list flush list lru list</p><p data-lake-id=\"2b451fac09952b7684225e98a8075b71\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7ecd625518502a9fd66a1c40abf25117\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">脏页刷盘参考：一个是脏页比例，一个是redo log写盘速度。</p><p data-lake-id=\"1a7c9a59c08809e229c22cf467bba54c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bd74aa96a853aac85d9db76e391a85a1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果高配机器redo log设置比较小的话：redo log很容易被写满，就会导致经常要因为redo log满了而刷盘。表现为：磁盘压力很小，但是数据库出现间歇性的性能下跌</p><p data-lake-id=\"aecb2feb1adff09406b386836f8a2004\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c2916afe041f15cac720aa9cea1c4577\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"64cc4f1218fa844e6e45b6f360a24fee\" id=\"WyU22\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">13 | 为什么表数据删掉一半，表文件大小不变？</h1><p data-lake-id=\"5ac52c23fc425a725ce324731681ab80\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">：怎么正确的回收表空间</p><p data-lake-id=\"c0991732e97f60d9b7374f2991c36db6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">innodb_file_per_table：1 默认值</p><p data-lake-id=\"f408b969a75c6b6fa5785d29ba38add1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">删除整个表数据会删除，但是删除表中的部分数据，空间是怎么回收的。</p><p data-lake-id=\"bca0f067f9e143f5e02af029e0323b80\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f40e433742b65cee225641d7cde1ace0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">delete删除一条记录：将记录标记为已删除，之后可以复用。</p><p data-lake-id=\"b9b44b5a07adff24e2e5d069883f871a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">delete删除多条记录：如果整个页被删除，则整页都被标记为可复用。相邻的两页使用率低，会合并。但空间均不会被释放。同理：插入数据，如果当前页已满，肯定会开启新页，也会造成数据空洞。</p><p data-lake-id=\"46e11bf43d9cfa7bf39b663d7f3f9290\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e719bc90aa2deeb7aa7a5f43921570f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">压缩空间：alter table A engine=InnoDB。5.5之前不要用，会阻塞DML。5.6版本之后：Online DDL（先建新表，并将旧表的更新写在一个文件中，新表搞好之后，再读取文件中的更新。<span style=\"color: #F5222D;\"><strong>会有很短时间的MDL写锁</strong></span>）</p><p data-lake-id=\"e6f42bd63af351d7c95270be01681f4b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c53b425bc0a55edd0ac41014aa75ab4b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #F5222D;\">DDL过程如果是Online的，就一定是inplace的？</span></p><p data-lake-id=\"ed111d028733550e405ebf6b7d4122e2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #F5222D;\"><br></span></p><h1 data-lake-id=\"6e93ae7eaebb9ffddcfad4f9afb3c62b\" id=\"Lvqoc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">14 | count(*)这么慢，我该怎么办？</h1><p data-lake-id=\"e5c86cdc186440fd1ca1ef662b279097\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9da0435a758167cac35b7cef0237f4e8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">不加where条件：</p><p data-lake-id=\"eedf98118eba7896425dfee7dd3afcba\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">MyISAM引擎：把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高；</p><p data-lake-id=\"bafad76b02dfe776030121cff4e5f0be\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">InnoDB引擎：数据一行一行地从引擎里面读出来，然后累积计数。</p><p data-lake-id=\"06a58f8c6737e16adc985c30da1737c4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">show table status：不准确。</p><p data-lake-id=\"c510a2932a8e7f96298a149f5e2c27a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cf1b7d447e07e3c452ae15a1d330bdec\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">加where条件：</p><p data-lake-id=\"3c85d36a091ebe56b330290be86ad5ea\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">InnoDB引擎：选择从引擎读</p><p data-lake-id=\"517eb42488dd23793abed52ff7c3efa3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e7379389026771c1d4e2d65c81b47a6d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">效率排序：count(字段)&lt;count(主键id)&lt;count(1)≈count(*)</p><p data-lake-id=\"633c8cb56b2c9894102c221ce0822761\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">count(*)：特殊处理过，因为不会为null，server会按行累计。</p><p data-lake-id=\"2bb0ede93cb1d66cc1d8339f62ef9a0b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d94d1e72969830a9b863aa61b8c7f87d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">count(1)：InnoDB引擎遍历整张表，但不取值。server层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加。</p><p data-lake-id=\"bb5f0a002d4f5324b9766e8740ac7e12\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">count(主键id)：InnoDB引擎会遍历整张表，把每一行的id值都取出来，返回给server层。server层拿到id后，判断是不可能为空的，就按行累加。</p><p data-lake-id=\"2983383f8cb8d9c4507aea10687b0549\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">count(字段)：根据是否为not null进行判断。</p><p data-lake-id=\"bd6d9b6581aa8f2c51eee1117ebef8a5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"c26f72b24716e99ac1406940f815a254\" id=\"EAyss\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">15 | 答疑文章（一）：日志和索引相关问题</h1><p data-lake-id=\"4a04b78ed5fe2867d7fb26654af668d4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">日志相关：</p><p data-lake-id=\"897fc644bb6290ccdc17843987408154\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">1.两阶段提交不同瞬间MySQL异常重启怎么保证数据完整性：</p><p class=\"\" data-lake-id=\"022b2fea6dcf28ca385eca8f92ff93ee\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">测试</p><p data-lake-id=\"9540e44ea6eb1a1dd3c0d6a2d56dff28\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"04bf67ebbff0ff8ae12eb2397c4c4ddb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 data-lake-id=\"fc0acd0593450ef121e028ef526cac21\" id=\"GM6Os\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">16 | “order by”是怎么工作的？</h1><h2 data-lake-id=\"dd39dee8bea85419f3e1788a4bb7af88\" id=\"sk0zO\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">全字段排序</h2><p data-lake-id=\"22932640e2bb9ea8fc8ac418ad608de7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">排序过程对字符串做了“紧凑”处理。即使name字段的定义是varchar(16)，在排序过程中还是要按照实际长度来分配空间的。</p><p data-lake-id=\"94e6e0cdcb001422951effbc1883955b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c4d75bbe5b47a17947cb9863989e0483\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4ebf16cd4bf0c010fd5356983464fc8b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">max_length_for_sort_data</p><h2 data-lake-id=\"da73b7d1dd5064c6249dfb120df976ab\" id=\"sbCzu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">&nbsp;rowid排序</h2><p data-lake-id=\"d7c965dc26b36e1d87984a9546da01ee\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"09df46f59fbc3242c2f80214a07bc754\"><span><br /></span><br /></p><p data-lake-id=\"c8530503ee8282c6cee92196d0f7d2a5\"><br /></p><h1 data-lake-id=\"0b56185ceff7253f7c9e1960dee68411\" id=\"wCANo\">01 | 基础架构：一条SQL查询语句是如何执行的？</h1><p data-lake-id=\"7bb2a84f8f276da7c6ee08e8a7220fa2\"><br /></p><p data-lake-id=\"bf5107179b54afa2760002ac3aab1f41\">配置：</p><p data-lake-id=\"f168e6f1a414e9337d812208fe3eb20e\">wait_timeout：控制Sleep连接保持时间。线上未配置，默认8小时，</p><h4 data-lake-id=\"534e68c6168bd2e4c7790cc1847d619d\" id=\"r6QNN\">SQL执行步骤</h4><p data-lake-id=\"1949b95b5e970debd99d2483b227b4b7\">客户端-连接器（管理连接、权限验证）-查询缓存（命中则直接返回，基本没啥用）-分析器（词法分析、语法分析，语法错误在这就能看到了）-优化器（执行计划生成、索引选择）-存储引擎（存储数据、提供读写接口）</p><h4 data-lake-id=\"4c5b62be2a54771639e2b921ccd91a90\" id=\"sDnON\">server层</h4><p data-lake-id=\"fbf0b48d21f7809618db53e5e9bfe9a6\">连接器、查询缓存、分析器、优化器、执行器等，涵盖MySQL的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。</p><h4 data-lake-id=\"98dc54119c5f566ea828bd6c44cd39d0\" id=\"WeaSU\">存储引擎</h4><p data-lake-id=\"21e0dfd7caae90b55504b22d68b8ad7a\">负责数据的存储和提取。</p><p data-lake-id=\"50a48f063550b4f6873121218b94cf97\"><br /></p><h3 data-lake-id=\"b595e982a44b116803d08417e7eab9c7\" id=\"lwsZV\">连接器</h3><p data-lake-id=\"45be6d3b6d599ff6d0478a20b6665fff\">Sleep：表示是空闲连接。</p><p data-lake-id=\"da1cee222c74e1b4f321be1b3d6303fd\"><br /></p><p data-lake-id=\"f4f46b202aca08eeec5956d39149e37b\">数据库长连接和短连接：</p><p data-lake-id=\"abdf120308d2154de73fc628629eaeae\">长连接是连接成功后，如果客户端持续有请求，则一直使用同一个连接。优点：减少建立连接的动作，<span style=\"color: #F5222D;\">尽量使用</span></p><p data-lake-id=\"20b4ef7430d5dece8e75f93b2bd38c6a\">短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。</p><p data-lake-id=\"2e8d3d28e4a61cf8d5017f24e21da611\"><br /></p><p data-lake-id=\"8f733532bd6b5b8762d43bd842df6e2a\">全部使用长连接问题：可能MySQL占用内存会涨的很快，因为MySQL在执行过程中临时使用的内存是管理在连接对象里面的，<span style=\"color: #FF0000;\">会在连接断开才释放</span>，如果长连接积累，会导致内存占用较大。</p><p data-lake-id=\"0e761b09d4687ea16c0e90f99a134d44\">解决办法：定期断开长连接；5.7版本，执行比较大的操作的后，mysql_reset_connection来重新初始化连接资源，恢复连接到刚刚创建时的状态。miproxy连接数太多会自己断开</p><p data-lake-id=\"a7cb8762369e0fab31c2fd8707faf16e\"><br /></p><p data-lake-id=\"1791da3a924b4eb71b43b467b3c5caf4\">内存：操作系统10G，应用8G，</p><p data-lake-id=\"477f6bdcd007a14a70e1f7f7f6f66c3a\">线程级别的内存占用，</p><p data-lake-id=\"7ce558b32931212364eb449afdbd5661\">一个连接占多大，tcp占1M，文件系统描述符。</p><p data-lake-id=\"2a4c90862f1abba1182ec10716b9f8a2\"><br /></p><p data-lake-id=\"4db9e9df2b441ce3cbc987838e78bdd5\">为啥会用swap内存，</p><p data-lake-id=\"e41cb684b2bbc077f5d694f87405a539\">操作系统配置：是否使用swap    cpu结构有关 对称一致访问：每个核心访问最近的32G内存最快，开了的话，cpu0访问32G，这个进程用了32G就会用swap分区。 smp  numa  </p><h3 data-lake-id=\"9166c015860f59a2dd19f67b87294108\" id=\"bcd2U\">查询缓存</h3><p data-lake-id=\"214394ad1477a73c4f82157752c9e72d\">基本没用了</p><h3 data-lake-id=\"58663b1213246aee68eb274355e9ba82\" id=\"MEGbK\">分析器</h3><p data-lake-id=\"5bb9493298f0988a87449d159828ee90\">词法分析：识别关键字，以及表名之类。</p><p data-lake-id=\"c3341b037fb6ccfcd825c5ee0926c5b1\">语法分析：根据语法规则判断语法是否错误。</p><h3 data-lake-id=\"6f3c9bb1a9e52300b0b750d6988c3cd5\" id=\"VTPqF\">优化器</h3><p data-lake-id=\"c2e477beb112ed84f6b57f54db0c9c1e\">索引顺序选择，多表join顺序等。</p><h3 data-lake-id=\"1cc98e337b251ebcb003eec3c6e57fbe\" id=\"JIta5\">执行器</h3><p data-lake-id=\"c6f054207f95e340dea5002104f970b9\">执行前判断对表有没有相应权限。（没分析完词法，不知道是哪张表）</p><p data-lake-id=\"fee06cd25379f72e6775e07f0c2b54fa\"><br /></p><p data-lake-id=\"8309234cdf3cb01584a30772ed4aa6e4\">问题：</p><p data-lake-id=\"a4ae520c821c2fcb79949e3099f21569\">1.Sleep连接是不是杀了一直没影响</p><p data-lake-id=\"3ee656bbaeafe63c2cf7e0fd7f23e3f8\">2.miproxy对连接的管理：长短连接，长连接的维护。<em>功能怎么实现的，</em></p><p data-lake-id=\"fe81e43dcb74e3902d1203a861c3b4a9\">3.MySQL内存的使用。（innodb_buffer_size_pool之外的内存）。</p><p data-lake-id=\"c4612bed1626101d196cbe01e1216f76\">4.数据库权限和表权限验证时间不一样</p><p data-lake-id=\"e99130e26bbb8ed869fd6be3617a683d\"><br /></p><h1 data-lake-id=\"13b9da6d1743e05c19901b67dbb04756\" id=\"zqKmF\">02 | 日志系统：一条SQL更新语句是如何执行的？</h1><p data-lake-id=\"e09b342fc25f964aebc020592077635f\">线上配置：</p><p data-lake-id=\"cb4a429bd558985f7865d364c202534b\">innodb_flush_log_at_trx_commit：为1时保证每次事务的redo log都会持久化到磁盘。</p><p data-lake-id=\"625be067535afe140dfd15b572ec0e07\"><span style=\"color: #353535;\">sync_binlog：为1时保证每次事务的binlog都持久化到磁盘。</span></p><p data-lake-id=\"9fa1bc3b64c0a409a8b4eb4cb63c38a8\"><br /></p><p data-lake-id=\"50c9fb1b1bb7d379f95f821f22e070a2\">更新流程：两阶段提交，涉及和binlog</p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A3%2C%22cols%22%3A6%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20720px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3Eredo%20log%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%B1%82%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E7%89%A9%E7%90%86%E6%97%A5%E5%BF%97%EF%BC%88%E8%AE%B0%E5%BD%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E6%95%B0%E6%8D%AE%E9%A1%B5%E4%B8%8A%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E4%BF%AE%E6%94%B9%EF%BC%89%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E5%A4%A7%E5%B0%8F%E5%9B%BA%E5%AE%9A%EF%BC%8C%E5%BE%AA%E7%8E%AF%E5%86%99%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3Ebinlog%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3Eserver%E5%B1%82%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E9%80%BB%E8%BE%91%E6%97%A5%E5%BF%97%EF%BC%88%E8%AE%B0%E5%BD%95%E5%8E%9F%E5%A7%8B%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%AF%B9%E6%9F%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E4%BF%AE%E6%94%B9%EF%BC%89%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E8%BF%BD%E5%8A%A0%E5%86%99%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22margin%22%3Afalse%2C%22id%22%3A%22uWhfa%22%7D\"></card><p data-lake-id=\"ad3723db29233763eb7432e7497310bd\"><br /></p><p data-lake-id=\"60f4d70821703ee7dae0a44e996fc9d2\">redo log：保证了MySQL crash-safe能力。记录更新时，先把记录写到redo log并更新内存。</p><p data-lake-id=\"394158331bafbb331681d31ab3e1f441\">binlog：。。，</p><p data-lake-id=\"f15eecbe3da39b026dfa37cf70708db3\">crash-safe：有了redo-log，可以保证数据库异常重启时，从redo log读取后写入内存再写入磁盘，保证数据部丢失。</p><p data-lake-id=\"abb17a1986df12bd3d11a0c30be593ad\"><br /></p><p data-lake-id=\"97d6b050c1ab868e49244203269d0dff\">两阶段提交：</p><p data-lake-id=\"2d7976b0cb786f3684336883632a5ed6\">更新写入到内存后，redolog处于prapare阶段，然后写binlog，再调用引擎的提交事务接口，将redolog改成提交状态。</p><p data-lake-id=\"8c4996cd369596d22ba0f5d6389ada95\">server是作为一个协调者。innodb只知道干啥。发起commit时候，innodb redo  write </p><p data-lake-id=\"7a7ace15f7469918714e907ea27a841c\">innodb没完成不能马上写磁盘。</p><p data-lake-id=\"13b8b0129d6033cc7873bc3ede9d3303\"><br /></p><p data-lake-id=\"aa3dc8b2a742e9809436c9347dbe2afb\">MySQL磁盘满，会休眠，磁盘满。innodb队列变长了，可能都建立连接不成功：gdbc建立连接会show 变量，要不建立连接不成功，要不就连接数暴涨。</p><p data-lake-id=\"eab530a1d3c1da3a5bf739ac0be53dc2\">原因：如果在写完binlog到提交事务之间MySQL crash的问题。或者从备份恢复的时候。</p><p data-lake-id=\"4603d8bf946029bb1e41ac932b52a216\"><br /></p><p data-lake-id=\"c048a640f8e59bb0b6ec6209b9c9cbd4\">问题：</p><p data-lake-id=\"1426cc579c7e9c13301cc841d9106ced\">备份恢复apply log是在：将redo log的数据写入磁盘吗？</p><p data-lake-id=\"ea5869925082c68190bcba9091eee5d2\"><br /></p><h1 data-lake-id=\"8ec526c3a6de86a1a8ffa1d660e2edbb\" id=\"1RtAK\">03 | 事务隔离：为什么你改了我还看不见？</h1><p data-lake-id=\"40d24f3ac90909d06d30f2196fdd343c\">线上配置：</p><p data-lake-id=\"6b3f65f8569576459088d3c76c227341\"><br /></p><p data-lake-id=\"8394f011313092ed4fadcf9f9fe9d260\">事务ACID：Atomicity、Consistency、Isolation、Durability（原子性、一致性、隔离性、持久性）</p><p data-lake-id=\"40737a18ee3a89e8fd00267a34ee31b9\"><br /></p><p data-lake-id=\"cdd33e1f72f63f826f2d07464f8aeb04\">多个事务同时执行会出现的问题：脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）</p><p data-lake-id=\"7a9a4d238425d61693cc0f0fdc6ec57f\">隔离级别：</p><p data-lake-id=\"f0a16c943ee4697b58de3daf02c6a250\"><span>读未提交：可以看到未提交的事务</span></p><p data-lake-id=\"81c22f90413212f1611a73fb5f9e4121\">读提交：只有提交的事务才会被看到</p><p data-lake-id=\"5fe34b4648ac2ed12f00e613f4f4ec68\">可重复读：一个事务执行过程中看到的数据，总是和启动时看到的一样。不管其他的事务有没有启动。</p><p data-lake-id=\"37060ec226684a7a35a6c4d77427a072\">串行化：顾名思义</p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A5%2C%22cols%22%3A5%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20720px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E8%84%8F%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E5%B9%BB%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E8%A7%86%E5%9B%BE%E5%BC%80%E5%90%AF%E6%97%B6%E9%97%B4%EF%BC%88%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%EF%BC%89%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E8%AF%BB%E6%9C%AA%E6%8F%90%E4%BA%A4%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9E%E8%AE%B0%E5%BD%95%E6%9C%80%E6%96%B0%E5%80%BC%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E8%AF%BB%E6%8F%90%E4%BA%A4%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3ESQL%E6%89%A7%E8%A1%8C%E6%97%B6%E5%88%9B%E5%BB%BA%EF%BC%8C%E6%AD%A4%E6%97%B6%E6%9C%89%E5%88%AB%E7%9A%84%E4%BA%8B%E5%8A%A1%E4%BF%AE%E6%94%B9%E8%AE%B0%E5%BD%95%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E4%BA%8B%E5%8A%A1%E5%90%AF%E5%8A%A8%E6%97%B6%E5%88%9B%E5%BB%BA%EF%BC%8C%E4%BA%8B%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%90%8E%E7%9A%84%E6%94%B9%E5%8A%A8%E9%83%BD%E7%9C%8B%E4%B8%8D%E5%88%B0%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E4%B8%B2%E8%A1%8C%E5%8C%96%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E6%AF%8F%E6%AC%A1%E9%83%BD%E5%8A%A0%E9%94%81%EF%BC%8C%E9%81%BF%E5%85%8D%E5%B9%B6%E8%A1%8C%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22margin%22%3Afalse%2C%22id%22%3A%22JiUBB%22%7D\"></card><p data-lake-id=\"0661447e01d6eed4289ae72d6c0d3ff7\"><br /></p><p data-lake-id=\"45a91b68c50b3d79b4a44780c284aa27\">幻读的原因：update等操作的当前读，需要读取当前的数据，这个时候就会读到最新的更新数据了。表现为：单独select没有值，然后insert或者update，发现值已经有了。</p><p data-lake-id=\"63cde8e1f5353f3b88e0bd13857cd4be\"><br /></p><p data-lake-id=\"b0e85dd19c2bf3a3e51bbf5c26bbe64d\">MVCC：undo log实现</p><p data-lake-id=\"2b8be3ff5f4e71d86b1df0f037f2142f\"><br /></p><h1 data-lake-id=\"e524bd39349805cdee0e20650a13d3f6\" id=\"a1jJq\">04 | 深入浅出索引（上）</h1><p data-lake-id=\"37e8dc35289f4092238bb9958e4ad609\">innodb索引类型：</p><p data-lake-id=\"1ef7f4eadb75191261427bf9624241f5\">主键索引和：根据叶子节点的内容</p><p data-lake-id=\"d20d363dc4900267f656f3bfd4f87ca7\">主键索引：叶子节点内容是整行数据</p><p data-lake-id=\"c48388f16161e3a13c0976e71f372db3\">非主键索引：叶子节点内容是主键的值。也叫二级索引。使用二级索引，如果想获得整列的值，需要先从索引找到主键值，然后再根据主键查，需要回表。</p><p data-lake-id=\"43dddc805a422a7923fb8d438c43aa22\"><br /></p><p data-lake-id=\"f669c605b34dea5bd1a31ca47ec90192\">索引维护：</p><p data-lake-id=\"0683d98216debb18bccd20b9626641f1\">分裂：某个数据页满了，新插入数据的时候。</p><p data-lake-id=\"a1967aecb49cdeebf14416e00fe96a88\">合并：相邻两个页删除了数据，利用率很低的时候。</p><p data-lake-id=\"e68a94668a8045e951132175d011d8fe\">ps：自增主键是不会分裂的，因为一直是增长的。</p><p data-lake-id=\"ee97b4b336db28351142c6fe08f51dff\"><br /></p><p data-lake-id=\"0429ed88e2df15fdfdd6b9a09dbdd0d5\">问题：</p><p data-lake-id=\"29302ad31064a2257ad1703c8492f1c9\">1.同时插入较多数据时，索引维护是不是比较占资源。</p><p data-lake-id=\"450058682d2be3e264458c423a05bcdd\">2.业务字段做主键：只有一个索引；该索引必须是唯一索引？</p><h1 data-lake-id=\"94245f01f949656c4fc6088deb243dee\" id=\"lVAwq\">05 | 深入浅出索引（下）</h1><p data-lake-id=\"09a8cb2d23346d984a4de922e36d6936\"><br /></p><p data-lake-id=\"330c7e3823af62513a90fc1eb1b960a9\">避免回表的方式：</p><p data-lake-id=\"bd1ebeee99c266daefb1761b6c6c8053\">覆盖索引（组合索引）：</p><p data-lake-id=\"c145c511d0ff39c3eafd212f6d5bcc9c\">索引使用注意：</p><p data-lake-id=\"e053e40687b4b04e0180614df8fa7977\">1.最左前缀原则：不管是对于组合索引，还是对于</p><p data-lake-id=\"6eeba68ed3cdd5157ae6f6e45b8bfabb\">2.索引下推：MySQL5.6优化，多个and条件的时候，对索引中的字段先过滤，减少回表次数。</p><p data-lake-id=\"f7323fa7eb731d89d01023614c996604\">2.索引列使用函数会导致索引失效</p><p data-lake-id=\"a9dc71d5cba630f549d4c5fab944e794\"><br /></p><h1 data-lake-id=\"f5dd0a2d8467f4f1ee030a8b52269673\" id=\"DHvEC\">06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？</h1><p data-lake-id=\"f3b70eb39dbdd7d84ced28087f1bfb57\"><br /></p><p data-lake-id=\"5d915541fb5ea13289bc0c61f66a6e3d\">加锁范围分类：全局锁、表级锁和行锁。</p><p data-lake-id=\"f3f03256599904abbde2d2f50f94fc1b\">全局锁</p><p data-lake-id=\"a150252a34700120b791f6d0faea7134\">加全局锁方法：<span style=\"color: #353535;\">Flush tables with read lock (FTWRL)。使用场景：全库逻辑备份（innodb已经不需要了，可以使用--single-transaction）</span></p><p data-lake-id=\"7ee87897632f4460ec41ee6f7efbe167\">表级锁</p><p data-lake-id=\"7d87807c2212754fb62d18d3072df050\">分为表锁和元数据锁（MDL）</p><p data-lake-id=\"15c284c66e72715f6ae4b9c20d3c254e\">表锁：lock tables … read/write。</p><p data-lake-id=\"58f319101a719cd0ce96fadda2f30a02\">元数据锁：当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。所以给小表加字段，如果读取较多的话，也会阻塞，会阻塞所有的查询和更新，如果客户端有重试机制，会导致该库线程打满。</p><p data-lake-id=\"3650c08df946eb044c9082938ef277e3\"><br /></p><p data-lake-id=\"5b75a60e4918dd11297da42090abda9a\"><span style=\"color: #353535;\">尽量使用FTWRL而不是set global read_only=1：</span></p><p data-lake-id=\"fddb447ba32068e041a3b3b7e26bc8ed\">1.read_only可能会用来判断是主库还是备库。</p><p data-lake-id=\"0c0ecee3c4724a67f854722799319a32\">2.<span style=\"color: #353535;\">FTWRL命令时，如果客户端异常断开，MySQL会自动释放，set global read_only会导致MySQL一直只读。</span></p><p data-lake-id=\"e9a1f346346d8a28901a669c6d970782\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"f5e65039ebf211a7158cd191f3821267\"><br /></p><h1 data-lake-id=\"5349ef04d15cd2d984f45ac8c20c4fb1\" id=\"QbuYh\">07 | 行锁功过：怎么减少行锁对性能的影响？</h1><p data-lake-id=\"231d31716f18ccd5e18afb8267a5cbc5\">线上配置：</p><p data-lake-id=\"189df8259445e7f254d6c12a1ad83c5e\">innodb_lock_wait_timeout：10</p><p data-lake-id=\"9739ed1c38f63344ac52f5a4dbbbf4ba\"><span style=\"color: #353535;\">innodb_deadlock_detect：on</span></p><p data-lake-id=\"963e5b248d51ac9609dc26fed4318cd1\">两阶段锁协议：行锁在需要的时候才加上，但是在事务结束后才释放。所以要把可能影响并发的锁放在后面。</p><p data-lake-id=\"eca9d3c147d8bbd7a71835474cc6ae09\">死锁和死锁检测策略：</p><p data-lake-id=\"4d2b92d9a4e2da3bba70811765630299\">一直等待到超时：innodb_lock_wait_timeout：一直等待锁，直到超时。值不能太大，也不能太小。</p><p data-lake-id=\"08b8e559fe4d6cc40215e353b50c5fae\">死锁检测：<span style=\"color: #353535;\">发现死锁后，主动回滚死锁链条中的某偶一个事务，让其他事务执行。</span></p><p data-lake-id=\"ff11668c88783960caa9c17903e5b07c\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"558a5318a6979fd67b45719fbf7e580f\"><span style=\"color: #353535;\">问题：</span></p><p data-lake-id=\"c097e7296f0d3abc9c1009e39c0f158f\"><span style=\"color: #353535;\">死锁检测成本：每个新来的线程，都要要判断会不会由于自己的加入导致死锁，如果同时更新同一行的线程很多的时候。CPU消耗。</span></p><p data-lake-id=\"dcba0155b90c8446f6263693385a99d5\"><span style=\"color: #353535;\">原理怎么做的。</span></p><p data-lake-id=\"d6a86fc7acef42def7068c2dcd49e2f3\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"fbe9ed9798d7c307c904b7b63472fd26\"><br /></p><h1 data-lake-id=\"89141de8072a4acb9082006466fd5c9e\" id=\"RZLu1\">08 | 事务到底是隔离的还是不隔离的？</h1><p data-lake-id=\"55f5c65e23c438c76ad3b7b3a893dabe\">undolog：实现了MVCC</p><p data-lake-id=\"285790817a1411a1236f9f75d65a0afd\">数据可见性，锁是实现隔离级别。</p><p data-lake-id=\"98bd66d341bedc627844a0dc37508c31\">查询和更新是当前读还是一致性读。</p><p data-lake-id=\"d5b9564e969d1a32102a40f949706ac6\">一致性读：可重复读隔离级别下，读取数据时，会根据row trx_id找到是否能读到当前值，不在的话会根据redo log往前找。</p><p data-lake-id=\"cb4c6da12dd4e8466667c81e6a1c0808\">当前读：操作数据都是要读当前。可重复读隔离级别下，如果需要更新数据，只能拿最新的数据更新，这个时候虽然别的事务还没有提交，但还是能看到的。</p><p data-lake-id=\"b4e6d940ce7f6a6013d76bcb589d403e\"><span>undolog 大小。共享表空间</span></p><p data-lake-id=\"43651ef666341707130c02c340b759b2\"><br /></p><h1 data-lake-id=\"df0069070e5be36ed6618f6d3d3dd3ce\" id=\"0r9jz\"><span style=\"color: #353535;\">09 | 普通索引和唯一索引，应该怎么选择？</span></h1><p data-lake-id=\"158ddea68e9e069242c818ab06afb213\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"211e4e56eef8b87b091713ce5d901aa9\"><br /></p><h1 data-lake-id=\"52d53be3df53a441a65f048237d19506\" id=\"hC6sk\">12 | 为什么我的MySQL会“抖”一下？</h1><p data-lake-id=\"26131aa0ee7e40f3f3adad8d4bfd1672\">线上配置：</p><p data-lake-id=\"7b581cd5122af43702f50788837bbf6e\">innodb_flush_neighbors：1</p><p data-lake-id=\"8c420638cac3ea077e2cbc973beb9ed4\">innodb_io_capacity：5000</p><p data-lake-id=\"9e40edd200513692cc39f806bfd026b4\">innodb_max_dirty_pages_pct：75</p><p data-lake-id=\"720342b774bd28eb13652a3495ef528a\"><br /></p><p data-lake-id=\"e1ab36db1d83a97e9d8c778ed0af9290\">为什么会抖一下：</p><p data-lake-id=\"7e5cd62064d84b2b4eb8dfb570c42f04\">1.redo log满了。redo log中的checkpoint前移动，需要刷脏页。（应该避免，因为此时数据库服务已经阻塞，需要控制刷脏页频率）  一般不会设置，不同百分比的时候不一样。</p><p data-lake-id=\"8ed2ac9ca781453f92ad48f0699ff8c7\">2.内存不足，需要淘汰脏页。buffer_pool    </p><p data-lake-id=\"4ff4c0dac44a6328d7292fc2cee879e3\">3.日常刷脏页。对应MySQL的配置。</p><p data-lake-id=\"42aefdbff46502e6c9a831d0f44c641b\">4.MySQL正常关闭。</p><p data-lake-id=\"50023b5f39e19937a1aeec3e106f756c\"><br /></p><p data-lake-id=\"62f4acf1ec83c6d3719624cf1194bd26\">正常使用的数据库，buffer一般未被使用的情况比较少，如果一个查询，需要的内存比较大，查询需要从磁盘读取很多页的时候，也要将脏页刷到磁盘中。</p><p data-lake-id=\"747e5e6f85fd15548292788ea532ca32\">可用的页，刷脏页，写到磁盘，redolog checkpoint 往前走，free list flush list lru list</p><p data-lake-id=\"2b451fac09952b7684225e98a8075b71\"><br /></p><p data-lake-id=\"7ecd625518502a9fd66a1c40abf25117\">脏页刷盘参考：一个是脏页比例，一个是redo log写盘速度。</p><p data-lake-id=\"1a7c9a59c08809e229c22cf467bba54c\"><br /></p><p data-lake-id=\"bd74aa96a853aac85d9db76e391a85a1\">如果高配机器redo log设置比较小的话：redo log很容易被写满，就会导致经常要因为redo log满了而刷盘。表现为：磁盘压力很小，但是数据库出现间歇性的性能下跌</p><p data-lake-id=\"aecb2feb1adff09406b386836f8a2004\"><br /></p><p data-lake-id=\"c2916afe041f15cac720aa9cea1c4577\"><br /></p><h1 data-lake-id=\"64cc4f1218fa844e6e45b6f360a24fee\" id=\"WyU22\">13 | 为什么表数据删掉一半，表文件大小不变？</h1><p data-lake-id=\"5ac52c23fc425a725ce324731681ab80\">：怎么正确的回收表空间</p><p data-lake-id=\"c0991732e97f60d9b7374f2991c36db6\">innodb_file_per_table：1 默认值</p><p data-lake-id=\"f408b969a75c6b6fa5785d29ba38add1\">删除整个表数据会删除，但是删除表中的部分数据，空间是怎么回收的。</p><p data-lake-id=\"bca0f067f9e143f5e02af029e0323b80\"><br /></p><p data-lake-id=\"f40e433742b65cee225641d7cde1ace0\">delete删除一条记录：将记录标记为已删除，之后可以复用。</p><p data-lake-id=\"b9b44b5a07adff24e2e5d069883f871a\">delete删除多条记录：如果整个页被删除，则整页都被标记为可复用。相邻的两页使用率低，会合并。但空间均不会被释放。同理：插入数据，如果当前页已满，肯定会开启新页，也会造成数据空洞。</p><p data-lake-id=\"46e11bf43d9cfa7bf39b663d7f3f9290\"><br /></p><p data-lake-id=\"e719bc90aa2deeb7aa7a5f43921570f2\">压缩空间：alter table A engine=InnoDB。5.5之前不要用，会阻塞DML。5.6版本之后：Online DDL（先建新表，并将旧表的更新写在一个文件中，新表搞好之后，再读取文件中的更新。<span style=\"color: #F5222D;\"><strong>会有很短时间的MDL写锁</strong></span>）</p><p data-lake-id=\"e6f42bd63af351d7c95270be01681f4b\"><br /></p><p data-lake-id=\"c53b425bc0a55edd0ac41014aa75ab4b\"><span style=\"color: #F5222D;\">DDL过程如果是Online的，就一定是inplace的？</span></p><p data-lake-id=\"ed111d028733550e405ebf6b7d4122e2\"><span style=\"color: #F5222D;\"><br /></span></p><h1 data-lake-id=\"6e93ae7eaebb9ffddcfad4f9afb3c62b\" id=\"Lvqoc\">14 | count(*)这么慢，我该怎么办？</h1><p data-lake-id=\"e5c86cdc186440fd1ca1ef662b279097\"><br /></p><p data-lake-id=\"9da0435a758167cac35b7cef0237f4e8\">不加where条件：</p><p data-lake-id=\"eedf98118eba7896425dfee7dd3afcba\">MyISAM引擎：把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高；</p><p data-lake-id=\"bafad76b02dfe776030121cff4e5f0be\">InnoDB引擎：数据一行一行地从引擎里面读出来，然后累积计数。</p><p data-lake-id=\"06a58f8c6737e16adc985c30da1737c4\">show table status：不准确。</p><p data-lake-id=\"c510a2932a8e7f96298a149f5e2c27a8\"><br /></p><p data-lake-id=\"cf1b7d447e07e3c452ae15a1d330bdec\">加where条件：</p><p data-lake-id=\"3c85d36a091ebe56b330290be86ad5ea\">InnoDB引擎：选择从引擎读</p><p data-lake-id=\"517eb42488dd23793abed52ff7c3efa3\"><br /></p><p data-lake-id=\"e7379389026771c1d4e2d65c81b47a6d\">效率排序：count(字段)&lt;count(主键id)&lt;count(1)≈count(*)</p><p data-lake-id=\"633c8cb56b2c9894102c221ce0822761\">count(*)：特殊处理过，因为不会为null，server会按行累计。</p><p data-lake-id=\"2bb0ede93cb1d66cc1d8339f62ef9a0b\"><br /></p><p data-lake-id=\"d94d1e72969830a9b863aa61b8c7f87d\">count(1)：InnoDB引擎遍历整张表，但不取值。server层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加。</p><p data-lake-id=\"bb5f0a002d4f5324b9766e8740ac7e12\">count(主键id)：InnoDB引擎会遍历整张表，把每一行的id值都取出来，返回给server层。server层拿到id后，判断是不可能为空的，就按行累加。</p><p data-lake-id=\"2983383f8cb8d9c4507aea10687b0549\">count(字段)：根据是否为not null进行判断。</p><p data-lake-id=\"bd6d9b6581aa8f2c51eee1117ebef8a5\"><br /></p><h1 data-lake-id=\"c26f72b24716e99ac1406940f815a254\" id=\"EAyss\">15 | 答疑文章（一）：日志和索引相关问题</h1><p data-lake-id=\"4a04b78ed5fe2867d7fb26654af668d4\">日志相关：</p><p data-lake-id=\"897fc644bb6290ccdc17843987408154\">1.两阶段提交不同瞬间MySQL异常重启怎么保证数据完整性：</p><p data-lake-id=\"022b2fea6dcf28ca385eca8f92ff93ee\">测试</p><p data-lake-id=\"9540e44ea6eb1a1dd3c0d6a2d56dff28\"><br /></p><p data-lake-id=\"04bf67ebbff0ff8ae12eb2397c4c4ddb\"><br /></p><h1 data-lake-id=\"fc0acd0593450ef121e028ef526cac21\" id=\"GM6Os\">16 | “order by”是怎么工作的？</h1><h2 data-lake-id=\"dd39dee8bea85419f3e1788a4bb7af88\" id=\"sk0zO\">全字段排序</h2><p data-lake-id=\"22932640e2bb9ea8fc8ac418ad608de7\">排序过程对字符串做了“紧凑”处理。即使name字段的定义是varchar(16)，在排序过程中还是要按照实际长度来分配空间的。</p><p data-lake-id=\"94e6e0cdcb001422951effbc1883955b\"><br /></p><p data-lake-id=\"c4d75bbe5b47a17947cb9863989e0483\"><br /></p><p data-lake-id=\"4ebf16cd4bf0c010fd5356983464fc8b\">max_length_for_sort_data</p><h2 data-lake-id=\"da73b7d1dd5064c6249dfb120df976ab\" id=\"sbCzu\"> rowid排序</h2><p data-lake-id=\"d7c965dc26b36e1d87984a9546da01ee\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"09df46f59fbc3242c2f80214a07bc754\"><span><br /></span><br /></p><p data-lake-id=\"c8530503ee8282c6cee92196d0f7d2a5\"><br /></p><h1 data-lake-id=\"0b56185ceff7253f7c9e1960dee68411\" id=\"wCANo\">01 | 基础架构：一条SQL查询语句是如何执行的？</h1><p data-lake-id=\"7bb2a84f8f276da7c6ee08e8a7220fa2\"><br /></p><p data-lake-id=\"bf5107179b54afa2760002ac3aab1f41\">配置：</p><p data-lake-id=\"f168e6f1a414e9337d812208fe3eb20e\">wait_timeout：控制Sleep连接保持时间。线上未配置，默认8小时，</p><h4 data-lake-id=\"534e68c6168bd2e4c7790cc1847d619d\" id=\"r6QNN\">SQL执行步骤</h4><p data-lake-id=\"1949b95b5e970debd99d2483b227b4b7\">客户端-连接器（管理连接、权限验证）-查询缓存（命中则直接返回，基本没啥用）-分析器（词法分析、语法分析，语法错误在这就能看到了）-优化器（执行计划生成、索引选择）-存储引擎（存储数据、提供读写接口）</p><h4 data-lake-id=\"4c5b62be2a54771639e2b921ccd91a90\" id=\"sDnON\">server层</h4><p data-lake-id=\"fbf0b48d21f7809618db53e5e9bfe9a6\">连接器、查询缓存、分析器、优化器、执行器等，涵盖MySQL的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。</p><h4 data-lake-id=\"98dc54119c5f566ea828bd6c44cd39d0\" id=\"WeaSU\">存储引擎</h4><p data-lake-id=\"21e0dfd7caae90b55504b22d68b8ad7a\">负责数据的存储和提取。</p><p data-lake-id=\"50a48f063550b4f6873121218b94cf97\"><br /></p><h3 data-lake-id=\"b595e982a44b116803d08417e7eab9c7\" id=\"lwsZV\">连接器</h3><p data-lake-id=\"45be6d3b6d599ff6d0478a20b6665fff\">Sleep：表示是空闲连接。</p><p data-lake-id=\"da1cee222c74e1b4f321be1b3d6303fd\"><br /></p><p data-lake-id=\"f4f46b202aca08eeec5956d39149e37b\">数据库长连接和短连接：</p><p data-lake-id=\"abdf120308d2154de73fc628629eaeae\">长连接是连接成功后，如果客户端持续有请求，则一直使用同一个连接。优点：减少建立连接的动作，<span style=\"color: #F5222D;\">尽量使用</span></p><p data-lake-id=\"20b4ef7430d5dece8e75f93b2bd38c6a\">短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。</p><p data-lake-id=\"2e8d3d28e4a61cf8d5017f24e21da611\"><br /></p><p data-lake-id=\"8f733532bd6b5b8762d43bd842df6e2a\">全部使用长连接问题：可能MySQL占用内存会涨的很快，因为MySQL在执行过程中临时使用的内存是管理在连接对象里面的，<span style=\"color: #FF0000;\">会在连接断开才释放</span>，如果长连接积累，会导致内存占用较大。</p><p data-lake-id=\"0e761b09d4687ea16c0e90f99a134d44\">解决办法：定期断开长连接；5.7版本，执行比较大的操作的后，mysql_reset_connection来重新初始化连接资源，恢复连接到刚刚创建时的状态。miproxy连接数太多会自己断开</p><p data-lake-id=\"a7cb8762369e0fab31c2fd8707faf16e\"><br /></p><p data-lake-id=\"1791da3a924b4eb71b43b467b3c5caf4\">内存：操作系统10G，应用8G，</p><p data-lake-id=\"477f6bdcd007a14a70e1f7f7f6f66c3a\">线程级别的内存占用，</p><p data-lake-id=\"7ce558b32931212364eb449afdbd5661\">一个连接占多大，tcp占1M，文件系统描述符。</p><p data-lake-id=\"2a4c90862f1abba1182ec10716b9f8a2\"><br /></p><p data-lake-id=\"4db9e9df2b441ce3cbc987838e78bdd5\">为啥会用swap内存，</p><p data-lake-id=\"e41cb684b2bbc077f5d694f87405a539\">操作系统配置：是否使用swap    cpu结构有关 对称一致访问：每个核心访问最近的32G内存最快，开了的话，cpu0访问32G，这个进程用了32G就会用swap分区。 smp  numa  </p><h3 data-lake-id=\"9166c015860f59a2dd19f67b87294108\" id=\"bcd2U\">查询缓存</h3><p data-lake-id=\"214394ad1477a73c4f82157752c9e72d\">基本没用了</p><h3 data-lake-id=\"58663b1213246aee68eb274355e9ba82\" id=\"MEGbK\">分析器</h3><p data-lake-id=\"5bb9493298f0988a87449d159828ee90\">词法分析：识别关键字，以及表名之类。</p><p data-lake-id=\"c3341b037fb6ccfcd825c5ee0926c5b1\">语法分析：根据语法规则判断语法是否错误。</p><h3 data-lake-id=\"6f3c9bb1a9e52300b0b750d6988c3cd5\" id=\"VTPqF\">优化器</h3><p data-lake-id=\"c2e477beb112ed84f6b57f54db0c9c1e\">索引顺序选择，多表join顺序等。</p><h3 data-lake-id=\"1cc98e337b251ebcb003eec3c6e57fbe\" id=\"JIta5\">执行器</h3><p data-lake-id=\"c6f054207f95e340dea5002104f970b9\">执行前判断对表有没有相应权限。（没分析完词法，不知道是哪张表）</p><p data-lake-id=\"fee06cd25379f72e6775e07f0c2b54fa\"><br /></p><p data-lake-id=\"8309234cdf3cb01584a30772ed4aa6e4\">问题：</p><p data-lake-id=\"a4ae520c821c2fcb79949e3099f21569\">1.Sleep连接是不是杀了一直没影响</p><p data-lake-id=\"3ee656bbaeafe63c2cf7e0fd7f23e3f8\">2.miproxy对连接的管理：长短连接，长连接的维护。<em>功能怎么实现的，</em></p><p data-lake-id=\"fe81e43dcb74e3902d1203a861c3b4a9\">3.MySQL内存的使用。（innodb_buffer_size_pool之外的内存）。</p><p data-lake-id=\"c4612bed1626101d196cbe01e1216f76\">4.数据库权限和表权限验证时间不一样</p><p data-lake-id=\"e99130e26bbb8ed869fd6be3617a683d\"><br /></p><h1 data-lake-id=\"13b9da6d1743e05c19901b67dbb04756\" id=\"zqKmF\">02 | 日志系统：一条SQL更新语句是如何执行的？</h1><p data-lake-id=\"e09b342fc25f964aebc020592077635f\">线上配置：</p><p data-lake-id=\"cb4a429bd558985f7865d364c202534b\">innodb_flush_log_at_trx_commit：为1时保证每次事务的redo log都会持久化到磁盘。</p><p data-lake-id=\"625be067535afe140dfd15b572ec0e07\"><span style=\"color: #353535;\">sync_binlog：为1时保证每次事务的binlog都持久化到磁盘。</span></p><p data-lake-id=\"9fa1bc3b64c0a409a8b4eb4cb63c38a8\"><br /></p><p data-lake-id=\"50c9fb1b1bb7d379f95f821f22e070a2\">更新流程：两阶段提交，涉及和binlog</p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A3%2C%22cols%22%3A6%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20720px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22120%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3Eredo%20log%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%B1%82%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E7%89%A9%E7%90%86%E6%97%A5%E5%BF%97%EF%BC%88%E8%AE%B0%E5%BD%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E6%95%B0%E6%8D%AE%E9%A1%B5%E4%B8%8A%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E4%BF%AE%E6%94%B9%EF%BC%89%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E5%A4%A7%E5%B0%8F%E5%9B%BA%E5%AE%9A%EF%BC%8C%E5%BE%AA%E7%8E%AF%E5%86%99%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3Ebinlog%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3Eserver%E5%B1%82%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E9%80%BB%E8%BE%91%E6%97%A5%E5%BF%97%EF%BC%88%E8%AE%B0%E5%BD%95%E5%8E%9F%E5%A7%8B%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%AF%B9%E6%9F%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E4%BF%AE%E6%94%B9%EF%BC%89%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E8%BF%BD%E5%8A%A0%E5%86%99%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22margin%22%3Afalse%2C%22id%22%3A%22uWhfa%22%7D\"></card><p data-lake-id=\"ad3723db29233763eb7432e7497310bd\"><br /></p><p data-lake-id=\"60f4d70821703ee7dae0a44e996fc9d2\">redo log：保证了MySQL crash-safe能力。记录更新时，先把记录写到redo log并更新内存。</p><p data-lake-id=\"394158331bafbb331681d31ab3e1f441\">binlog：。。，</p><p data-lake-id=\"f15eecbe3da39b026dfa37cf70708db3\">crash-safe：有了redo-log，可以保证数据库异常重启时，从redo log读取后写入内存再写入磁盘，保证数据部丢失。</p><p data-lake-id=\"abb17a1986df12bd3d11a0c30be593ad\"><br /></p><p data-lake-id=\"97d6b050c1ab868e49244203269d0dff\">两阶段提交：</p><p data-lake-id=\"2d7976b0cb786f3684336883632a5ed6\">更新写入到内存后，redolog处于prapare阶段，然后写binlog，再调用引擎的提交事务接口，将redolog改成提交状态。</p><p data-lake-id=\"8c4996cd369596d22ba0f5d6389ada95\">server是作为一个协调者。innodb只知道干啥。发起commit时候，innodb redo  write </p><p data-lake-id=\"7a7ace15f7469918714e907ea27a841c\">innodb没完成不能马上写磁盘。</p><p data-lake-id=\"13b8b0129d6033cc7873bc3ede9d3303\"><br /></p><p data-lake-id=\"aa3dc8b2a742e9809436c9347dbe2afb\">MySQL磁盘满，会休眠，磁盘满。innodb队列变长了，可能都建立连接不成功：gdbc建立连接会show 变量，要不建立连接不成功，要不就连接数暴涨。</p><p data-lake-id=\"eab530a1d3c1da3a5bf739ac0be53dc2\">原因：如果在写完binlog到提交事务之间MySQL crash的问题。或者从备份恢复的时候。</p><p data-lake-id=\"4603d8bf946029bb1e41ac932b52a216\"><br /></p><p data-lake-id=\"c048a640f8e59bb0b6ec6209b9c9cbd4\">问题：</p><p data-lake-id=\"1426cc579c7e9c13301cc841d9106ced\">备份恢复apply log是在：将redo log的数据写入磁盘吗？</p><p data-lake-id=\"ea5869925082c68190bcba9091eee5d2\"><br /></p><h1 data-lake-id=\"8ec526c3a6de86a1a8ffa1d660e2edbb\" id=\"1RtAK\">03 | 事务隔离：为什么你改了我还看不见？</h1><p data-lake-id=\"40d24f3ac90909d06d30f2196fdd343c\">线上配置：</p><p data-lake-id=\"6b3f65f8569576459088d3c76c227341\"><br /></p><p data-lake-id=\"8394f011313092ed4fadcf9f9fe9d260\">事务ACID：Atomicity、Consistency、Isolation、Durability（原子性、一致性、隔离性、持久性）</p><p data-lake-id=\"40737a18ee3a89e8fd00267a34ee31b9\"><br /></p><p data-lake-id=\"cdd33e1f72f63f826f2d07464f8aeb04\">多个事务同时执行会出现的问题：脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）</p><p data-lake-id=\"7a9a4d238425d61693cc0f0fdc6ec57f\">隔离级别：</p><p data-lake-id=\"f0a16c943ee4697b58de3daf02c6a250\"><span>读未提交：可以看到未提交的事务</span></p><p data-lake-id=\"81c22f90413212f1611a73fb5f9e4121\">读提交：只有提交的事务才会被看到</p><p data-lake-id=\"5fe34b4648ac2ed12f00e613f4f4ec68\">可重复读：一个事务执行过程中看到的数据，总是和启动时看到的一样。不管其他的事务有没有启动。</p><p data-lake-id=\"37060ec226684a7a35a6c4d77427a072\">串行化：顾名思义</p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A5%2C%22cols%22%3A5%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20720px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%22144%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%3Cbr%20%2F%3E%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E8%84%8F%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E5%B9%BB%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%20background-color%3A%20%23F4F5F7%3B%5C%22%3E%E8%A7%86%E5%9B%BE%E5%BC%80%E5%90%AF%E6%97%B6%E9%97%B4%EF%BC%88%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%EF%BC%89%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E8%AF%BB%E6%9C%AA%E6%8F%90%E4%BA%A4%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9E%E8%AE%B0%E5%BD%95%E6%9C%80%E6%96%B0%E5%80%BC%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E8%AF%BB%E6%8F%90%E4%BA%A4%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3ESQL%E6%89%A7%E8%A1%8C%E6%97%B6%E5%88%9B%E5%BB%BA%EF%BC%8C%E6%AD%A4%E6%97%B6%E6%9C%89%E5%88%AB%E7%9A%84%E4%BA%8B%E5%8A%A1%E4%BF%AE%E6%94%B9%E8%AE%B0%E5%BD%95%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E4%BA%8B%E5%8A%A1%E5%90%AF%E5%8A%A8%E6%97%B6%E5%88%9B%E5%BB%BA%EF%BC%8C%E4%BA%8B%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%90%8E%E7%9A%84%E6%94%B9%E5%8A%A8%E9%83%BD%E7%9C%8B%E4%B8%8D%E5%88%B0%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E4%B8%B2%E8%A1%8C%E5%8C%96%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20text-align%3A%20left%3B%5C%22%3E%E6%AF%8F%E6%AC%A1%E9%83%BD%E5%8A%A0%E9%94%81%EF%BC%8C%E9%81%BF%E5%85%8D%E5%B9%B6%E8%A1%8C%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22margin%22%3Afalse%2C%22id%22%3A%22JiUBB%22%7D\"></card><p data-lake-id=\"0661447e01d6eed4289ae72d6c0d3ff7\"><br /></p><p data-lake-id=\"45a91b68c50b3d79b4a44780c284aa27\">幻读的原因：update等操作的当前读，需要读取当前的数据，这个时候就会读到最新的更新数据了。表现为：单独select没有值，然后insert或者update，发现值已经有了。</p><p data-lake-id=\"63cde8e1f5353f3b88e0bd13857cd4be\"><br /></p><p data-lake-id=\"b0e85dd19c2bf3a3e51bbf5c26bbe64d\">MVCC：undo log实现</p><p data-lake-id=\"2b8be3ff5f4e71d86b1df0f037f2142f\"><br /></p><h1 data-lake-id=\"e524bd39349805cdee0e20650a13d3f6\" id=\"a1jJq\">04 | 深入浅出索引（上）</h1><p data-lake-id=\"37e8dc35289f4092238bb9958e4ad609\">innodb索引类型：</p><p data-lake-id=\"1ef7f4eadb75191261427bf9624241f5\">主键索引和：根据叶子节点的内容</p><p data-lake-id=\"d20d363dc4900267f656f3bfd4f87ca7\">主键索引：叶子节点内容是整行数据</p><p data-lake-id=\"c48388f16161e3a13c0976e71f372db3\">非主键索引：叶子节点内容是主键的值。也叫二级索引。使用二级索引，如果想获得整列的值，需要先从索引找到主键值，然后再根据主键查，需要回表。</p><p data-lake-id=\"43dddc805a422a7923fb8d438c43aa22\"><br /></p><p data-lake-id=\"f669c605b34dea5bd1a31ca47ec90192\">索引维护：</p><p data-lake-id=\"0683d98216debb18bccd20b9626641f1\">分裂：某个数据页满了，新插入数据的时候。</p><p data-lake-id=\"a1967aecb49cdeebf14416e00fe96a88\">合并：相邻两个页删除了数据，利用率很低的时候。</p><p data-lake-id=\"e68a94668a8045e951132175d011d8fe\">ps：自增主键是不会分裂的，因为一直是增长的。</p><p data-lake-id=\"ee97b4b336db28351142c6fe08f51dff\"><br /></p><p data-lake-id=\"0429ed88e2df15fdfdd6b9a09dbdd0d5\">问题：</p><p data-lake-id=\"29302ad31064a2257ad1703c8492f1c9\">1.同时插入较多数据时，索引维护是不是比较占资源。</p><p data-lake-id=\"450058682d2be3e264458c423a05bcdd\">2.业务字段做主键：只有一个索引；该索引必须是唯一索引？</p><h1 data-lake-id=\"94245f01f949656c4fc6088deb243dee\" id=\"lVAwq\">05 | 深入浅出索引（下）</h1><p data-lake-id=\"09a8cb2d23346d984a4de922e36d6936\"><br /></p><p data-lake-id=\"330c7e3823af62513a90fc1eb1b960a9\">避免回表的方式：</p><p data-lake-id=\"bd1ebeee99c266daefb1761b6c6c8053\">覆盖索引（组合索引）：</p><p data-lake-id=\"c145c511d0ff39c3eafd212f6d5bcc9c\">索引使用注意：</p><p data-lake-id=\"e053e40687b4b04e0180614df8fa7977\">1.最左前缀原则：不管是对于组合索引，还是对于</p><p data-lake-id=\"6eeba68ed3cdd5157ae6f6e45b8bfabb\">2.索引下推：MySQL5.6优化，多个and条件的时候，对索引中的字段先过滤，减少回表次数。</p><p data-lake-id=\"f7323fa7eb731d89d01023614c996604\">2.索引列使用函数会导致索引失效</p><p data-lake-id=\"a9dc71d5cba630f549d4c5fab944e794\"><br /></p><h1 data-lake-id=\"f5dd0a2d8467f4f1ee030a8b52269673\" id=\"DHvEC\">06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？</h1><p data-lake-id=\"f3b70eb39dbdd7d84ced28087f1bfb57\"><br /></p><p data-lake-id=\"5d915541fb5ea13289bc0c61f66a6e3d\">加锁范围分类：全局锁、表级锁和行锁。</p><p data-lake-id=\"f3f03256599904abbde2d2f50f94fc1b\">全局锁</p><p data-lake-id=\"a150252a34700120b791f6d0faea7134\">加全局锁方法：<span style=\"color: #353535;\">Flush tables with read lock (FTWRL)。使用场景：全库逻辑备份（innodb已经不需要了，可以使用--single-transaction）</span></p><p data-lake-id=\"7ee87897632f4460ec41ee6f7efbe167\">表级锁</p><p data-lake-id=\"7d87807c2212754fb62d18d3072df050\">分为表锁和元数据锁（MDL）</p><p data-lake-id=\"15c284c66e72715f6ae4b9c20d3c254e\">表锁：lock tables … read/write。</p><p data-lake-id=\"58f319101a719cd0ce96fadda2f30a02\">元数据锁：当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。所以给小表加字段，如果读取较多的话，也会阻塞，会阻塞所有的查询和更新，如果客户端有重试机制，会导致该库线程打满。</p><p data-lake-id=\"3650c08df946eb044c9082938ef277e3\"><br /></p><p data-lake-id=\"5b75a60e4918dd11297da42090abda9a\"><span style=\"color: #353535;\">尽量使用FTWRL而不是set global read_only=1：</span></p><p data-lake-id=\"fddb447ba32068e041a3b3b7e26bc8ed\">1.read_only可能会用来判断是主库还是备库。</p><p data-lake-id=\"0c0ecee3c4724a67f854722799319a32\">2.<span style=\"color: #353535;\">FTWRL命令时，如果客户端异常断开，MySQL会自动释放，set global read_only会导致MySQL一直只读。</span></p><p data-lake-id=\"e9a1f346346d8a28901a669c6d970782\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"f5e65039ebf211a7158cd191f3821267\"><br /></p><h1 data-lake-id=\"5349ef04d15cd2d984f45ac8c20c4fb1\" id=\"QbuYh\">07 | 行锁功过：怎么减少行锁对性能的影响？</h1><p data-lake-id=\"231d31716f18ccd5e18afb8267a5cbc5\">线上配置：</p><p data-lake-id=\"189df8259445e7f254d6c12a1ad83c5e\">innodb_lock_wait_timeout：10</p><p data-lake-id=\"9739ed1c38f63344ac52f5a4dbbbf4ba\"><span style=\"color: #353535;\">innodb_deadlock_detect：on</span></p><p data-lake-id=\"963e5b248d51ac9609dc26fed4318cd1\">两阶段锁协议：行锁在需要的时候才加上，但是在事务结束后才释放。所以要把可能影响并发的锁放在后面。</p><p data-lake-id=\"eca9d3c147d8bbd7a71835474cc6ae09\">死锁和死锁检测策略：</p><p data-lake-id=\"4d2b92d9a4e2da3bba70811765630299\">一直等待到超时：innodb_lock_wait_timeout：一直等待锁，直到超时。值不能太大，也不能太小。</p><p data-lake-id=\"08b8e559fe4d6cc40215e353b50c5fae\">死锁检测：<span style=\"color: #353535;\">发现死锁后，主动回滚死锁链条中的某偶一个事务，让其他事务执行。</span></p><p data-lake-id=\"ff11668c88783960caa9c17903e5b07c\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"558a5318a6979fd67b45719fbf7e580f\"><span style=\"color: #353535;\">问题：</span></p><p data-lake-id=\"c097e7296f0d3abc9c1009e39c0f158f\"><span style=\"color: #353535;\">死锁检测成本：每个新来的线程，都要要判断会不会由于自己的加入导致死锁，如果同时更新同一行的线程很多的时候。CPU消耗。</span></p><p data-lake-id=\"dcba0155b90c8446f6263693385a99d5\"><span style=\"color: #353535;\">原理怎么做的。</span></p><p data-lake-id=\"d6a86fc7acef42def7068c2dcd49e2f3\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"fbe9ed9798d7c307c904b7b63472fd26\"><br /></p><h1 data-lake-id=\"89141de8072a4acb9082006466fd5c9e\" id=\"RZLu1\">08 | 事务到底是隔离的还是不隔离的？</h1><p data-lake-id=\"55f5c65e23c438c76ad3b7b3a893dabe\">undolog：实现了MVCC</p><p data-lake-id=\"285790817a1411a1236f9f75d65a0afd\">数据可见性，锁是实现隔离级别。</p><p data-lake-id=\"98bd66d341bedc627844a0dc37508c31\">查询和更新是当前读还是一致性读。</p><p data-lake-id=\"d5b9564e969d1a32102a40f949706ac6\">一致性读：可重复读隔离级别下，读取数据时，会根据row trx_id找到是否能读到当前值，不在的话会根据redo log往前找。</p><p data-lake-id=\"cb4c6da12dd4e8466667c81e6a1c0808\">当前读：操作数据都是要读当前。可重复读隔离级别下，如果需要更新数据，只能拿最新的数据更新，这个时候虽然别的事务还没有提交，但还是能看到的。</p><p data-lake-id=\"b4e6d940ce7f6a6013d76bcb589d403e\"><span>undolog 大小。共享表空间</span></p><p data-lake-id=\"43651ef666341707130c02c340b759b2\"><br /></p><h1 data-lake-id=\"df0069070e5be36ed6618f6d3d3dd3ce\" id=\"0r9jz\"><span style=\"color: #353535;\">09 | 普通索引和唯一索引，应该怎么选择？</span></h1><p data-lake-id=\"158ddea68e9e069242c818ab06afb213\"><span style=\"color: #353535;\"><br /></span></p><p data-lake-id=\"211e4e56eef8b87b091713ce5d901aa9\"><br /></p><h1 data-lake-id=\"52d53be3df53a441a65f048237d19506\" id=\"hC6sk\">12 | 为什么我的MySQL会“抖”一下？</h1><p data-lake-id=\"26131aa0ee7e40f3f3adad8d4bfd1672\">线上配置：</p><p data-lake-id=\"7b581cd5122af43702f50788837bbf6e\">innodb_flush_neighbors：1</p><p data-lake-id=\"8c420638cac3ea077e2cbc973beb9ed4\">innodb_io_capacity：5000</p><p data-lake-id=\"9e40edd200513692cc39f806bfd026b4\">innodb_max_dirty_pages_pct：75</p><p data-lake-id=\"720342b774bd28eb13652a3495ef528a\"><br /></p><p data-lake-id=\"e1ab36db1d83a97e9d8c778ed0af9290\">为什么会抖一下：</p><p data-lake-id=\"7e5cd62064d84b2b4eb8dfb570c42f04\">1.redo log满了。redo log中的checkpoint前移动，需要刷脏页。（应该避免，因为此时数据库服务已经阻塞，需要控制刷脏页频率）  一般不会设置，不同百分比的时候不一样。</p><p data-lake-id=\"8ed2ac9ca781453f92ad48f0699ff8c7\">2.内存不足，需要淘汰脏页。buffer_pool    </p><p data-lake-id=\"4ff4c0dac44a6328d7292fc2cee879e3\">3.日常刷脏页。对应MySQL的配置。</p><p data-lake-id=\"42aefdbff46502e6c9a831d0f44c641b\">4.MySQL正常关闭。</p><p data-lake-id=\"50023b5f39e19937a1aeec3e106f756c\"><br /></p><p data-lake-id=\"62f4acf1ec83c6d3719624cf1194bd26\">正常使用的数据库，buffer一般未被使用的情况比较少，如果一个查询，需要的内存比较大，查询需要从磁盘读取很多页的时候，也要将脏页刷到磁盘中。</p><p data-lake-id=\"747e5e6f85fd15548292788ea532ca32\">可用的页，刷脏页，写到磁盘，redolog checkpoint 往前走，free list flush list lru list</p><p data-lake-id=\"2b451fac09952b7684225e98a8075b71\"><br /></p><p data-lake-id=\"7ecd625518502a9fd66a1c40abf25117\">脏页刷盘参考：一个是脏页比例，一个是redo log写盘速度。</p><p data-lake-id=\"1a7c9a59c08809e229c22cf467bba54c\"><br /></p><p data-lake-id=\"bd74aa96a853aac85d9db76e391a85a1\">如果高配机器redo log设置比较小的话：redo log很容易被写满，就会导致经常要因为redo log满了而刷盘。表现为：磁盘压力很小，但是数据库出现间歇性的性能下跌</p><p data-lake-id=\"aecb2feb1adff09406b386836f8a2004\"><br /></p><p data-lake-id=\"c2916afe041f15cac720aa9cea1c4577\"><br /></p><h1 data-lake-id=\"64cc4f1218fa844e6e45b6f360a24fee\" id=\"WyU22\">13 | 为什么表数据删掉一半，表文件大小不变？</h1><p data-lake-id=\"5ac52c23fc425a725ce324731681ab80\">：怎么正确的回收表空间</p><p data-lake-id=\"c0991732e97f60d9b7374f2991c36db6\">innodb_file_per_table：1 默认值</p><p data-lake-id=\"f408b969a75c6b6fa5785d29ba38add1\">删除整个表数据会删除，但是删除表中的部分数据，空间是怎么回收的。</p><p data-lake-id=\"bca0f067f9e143f5e02af029e0323b80\"><br /></p><p data-lake-id=\"f40e433742b65cee225641d7cde1ace0\">delete删除一条记录：将记录标记为已删除，之后可以复用。</p><p data-lake-id=\"b9b44b5a07adff24e2e5d069883f871a\">delete删除多条记录：如果整个页被删除，则整页都被标记为可复用。相邻的两页使用率低，会合并。但空间均不会被释放。同理：插入数据，如果当前页已满，肯定会开启新页，也会造成数据空洞。</p><p data-lake-id=\"46e11bf43d9cfa7bf39b663d7f3f9290\"><br /></p><p data-lake-id=\"e719bc90aa2deeb7aa7a5f43921570f2\">压缩空间：alter table A engine=InnoDB。5.5之前不要用，会阻塞DML。5.6版本之后：Online DDL（先建新表，并将旧表的更新写在一个文件中，新表搞好之后，再读取文件中的更新。<span style=\"color: #F5222D;\"><strong>会有很短时间的MDL写锁</strong></span>）</p><p data-lake-id=\"e6f42bd63af351d7c95270be01681f4b\"><br /></p><p data-lake-id=\"c53b425bc0a55edd0ac41014aa75ab4b\"><span style=\"color: #F5222D;\">DDL过程如果是Online的，就一定是inplace的？</span></p><p data-lake-id=\"ed111d028733550e405ebf6b7d4122e2\"><span style=\"color: #F5222D;\"><br /></span></p><h1 data-lake-id=\"6e93ae7eaebb9ffddcfad4f9afb3c62b\" id=\"Lvqoc\">14 | count(*)这么慢，我该怎么办？</h1><p data-lake-id=\"e5c86cdc186440fd1ca1ef662b279097\"><br /></p><p data-lake-id=\"9da0435a758167cac35b7cef0237f4e8\">不加where条件：</p><p data-lake-id=\"eedf98118eba7896425dfee7dd3afcba\">MyISAM引擎：把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高；</p><p data-lake-id=\"bafad76b02dfe776030121cff4e5f0be\">InnoDB引擎：数据一行一行地从引擎里面读出来，然后累积计数。</p><p data-lake-id=\"06a58f8c6737e16adc985c30da1737c4\">show table status：不准确。</p><p data-lake-id=\"c510a2932a8e7f96298a149f5e2c27a8\"><br /></p><p data-lake-id=\"cf1b7d447e07e3c452ae15a1d330bdec\">加where条件：</p><p data-lake-id=\"3c85d36a091ebe56b330290be86ad5ea\">InnoDB引擎：选择从引擎读</p><p data-lake-id=\"517eb42488dd23793abed52ff7c3efa3\"><br /></p><p data-lake-id=\"e7379389026771c1d4e2d65c81b47a6d\">效率排序：count(字段)&lt;count(主键id)&lt;count(1)≈count(*)</p><p data-lake-id=\"633c8cb56b2c9894102c221ce0822761\">count(*)：特殊处理过，因为不会为null，server会按行累计。</p><p data-lake-id=\"2bb0ede93cb1d66cc1d8339f62ef9a0b\"><br /></p><p data-lake-id=\"d94d1e72969830a9b863aa61b8c7f87d\">count(1)：InnoDB引擎遍历整张表，但不取值。server层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加。</p><p data-lake-id=\"bb5f0a002d4f5324b9766e8740ac7e12\">count(主键id)：InnoDB引擎会遍历整张表，把每一行的id值都取出来，返回给server层。server层拿到id后，判断是不可能为空的，就按行累加。</p><p data-lake-id=\"2983383f8cb8d9c4507aea10687b0549\">count(字段)：根据是否为not null进行判断。</p><p data-lake-id=\"bd6d9b6581aa8f2c51eee1117ebef8a5\"><br /></p><h1 data-lake-id=\"c26f72b24716e99ac1406940f815a254\" id=\"EAyss\">15 | 答疑文章（一）：日志和索引相关问题</h1><p data-lake-id=\"4a04b78ed5fe2867d7fb26654af668d4\">日志相关：</p><p data-lake-id=\"897fc644bb6290ccdc17843987408154\">1.两阶段提交不同瞬间MySQL异常重启怎么保证数据完整性：</p><p data-lake-id=\"022b2fea6dcf28ca385eca8f92ff93ee\">测试</p><p data-lake-id=\"9540e44ea6eb1a1dd3c0d6a2d56dff28\"><br /></p><p data-lake-id=\"04bf67ebbff0ff8ae12eb2397c4c4ddb\"><br /></p><h1 data-lake-id=\"fc0acd0593450ef121e028ef526cac21\" id=\"GM6Os\">16 | “order by”是怎么工作的？</h1><h2 data-lake-id=\"dd39dee8bea85419f3e1788a4bb7af88\" id=\"sk0zO\">全字段排序</h2><p data-lake-id=\"22932640e2bb9ea8fc8ac418ad608de7\">排序过程对字符串做了“紧凑”处理。即使name字段的定义是varchar(16)，在排序过程中还是要按照实际长度来分配空间的。</p><p data-lake-id=\"94e6e0cdcb001422951effbc1883955b\"><br /></p><p data-lake-id=\"c4d75bbe5b47a17947cb9863989e0483\"><br /></p><p data-lake-id=\"4ebf16cd4bf0c010fd5356983464fc8b\">max_length_for_sort_data</p><h2 data-lake-id=\"da73b7d1dd5064c6249dfb120df976ab\" id=\"sbCzu\"> rowid排序</h2><p data-lake-id=\"d7c965dc26b36e1d87984a9546da01ee\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-06-20T06:12:19.000Z",
    "deleted_at": null,
    "created_at": "2020-04-01T14:25:39.000Z",
    "updated_at": "2020-06-20T06:12:20.000Z",
    "published_at": "2020-06-20T06:12:19.000Z",
    "first_published_at": "2020-04-01T14:26:01.000Z",
    "word_count": 3659,
    "cover": null,
    "description": "01 | 基础架构：一条SQL查询语句是如何执行的？配置：wait_timeout：控制Sleep连接保持时间。线上未配置，默认8小时，SQL执行步骤客户端-连接器（管理连接、权限验证）-查询缓存（命中则直接返回，基本没啥用）-分析器（词法分析、语法分析，语法错误在这就能看到了）-优化器（执行...",
    "custom_description": null,
    "hits": 12,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2036980,
    "slug": "qsp5o8",
    "title": "go语言问题1",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "1. 类型别名<br />\ntype S string与<br />\ntype S = string 区别？\n\n    type S string是类型声明，S是一种新的类型，给S定义的方法，接口等和string没有关系。<br />而type S = string只是一种别名，可以理解为，S和String是完全一样的，只是换了一种叫法而已。类型别名和原类型方法是一样的。也不能在Switch中使用两者同时作为分支。\n\n2. go语言中没有按地址传递，可以深究一下如何传递slice，再回复到邮件中\n\n    Go语言中只有按值传递，通过源码可以看到，slice是一个结构体。结构体中包括真正的数组和长度以及容量。\n\n```\ntype slice struct {\n\tarray unsafe.Pointer\n\tlen   int\n\tcap   int\n}\n```\n\n    函数传递slice时，其实传递的slice结构体，其中包括array的首地址、len和cap。通过下面的代码可以有以下的结果:\n\n```\nfunc add_slice(a []int){\n\ta[0]=2\n\ta[1]=3\n\treturn\n}\n\nfunc append_slice(a []int){\n\ta=append(a,5)\n}\n\nfunc modify_slice(a *[]int){\n\t*a=append(*a,6)\n}\n\nfunc main(){\n\ta:=[]int{1,2,3}\n  \n\tadd_slice(a)\n\tfmt.Println(a)  //输出[2 3 3]\n  \n\tappend_slice(a)\n\tfmt.Println(a)  //输出[2 3 3]\n\n\tmodify_slice(&a)\n\tfmt.Println(a)   //输出[2 3 3 6]\n}\n```\n\n\n\n    只是改变slice内部的值时，看起来像是按引用传递，因为可以改变slice内的值，但是实际上是在参数传递的过程中，传递了array的首地址，而slice在内存中是一连串的地址，所以知道首地址就可以修改整个数组内部的值。<br />    但是由于是按值传递，所以不能在函数内对slice进行append。如果需要改变slice的长度，可以通过传入slice的指针。<br />    由于slice传递的形式，需要在编程中多多注意，避免进坑。另外看到一个关于传递slice的操作，加深了一下对slice传参的理解。\n\n```\nfunc main() {\n\ta := []int{7,8,9}\n\tb:=[]int{}\n\tb=append(b,1,2,3)  //a,b初始化的方式不一样，导致两者的cap不一样\n\n\tfmt.Printf(\"a len: %d cap:%d data:%+v\\n\", len(a), cap(a), a)  //a len: 3 cap:3 data:[7 8 9]\n\tfmt.Printf(\"b len: %d cap:%d data:%+v\\n\", len(b), cap(b), b)  //b len: 3 cap:4 data:[1 2 3]\n\n\tappend_slice(a)    //显然append是没有效果的\n\tfmt.Printf(\"a len: %d cap:%d data:%+v\\n\", len(a), cap(a), a)\n\tp := unsafe.Pointer(&a[2])  //根据slice在内存的连续性，拿到最后一位的指针地址\n\tq := uintptr(p)+8           //将指针往后移一位，因为是int，所以是8\n\tt := (*int)(unsafe.Pointer(q))   \n\tfmt.Println(*t)             //输出0\n\n\tappend_slice(b)\n\tfmt.Printf(\"b len: %d cap:%d data:%+v\\n\", len(b), cap(b), b)\n\tp1 := unsafe.Pointer(&b[2])\n\tq1 := uintptr(p1)+8\n\tt1 := (*int)(unsafe.Pointer(q1))\n\tfmt.Println(*t1)    //输出10\n}\n\nfunc append_slice(a []int) {\n\ta = append(a, 10)\n}\n```\n\n\n\n   可以看到，直接append到slice的值，如果cap够的话，是会append上的，但是由于len的值没有改变，所以看不到，可以通过unsafe指针观察到结果。但是如果cap不够，继续append，会导致重新分配内存空间，append在新的位置上，此时通过unsafe指针也拿不到append的值。\n\n3. 关于函数的执行顺序：\n\n```\nfunc add1(x,y int) int{\n\tfmt.Println(\"in add1. sum1= \",x,y)\n\treturn x+y\n}\nfunc add(x,y,z,t int) int{\n\tsum:=0\n\tsum=add1(x,y)+add1(z,t)\n\tfmt.Println(\"in add. sum=\",sum)\n\treturn sum\n}\n\nfunc main(){\n\tfmt.Println(add(1,2,3,4),add(2,3,4,5))\n}\n\n结果：\nin add1. sum1=  1 2\nin add1. sum1=  3 4\nin add. sum= 10\nin add1. sum1=  2 3\nin add1. sum1=  4 5\nin add. sum= 14\n10 14\n```\n\n可以看到，add1的结果是最先执行的，再执行add，最后才执行fmt.Println（）.是按后序遍历的顺序。\n<a name=\"f43mD\"></a>\n# go语言学习\n\n- 命名返回值:没有参数的 return 语句返回已命名的返回值\n- println 的执行顺序。会先把函数计算结束之后，再按照顺序输出\n- 没有条件的 switch 同 `switch true` 一样。\n- defer函数调用会被压入一个栈中，所以后defer的值会先输出\n- 结构体指针的使用：修改结构体指针的值时，不需要带*号。\n- 数组定义的几种方式\n<a name=\"asg81\"></a>\n# 关于切片\n\n- 切片就像数组的引用，改变切片会改变底层的值<br />\n- 切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限<br />\n- 只是截取切片是不会改变切片大小的<br />\n- 切片的长度就是它所包含的元素个数。<br />\n- 切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数<br />\n- 切片的零值是 `nil`<br />\n- 函数的闭包<br />\n- 接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`**type **MyFloat float64`  <br />\n<a name=\"M47I1\"></a>\n# 关于方法和接口\n\n- 指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针\n- 跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。\n\n1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？<br />我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。\n```\nfunc Println(a ...interface{}) (n int, err error) {\n\treturn Fprintln(os.Stdout, a...)\n}\nfunc Sprintln(a ...interface{}) string {\n\tp := newPrinter()\n\tp.doPrintln(a)\n\ts := string(p.buf)\n\tp.free()\n\treturn s\n}\n```\n同时也重新把打印语句加复杂了一下，结果与预期相符。\n```\npackage main\nimport \"fmt\"\nfunc add(x,y int) int{\n\tsum:=x+y\n\tfmt.Println(sum)\n\treturn sum\n}\nfunc main(){\n\tfmt.Println(add(1,2),add(add(1,1),add(3,7)),add(4,5))\n}\n运行结果为：\n3\n2\n10\n12\n9\n3 12 9\n```\n\n2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br />查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。\n```\nnewcap := old.cap\n\tdoublecap := newcap + newcap\n\tif cap > doublecap {\n\t\tnewcap = cap\n\t} else {\n\t\tif old.len < 1024 {\n\t\t\tnewcap = doublecap\n\t\t} else {\n\t\t\t// Check 0 < newcap to detect overflow\n\t\t\t// and prevent an infinite loop.\n\t\t\tfor 0 < newcap && newcap < cap {\n\t\t\t\tnewcap += newcap / 4\n\t\t\t}\n\t\t\t// Set newcap to the requested cap when\n\t\t\t// the newcap calculation overflowed.\n\t\t\tif newcap <= 0 {\n\t\t\t\tnewcap = cap\n\t\t\t}\n\t\t}\n\t}\n```\n通过代码测试上述结果：\n```\nfunc main(){\n\tvar a []int\n\tfor i:=0;i<1500;i++{\n\t\ta=append(a,i)\n\t\tif i%100==0{\n\t\t\tfmt.Printf(\"len: %d , cap; %d\\n\",len(a),cap(a))\n\t\t}\n\t}\n}\n输出结果为：\nlen: 1 , cap; 1\nlen: 101 , cap; 128\nlen: 201 , cap; 256\nlen: 301 , cap; 512\nlen: 401 , cap; 512\nlen: 501 , cap; 512\nlen: 601 , cap; 1024\nlen: 701 , cap; 1024\nlen: 801 , cap; 1024\nlen: 901 , cap; 1024\nlen: 1001 , cap; 1024\nlen: 1101 , cap; 1280\nlen: 1201 , cap; 1280\nlen: 1301 , cap; 1696\nlen: 1401 , cap; 1696\n```\n如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：\n```\ncapmem = roundupsize(uintptr(newcap) * sys.PtrSize)\n```\n其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下\n```\nfunc roundupsize(size uintptr) uintptr {\n\tif size < _MaxSmallSize {\n\t\tif size <= smallSizeMax-8 {\n\t\t\treturn uintptr(class_to_size[size_to_class8[(size+smallSizeDiv-1)/smallSizeDiv]])\n\t\t} else {\n\t\t\treturn uintptr(class_to_size[size_to_class128[(size-smallSizeMax+largeSizeDiv-1)/largeSizeDiv]])\n\t\t}\n\t}\n\tif size+_PageSize < size {\n\t\treturn size\n\t}\n\treturn round(size, _PageSize)\n}\n```\n其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）<br />当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。\n```\nsize_to_class8 = [smallSizeMax/smallSizeDiv + 1]uint8{0, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31}\nsize_to_class128 = [(_MaxSmallSize-smallSizeMax)/largeSizeDiv + 1]uint8{31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 39, 40, 40, 40, 41, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66}\nclass_to_size = [_NumSizeClasses]uint16{0, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 288, 320, 352, 384, 416, 448, 480, 512, 576, 640, 704, 768, 896, 1024, 1152, 1280, 1408, 1536, 1792, 2048, 2304, 2688, 3072, 3200, 3456, 4096, 4864, 5376, 6144, 6528, 6784, 6912, 8192, 9472, 9728, 10240, 10880, 12288, 13568, 14336, 16384, 18432, 19072, 20480, 21760, 24576, 27264, 28672, 32768}\n```\n可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.<br />而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096<br />以int为例\n\n| 个数 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |\n| :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- |\n| 字节数 | 8 | 16 | 24 | 32 | 40 | 48 | 56 | 64 | 72 |\n| 所占空间 | 8 | 16 | 32 | 32 | 48 | 48 | 64 | 64 | 80 |\n| size_to_class8 | 1 | 2 | 3 | 3 | 4 | 4 | 5 | 5 | 6 |\n\n\n",
    "body_draft": "1. 类型别名<br />\ntype S string与<br />\ntype S = string 区别？\n\n    type S string是类型声明，S是一种新的类型，给S定义的方法，接口等和string没有关系。<br />而type S = string只是一种别名，可以理解为，S和String是完全一样的，只是换了一种叫法而已。类型别名和原类型方法是一样的。也不能在Switch中使用两者同时作为分支。\n\n2. go语言中没有按地址传递，可以深究一下如何传递slice，再回复到邮件中\n\n    Go语言中只有按值传递，通过源码可以看到，slice是一个结构体。结构体中包括真正的数组和长度以及容量。\n\n```\ntype slice struct {\n\tarray unsafe.Pointer\n\tlen   int\n\tcap   int\n}\n```\n\n    函数传递slice时，其实传递的slice结构体，其中包括array的首地址、len和cap。通过下面的代码可以有以下的结果:\n\n```\nfunc add_slice(a []int){\n\ta[0]=2\n\ta[1]=3\n\treturn\n}\n\nfunc append_slice(a []int){\n\ta=append(a,5)\n}\n\nfunc modify_slice(a *[]int){\n\t*a=append(*a,6)\n}\n\nfunc main(){\n\ta:=[]int{1,2,3}\n  \n\tadd_slice(a)\n\tfmt.Println(a)  //输出[2 3 3]\n  \n\tappend_slice(a)\n\tfmt.Println(a)  //输出[2 3 3]\n\n\tmodify_slice(&a)\n\tfmt.Println(a)   //输出[2 3 3 6]\n}\n```\n\n\n\n    只是改变slice内部的值时，看起来像是按引用传递，因为可以改变slice内的值，但是实际上是在参数传递的过程中，传递了array的首地址，而slice在内存中是一连串的地址，所以知道首地址就可以修改整个数组内部的值。<br />    但是由于是按值传递，所以不能在函数内对slice进行append。如果需要改变slice的长度，可以通过传入slice的指针。<br />    由于slice传递的形式，需要在编程中多多注意，避免进坑。另外看到一个关于传递slice的操作，加深了一下对slice传参的理解。\n\n```\nfunc main() {\n\ta := []int{7,8,9}\n\tb:=[]int{}\n\tb=append(b,1,2,3)  //a,b初始化的方式不一样，导致两者的cap不一样\n\n\tfmt.Printf(\"a len: %d cap:%d data:%+v\\n\", len(a), cap(a), a)  //a len: 3 cap:3 data:[7 8 9]\n\tfmt.Printf(\"b len: %d cap:%d data:%+v\\n\", len(b), cap(b), b)  //b len: 3 cap:4 data:[1 2 3]\n\n\tappend_slice(a)    //显然append是没有效果的\n\tfmt.Printf(\"a len: %d cap:%d data:%+v\\n\", len(a), cap(a), a)\n\tp := unsafe.Pointer(&a[2])  //根据slice在内存的连续性，拿到最后一位的指针地址\n\tq := uintptr(p)+8           //将指针往后移一位，因为是int，所以是8\n\tt := (*int)(unsafe.Pointer(q))   \n\tfmt.Println(*t)             //输出0\n\n\tappend_slice(b)\n\tfmt.Printf(\"b len: %d cap:%d data:%+v\\n\", len(b), cap(b), b)\n\tp1 := unsafe.Pointer(&b[2])\n\tq1 := uintptr(p1)+8\n\tt1 := (*int)(unsafe.Pointer(q1))\n\tfmt.Println(*t1)    //输出10\n}\n\nfunc append_slice(a []int) {\n\ta = append(a, 10)\n}\n```\n\n\n\n   可以看到，直接append到slice的值，如果cap够的话，是会append上的，但是由于len的值没有改变，所以看不到，可以通过unsafe指针观察到结果。但是如果cap不够，继续append，会导致重新分配内存空间，append在新的位置上，此时通过unsafe指针也拿不到append的值。\n\n3. 关于函数的执行顺序：\n\n```\nfunc add1(x,y int) int{\n\tfmt.Println(\"in add1. sum1= \",x,y)\n\treturn x+y\n}\nfunc add(x,y,z,t int) int{\n\tsum:=0\n\tsum=add1(x,y)+add1(z,t)\n\tfmt.Println(\"in add. sum=\",sum)\n\treturn sum\n}\n\nfunc main(){\n\tfmt.Println(add(1,2,3,4),add(2,3,4,5))\n}\n\n结果：\nin add1. sum1=  1 2\nin add1. sum1=  3 4\nin add. sum= 10\nin add1. sum1=  2 3\nin add1. sum1=  4 5\nin add. sum= 14\n10 14\n```\n\n可以看到，add1的结果是最先执行的，再执行add，最后才执行fmt.Println（）.是按后序遍历的顺序。\n<a name=\"f43mD\"></a>\n# go语言学习\n\n- 命名返回值:没有参数的 return 语句返回已命名的返回值\n- println 的执行顺序。会先把函数计算结束之后，再按照顺序输出\n- 没有条件的 switch 同 `switch true` 一样。\n- defer函数调用会被压入一个栈中，所以后defer的值会先输出\n- 结构体指针的使用：修改结构体指针的值时，不需要带*号。\n- 数组定义的几种方式\n<a name=\"asg81\"></a>\n# 关于切片\n\n- 切片就像数组的引用，改变切片会改变底层的值<br />\n- 切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限<br />\n- 只是截取切片是不会改变切片大小的<br />\n- 切片的长度就是它所包含的元素个数。<br />\n- 切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数<br />\n- 切片的零值是 `nil`<br />\n- 函数的闭包<br />\n- 接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`**type **MyFloat float64`  <br />\n<a name=\"M47I1\"></a>\n# 关于方法和接口\n\n- 指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针\n- 跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。\n\n1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？<br />我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。\n```\nfunc Println(a ...interface{}) (n int, err error) {\n\treturn Fprintln(os.Stdout, a...)\n}\nfunc Sprintln(a ...interface{}) string {\n\tp := newPrinter()\n\tp.doPrintln(a)\n\ts := string(p.buf)\n\tp.free()\n\treturn s\n}\n```\n同时也重新把打印语句加复杂了一下，结果与预期相符。\n```\npackage main\nimport \"fmt\"\nfunc add(x,y int) int{\n\tsum:=x+y\n\tfmt.Println(sum)\n\treturn sum\n}\nfunc main(){\n\tfmt.Println(add(1,2),add(add(1,1),add(3,7)),add(4,5))\n}\n运行结果为：\n3\n2\n10\n12\n9\n3 12 9\n```\n\n2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br />查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。\n```\nnewcap := old.cap\n\tdoublecap := newcap + newcap\n\tif cap > doublecap {\n\t\tnewcap = cap\n\t} else {\n\t\tif old.len < 1024 {\n\t\t\tnewcap = doublecap\n\t\t} else {\n\t\t\t// Check 0 < newcap to detect overflow\n\t\t\t// and prevent an infinite loop.\n\t\t\tfor 0 < newcap && newcap < cap {\n\t\t\t\tnewcap += newcap / 4\n\t\t\t}\n\t\t\t// Set newcap to the requested cap when\n\t\t\t// the newcap calculation overflowed.\n\t\t\tif newcap <= 0 {\n\t\t\t\tnewcap = cap\n\t\t\t}\n\t\t}\n\t}\n```\n通过代码测试上述结果：\n```\nfunc main(){\n\tvar a []int\n\tfor i:=0;i<1500;i++{\n\t\ta=append(a,i)\n\t\tif i%100==0{\n\t\t\tfmt.Printf(\"len: %d , cap; %d\\n\",len(a),cap(a))\n\t\t}\n\t}\n}\n输出结果为：\nlen: 1 , cap; 1\nlen: 101 , cap; 128\nlen: 201 , cap; 256\nlen: 301 , cap; 512\nlen: 401 , cap; 512\nlen: 501 , cap; 512\nlen: 601 , cap; 1024\nlen: 701 , cap; 1024\nlen: 801 , cap; 1024\nlen: 901 , cap; 1024\nlen: 1001 , cap; 1024\nlen: 1101 , cap; 1280\nlen: 1201 , cap; 1280\nlen: 1301 , cap; 1696\nlen: 1401 , cap; 1696\n```\n如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：\n```\ncapmem = roundupsize(uintptr(newcap) * sys.PtrSize)\n```\n其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下\n```\nfunc roundupsize(size uintptr) uintptr {\n\tif size < _MaxSmallSize {\n\t\tif size <= smallSizeMax-8 {\n\t\t\treturn uintptr(class_to_size[size_to_class8[(size+smallSizeDiv-1)/smallSizeDiv]])\n\t\t} else {\n\t\t\treturn uintptr(class_to_size[size_to_class128[(size-smallSizeMax+largeSizeDiv-1)/largeSizeDiv]])\n\t\t}\n\t}\n\tif size+_PageSize < size {\n\t\treturn size\n\t}\n\treturn round(size, _PageSize)\n}\n```\n其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）<br />当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。\n```\nsize_to_class8 = [smallSizeMax/smallSizeDiv + 1]uint8{0, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31}\nsize_to_class128 = [(_MaxSmallSize-smallSizeMax)/largeSizeDiv + 1]uint8{31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 39, 40, 40, 40, 41, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66}\nclass_to_size = [_NumSizeClasses]uint16{0, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 288, 320, 352, 384, 416, 448, 480, 512, 576, 640, 704, 768, 896, 1024, 1152, 1280, 1408, 1536, 1792, 2048, 2304, 2688, 3072, 3200, 3456, 4096, 4864, 5376, 6144, 6528, 6784, 6912, 8192, 9472, 9728, 10240, 10880, 12288, 13568, 14336, 16384, 18432, 19072, 20480, 21760, 24576, 27264, 28672, 32768}\n```\n可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.<br />而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096<br />以int为例\n\n| 个数 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |\n| :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- |\n| 字节数 | 8 | 16 | 24 | 32 | 40 | 48 | 56 | 64 | 72 |\n| 所占空间 | 8 | 16 | 32 | 32 | 48 | 48 | 64 | 64 | 80 |\n| size_to_class8 | 1 | 2 | 3 | 3 | 4 | 4 | 5 | 5 | 6 |\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><ol start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>类型别名<br>type S string与<br>type S = string 区别？</li></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; &nbsp;<span>type S string是类型声明，S是一种新的类型，给S定义的方法，接口等和string没有关系。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">而<span>type S = string只是一种别名，可以理解为，S和String是完全一样的，只是换了一种叫法而已。类型别名和原类型方法是一样的。也不能在Switch中使用两者同时作为分支。</span></p><ol start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>go语言中没有按地址传递，可以深究一下如何传递slice，再回复到邮件中<span data-lake-element=\"cursor\"></span></li></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; &nbsp;Go语言中只有按值传递，通过源码可以看到，slice是一个结构体。结构体中包括真正的数组和长度以及容量。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22type%20slice%20struct%20%7B%5Cn%5Ctarray%20unsafe.Pointer%5Cn%5Ctlen%20%20%20int%5Cn%5Ctcap%20%20%20int%5Cn%7D%22%2C%22id%22%3A%22TKhVG%22%7D\" id=\"TKhVG\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type slice struct {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    array unsafe.Pointer\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    len   int\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    cap   int\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; &nbsp;函数传递slice时，其实传递的slice结构体，其中包括array的首地址、len和cap。通过下面的代码可以有以下的结果:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20add_slice(a%20%5B%5Dint)%7B%5Cn%5Cta%5B0%5D%3D2%5Cn%5Cta%5B1%5D%3D3%5Cn%5Ctreturn%5Cn%7D%5Cn%5Cnfunc%20append_slice(a%20%5B%5Dint)%7B%5Cn%5Cta%3Dappend(a%2C5)%5Cn%7D%5Cn%5Cnfunc%20modify_slice(a%20*%5B%5Dint)%7B%5Cn%5Ct*a%3Dappend(*a%2C6)%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Cta%3A%3D%5B%5Dint%7B1%2C2%2C3%7D%5Cn%20%20%5Cn%5Ctadd_slice(a)%5Cn%5Ctfmt.Println(a)%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%5D%5Cn%20%20%5Cn%5Ctappend_slice(a)%5Cn%5Ctfmt.Println(a)%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%5D%5Cn%5Cn%5Ctmodify_slice(%26a)%5Cn%5Ctfmt.Println(a)%20%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%206%5D%5Cn%7D%22%2C%22id%22%3A%22jpaWj%22%7D\" id=\"jpaWj\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func add_slice(a []int){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    a[0]=2\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    a[1]=3\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func append_slice(a []int){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    a=append(a,5)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func modify_slice(a *[]int){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    *a=append(*a,6)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    a:=[]int{1,2,3}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    add_slice(a)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(a)  //输出[2 3 3]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    append_slice(a)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(a)  //输出[2 3 3]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    modify_slice(&amp;a)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(a)   //输出[2 3 3 6]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><ol start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; &nbsp;只是改变slice内部的值时，看起来像是按引用传递，因为可以改变slice内的值，但是实际上是在参数传递的过程中，传递了array的首地址，而slice在内存中是一连串的地址，所以知道首地址就可以修改整个数组内部的值。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; &nbsp;但是由于是按值传递，所以不能在函数内对slice进行append。如果需要改变slice的长度，可以通过传入slice的指针。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; &nbsp;由于slice传递的形式，需要在编程中多多注意，避免进坑。另外看到一个关于传递slice的操作，加深了一下对slice传参的理解。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20main()%20%7B%5Cn%5Cta%20%3A%3D%20%5B%5Dint%7B7%2C8%2C9%7D%5Cn%5Ctb%3A%3D%5B%5Dint%7B%7D%5Cn%5Ctb%3Dappend(b%2C1%2C2%2C3)%20%20%2F%2Fa%2Cb%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E6%96%B9%E5%BC%8F%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%AF%BC%E8%87%B4%E4%B8%A4%E8%80%85%E7%9A%84cap%E4%B8%8D%E4%B8%80%E6%A0%B7%5Cn%5Cn%5Ctfmt.Printf(%5C%22a%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(a)%2C%20cap(a)%2C%20a)%20%20%2F%2Fa%20len%3A%203%20cap%3A3%20data%3A%5B7%208%209%5D%5Cn%5Ctfmt.Printf(%5C%22b%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(b)%2C%20cap(b)%2C%20b)%20%20%2F%2Fb%20len%3A%203%20cap%3A4%20data%3A%5B1%202%203%5D%5Cn%5Cn%5Ctappend_slice(a)%20%20%20%20%2F%2F%E6%98%BE%E7%84%B6append%E6%98%AF%E6%B2%A1%E6%9C%89%E6%95%88%E6%9E%9C%E7%9A%84%5Cn%5Ctfmt.Printf(%5C%22a%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(a)%2C%20cap(a)%2C%20a)%5Cn%5Ctp%20%3A%3D%20unsafe.Pointer(%26a%5B2%5D)%20%20%2F%2F%E6%A0%B9%E6%8D%AEslice%E5%9C%A8%E5%86%85%E5%AD%98%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%80%A7%EF%BC%8C%E6%8B%BF%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%BD%8D%E7%9A%84%E6%8C%87%E9%92%88%E5%9C%B0%E5%9D%80%5Cn%5Ctq%20%3A%3D%20uintptr(p)%2B8%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E5%B0%86%E6%8C%87%E9%92%88%E5%BE%80%E5%90%8E%E7%A7%BB%E4%B8%80%E4%BD%8D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%98%AFint%EF%BC%8C%E6%89%80%E4%BB%A5%E6%98%AF8%5Cn%5Ctt%20%3A%3D%20(*int)(unsafe.Pointer(q))%20%20%20%5Cn%5Ctfmt.Println(*t)%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA0%5Cn%5Cn%5Ctappend_slice(b)%5Cn%5Ctfmt.Printf(%5C%22b%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(b)%2C%20cap(b)%2C%20b)%5Cn%5Ctp1%20%3A%3D%20unsafe.Pointer(%26b%5B2%5D)%5Cn%5Ctq1%20%3A%3D%20uintptr(p1)%2B8%5Cn%5Ctt1%20%3A%3D%20(*int)(unsafe.Pointer(q1))%5Cn%5Ctfmt.Println(*t1)%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA10%5Cn%7D%5Cn%5Cnfunc%20append_slice(a%20%5B%5Dint)%20%7B%5Cn%5Cta%20%3D%20append(a%2C%2010)%5Cn%7D%22%2C%22id%22%3A%22vWcuo%22%7D\" id=\"vWcuo\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    a := []int{7,8,9}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    b:=[]int{}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    b=append(b,1,2,3)  //a,b初始化的方式不一样，导致两者的cap不一样\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Printf(\"a len: %d cap:%d data:%+v\\n\", len(a), cap(a), a)  //a len: 3 cap:3 data:[7 8 9]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Printf(\"b len: %d cap:%d data:%+v\\n\", len(b), cap(b), b)  //b len: 3 cap:4 data:[1 2 3]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    append_slice(a)    //显然append是没有效果的\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Printf(\"a len: %d cap:%d data:%+v\\n\", len(a), cap(a), a)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p := unsafe.Pointer(&amp;a[2])  //根据slice在内存的连续性，拿到最后一位的指针地址\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    q := uintptr(p)+8           //将指针往后移一位，因为是int，所以是8\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    t := (*int)(unsafe.Pointer(q))   \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(*t)             //输出0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    append_slice(b)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Printf(\"b len: %d cap:%d data:%+v\\n\", len(b), cap(b), b)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p1 := unsafe.Pointer(&amp;b[2])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    q1 := uintptr(p1)+8\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    t1 := (*int)(unsafe.Pointer(q1))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(*t1)    //输出10\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func append_slice(a []int) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    a = append(a, 10)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><ol start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"> &nbsp; 可以看到，直接append到slice的值，如果cap够的话，是会append上的，但是由于len的值没有改变，所以看不到，可以通过unsafe指针观察到结果。但是如果cap不够，继续append，会导致重新分配内存空间，append在新的位置上，此时通过unsafe指针也拿不到append的值。</p><ol start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>关于函数的执行顺序：</li><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></ol><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20add1(x%2Cy%20int)%20int%7B%5Cn%5Ctfmt.Println(%5C%22in%20add1.%20sum1%3D%20%5C%22%2Cx%2Cy)%5Cn%5Ctreturn%20x%2By%5Cn%7D%5Cnfunc%20add(x%2Cy%2Cz%2Ct%20int)%20int%7B%5Cn%5Ctsum%3A%3D0%5Cn%5Ctsum%3Dadd1(x%2Cy)%2Badd1(z%2Ct)%5Cn%5Ctfmt.Println(%5C%22in%20add.%20sum%3D%5C%22%2Csum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2%2C3%2C4)%2Cadd(2%2C3%2C4%2C5))%5Cn%7D%5Cn%5Cn%E7%BB%93%E6%9E%9C%EF%BC%9A%5Cnin%20add1.%20sum1%3D%20%201%202%5Cnin%20add1.%20sum1%3D%20%203%204%5Cnin%20add.%20sum%3D%2010%5Cnin%20add1.%20sum1%3D%20%202%203%5Cnin%20add1.%20sum1%3D%20%204%205%5Cnin%20add.%20sum%3D%2014%5Cn10%2014%22%2C%22id%22%3A%22INgVH%22%7D\" id=\"INgVH\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func add1(x,y int) int{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(\"in add1. sum1= \",x,y)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return x+y\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func add(x,y,z,t int) int{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    sum:=0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    sum=add1(x,y)+add1(z,t)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(\"in add. sum=\",sum)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return sum\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(add(1,2,3,4),add(2,3,4,5))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">结果：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">in add1. sum1=  1 2\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">in add1. sum1=  3 4\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">in add. sum= 10\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">in add1. sum1=  2 3\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">in add1. sum1=  4 5\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">in add. sum= 14\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">10 14</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以看到，add1的结果是最先执行的，再执行add，最后才执行fmt.Println（）.是按后序遍历的顺序。</p><h1 id=\"f43mD\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">go语言学习</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>命名返回值:没有参数的 return 语句返回已命名的返回值</li><li>println 的执行顺序。会先把函数计算结束之后，再按照顺序输出</li><li>没有条件的 switch 同 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">switch true</code> 一样。</li><li>defer函数调用会被压入一个栈中，所以后defer的值会先输出</li><li>结构体指针的使用：修改结构体指针的值时，不需要带*号。</li><li>数组定义的几种方式<a name=\"zZgyV\" target=\"_blank\"></a></li></ul><h1 id=\"asg81\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">关于切片</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>切片就像数组的引用，改变切片会改变底层的值<br></li><li>切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限<br></li><li>只是截取切片是不会改变切片大小的<br></li><li>切片的长度就是它所包含的元素个数。<br></li><li>切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数<br></li><li>切片的零值是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">nil</code><br></li><li>函数的闭包<br></li><li>接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">**type **MyFloat float64</code> &nbsp;<a name=\"X30WL\" target=\"_blank\"></a><br></li></ul><h1 id=\"M47I1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">关于方法和接口</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针</li><li>跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20Println(a%20...interface%7B%7D)%20(n%20int%2C%20err%20error)%20%7B%5Cn%5Ctreturn%20Fprintln(os.Stdout%2C%20a...)%5Cn%7D%5Cnfunc%20Sprintln(a%20...interface%7B%7D)%20string%20%7B%5Cn%5Ctp%20%3A%3D%20newPrinter()%5Cn%5Ctp.doPrintln(a)%5Cn%5Cts%20%3A%3D%20string(p.buf)%5Cn%5Ctp.free()%5Cn%5Ctreturn%20s%5Cn%7D%22%2C%22id%22%3A%22KHdZg%22%7D\" id=\"KHdZg\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func Println(a ...interface{}) (n int, err error) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return Fprintln(os.Stdout, a...)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func Sprintln(a ...interface{}) string {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p := newPrinter()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p.doPrintln(a)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    s := string(p.buf)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p.free()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return s\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">同时也重新把打印语句加复杂了一下，结果与预期相符。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22package%20main%5Cnimport%20%5C%22fmt%5C%22%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(add(1%2C1)%2Cadd(3%2C7))%2Cadd(4%2C5))%5Cn%7D%5Cn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cn3%5Cn2%5Cn10%5Cn12%5Cn9%5Cn3%2012%209%22%2C%22id%22%3A%22LczLv%22%7D\" id=\"LczLv\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">package main\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">import \"fmt\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func add(x,y int) int{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    sum:=x+y\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(sum)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return sum\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(add(1,2),add(add(1,1),add(3,7)),add(4,5))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">运行结果为：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">10\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">12\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">9\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3 12 9</span></span></pre></div></div></div><ol start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br>查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。</li></ol><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22newcap%20%3A%3D%20old.cap%5Cn%5Ctdoublecap%20%3A%3D%20newcap%20%2B%20newcap%5Cn%5Ctif%20cap%20%3E%20doublecap%20%7B%5Cn%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ctif%20old.len%20%3C%201024%20%7B%5Cn%5Ct%5Ct%5Ctnewcap%20%3D%20doublecap%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ct%2F%2F%20Check%200%20%3C%20newcap%20to%20detect%20overflow%5Cn%5Ct%5Ct%5Ct%2F%2F%20and%20prevent%20an%20infinite%20loop.%5Cn%5Ct%5Ct%5Ctfor%200%20%3C%20newcap%20%26%26%20newcap%20%3C%20cap%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%2B%3D%20newcap%20%2F%204%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Ct%2F%2F%20Set%20newcap%20to%20the%20requested%20cap%20when%5Cn%5Ct%5Ct%5Ct%2F%2F%20the%20newcap%20calculation%20overflowed.%5Cn%5Ct%5Ct%5Ctif%20newcap%20%3C%3D%200%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%22%2C%22id%22%3A%22oifNp%22%7D\" id=\"oifNp\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">newcap := old.cap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    doublecap := newcap + newcap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if cap &gt; doublecap {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        newcap = cap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    } else {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        if old.len &lt; 1024 {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            newcap = doublecap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        } else {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // Check 0 &lt; newcap to detect overflow\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // and prevent an infinite loop.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            for 0 &lt; newcap &amp;&amp; newcap &lt; cap {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                newcap += newcap / 4\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // Set newcap to the requested cap when\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // the newcap calculation overflowed.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            if newcap &lt;= 0 {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                newcap = cap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">通过代码测试上述结果：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20main()%7B%5Cn%5Ctvar%20a%20%5B%5Dint%5Cn%5Ctfor%20i%3A%3D0%3Bi%3C1500%3Bi%2B%2B%7B%5Cn%5Ct%5Cta%3Dappend(a%2Ci)%5Cn%5Ct%5Ctif%20i%25100%3D%3D0%7B%5Cn%5Ct%5Ct%5Ctfmt.Printf(%5C%22len%3A%20%25d%20%2C%20cap%3B%20%25d%5C%5Cn%5C%22%2Clen(a)%2Ccap(a))%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%7D%5Cn%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cnlen%3A%201%20%2C%20cap%3B%201%5Cnlen%3A%20101%20%2C%20cap%3B%20128%5Cnlen%3A%20201%20%2C%20cap%3B%20256%5Cnlen%3A%20301%20%2C%20cap%3B%20512%5Cnlen%3A%20401%20%2C%20cap%3B%20512%5Cnlen%3A%20501%20%2C%20cap%3B%20512%5Cnlen%3A%20601%20%2C%20cap%3B%201024%5Cnlen%3A%20701%20%2C%20cap%3B%201024%5Cnlen%3A%20801%20%2C%20cap%3B%201024%5Cnlen%3A%20901%20%2C%20cap%3B%201024%5Cnlen%3A%201001%20%2C%20cap%3B%201024%5Cnlen%3A%201101%20%2C%20cap%3B%201280%5Cnlen%3A%201201%20%2C%20cap%3B%201280%5Cnlen%3A%201301%20%2C%20cap%3B%201696%5Cnlen%3A%201401%20%2C%20cap%3B%201696%22%2C%22id%22%3A%22AsDx7%22%7D\" id=\"AsDx7\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    var a []int\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    for i:=0;i&lt;1500;i++{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        a=append(a,i)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        if i%100==0{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            fmt.Printf(\"len: %d , cap; %d\\n\",len(a),cap(a))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">输出结果为：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1 , cap; 1\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 101 , cap; 128\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 201 , cap; 256\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 301 , cap; 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 401 , cap; 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 501 , cap; 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 601 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 701 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 801 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 901 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1001 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1101 , cap; 1280\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1201 , cap; 1280\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1301 , cap; 1696\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1401 , cap; 1696</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22capmem%20%3D%20roundupsize(uintptr(newcap)%20*%20sys.PtrSize)%22%2C%22id%22%3A%22KQCI7%22%7D\" id=\"KQCI7\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">capmem = roundupsize(uintptr(newcap) * sys.PtrSize)</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20roundupsize(size%20uintptr)%20uintptr%20%7B%5Cn%5Ctif%20size%20%3C%20_MaxSmallSize%20%7B%5Cn%5Ct%5Ctif%20size%20%3C%3D%20smallSizeMax-8%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class8%5B(size%2BsmallSizeDiv-1)%2FsmallSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class128%5B(size-smallSizeMax%2BlargeSizeDiv-1)%2FlargeSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Ctif%20size%2B_PageSize%20%3C%20size%20%7B%5Cn%5Ct%5Ctreturn%20size%5Cn%5Ct%7D%5Cn%5Ctreturn%20round(size%2C%20_PageSize)%5Cn%7D%22%2C%22id%22%3A%22Yaz78%22%7D\" id=\"Yaz78\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func roundupsize(size uintptr) uintptr {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if size &lt; _MaxSmallSize {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        if size &lt;= smallSizeMax-8 {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            return uintptr(class_to_size[size_to_class8[(size+smallSizeDiv-1)/smallSizeDiv]])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        } else {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            return uintptr(class_to_size[size_to_class128[(size-smallSizeMax+largeSizeDiv-1)/largeSizeDiv]])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if size+_PageSize &lt; size {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        return size\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return round(size, _PageSize)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22size_to_class8%20%3D%20%5BsmallSizeMax%2FsmallSizeDiv%20%2B%201%5Duintnsize_to_class128%20%3D%20%5B(_MaxSmallSize-smallSizeMax)%2FlargeSizeDiv%20%2B%201%5Duintnclass_to_size%20%3D%20%5B_NumSizeClasses%5Duint16%7B0%2C%208%2C%2016%2C%2032%2C%2048%2C%2064%2C%2080%2C%2096%2C%20112%2C%20128%2C%20144%2C%20160%2C%20176%2C%20192%2C%20208%2C%20224%2C%20240%2C%20256%2C%20288%2C%20320%2C%20352%2C%20384%2C%20416%2C%20448%2C%20480%2C%20512%2C%20576%2C%20640%2C%20704%2C%20768%2C%20896%2C%201024%2C%201152%2C%201280%2C%201408%2C%201536%2C%201792%2C%202048%2C%202304%2C%202688%2C%203072%2C%203200%2C%203456%2C%204096%2C%204864%2C%205376%2C%206144%2C%206528%2C%206784%2C%206912%2C%208192%2C%209472%2C%209728%2C%2010240%2C%2010880%2C%2012288%2C%2013568%2C%2014336%2C%2016384%2C%2018432%2C%2019072%2C%2020480%2C%2021760%2C%2024576%2C%2027264%2C%2028672%2C%2032768%7D%22%2C%22id%22%3A%22tA1P9%22%7D\" id=\"tA1P9\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size_to_class8 = [smallSizeMax/smallSizeDiv + 1]uint8{0, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size_to_class128 = [(_MaxSmallSize-smallSizeMax)/largeSizeDiv + 1]uint8{31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 39, 40, 40, 40, 41, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class_to_size = [_NumSizeClasses]uint16{0, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 288, 320, 352, 384, 416, 448, 480, 512, 576, 640, 704, 768, 896, 1024, 1152, 1280, 1408, 1536, 1792, 2048, 2304, 2688, 3072, 3200, 3456, 4096, 4864, 5376, 6144, 6528, 6784, 6912, 8192, 9472, 9728, 10240, 10880, 12288, 13568, 14336, 16384, 18432, 19072, 20480, 21760, 24576, 27264, 28672, 32768}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">以int为例</p><div data-card-type=\"block\" data-lake-card=\"table\" data-card-value=\"data:%7B%22rows%22%3A4%2C%22cols%22%3A10%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Cthead%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E%E4%B8%AA%E6%95%B0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E2%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E3%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E4%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E5%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E6%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E7%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E8%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E9%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Fthead%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%E5%AD%97%E8%8A%82%E6%95%B0%3C%2Ftd%3E%3Ctd%3E8%3C%2Ftd%3E%3Ctd%3E16%3C%2Ftd%3E%3Ctd%3E24%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E40%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E56%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E72%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%3C%2Ftd%3E%3Ctd%3E8%3C%2Ftd%3E%3Ctd%3E16%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E80%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3Esize_to_class8%3C%2Ftd%3E%3Ctd%3E1%3C%2Ftd%3E%3Ctd%3E2%3C%2Ftd%3E%3Ctd%3E3%3C%2Ftd%3E%3Ctd%3E3%3C%2Ftd%3E%3Ctd%3E4%3C%2Ftd%3E%3Ctd%3E4%3C%2Ftd%3E%3Ctd%3E5%3C%2Ftd%3E%3Ctd%3E5%3C%2Ftd%3E%3Ctd%3E6%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22YMOnU%22%7D\" id=\"YMOnU\"><table class=\"lake-table\" style=\"width: 721px; outline: none; border-collapse: collapse;\"><colgroup><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"><col span=\"1\" width=\"72\"></colgroup><thead><tr style=\"height: 33px;\"><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">个数</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">2</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">3</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">4</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">5</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">6</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">7</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">8</td><td style=\"text-align: left; min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">9</td></tr></thead><tbody><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">字节数</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">8</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">16</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">24</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">32</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">40</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">48</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">56</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">64</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">72</td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">所占空间</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">8</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">16</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">32</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">32</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">48</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">48</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">64</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">64</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">80</td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">size_to_class8</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">1</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">2</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">3</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">3</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">4</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">4</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">5</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">5</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">6</td></tr></tbody></table></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><ol start=\"1\"><li>类型别名<br />\ntype S string与<br />\ntype S = string 区别？</li></ol><p>    <span>type S string是类型声明，S是一种新的类型，给S定义的方法，接口等和string没有关系。</span></p><p>而<span>type S = string只是一种别名，可以理解为，S和String是完全一样的，只是换了一种叫法而已。类型别名和原类型方法是一样的。也不能在Switch中使用两者同时作为分支。</span></p><ol start=\"2\"><li>go语言中没有按地址传递，可以深究一下如何传递slice，再回复到邮件中<cursor /></li></ol><p>    Go语言中只有按值传递，通过源码可以看到，slice是一个结构体。结构体中包括真正的数组和长度以及容量。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22type%20slice%20struct%20%7B%5Cn%5Ctarray%20unsafe.Pointer%5Cn%5Ctlen%20%20%20int%5Cn%5Ctcap%20%20%20int%5Cn%7D%22%2C%22id%22%3A%22TKhVG%22%7D\"></card><p><br /></p><p>    函数传递slice时，其实传递的slice结构体，其中包括array的首地址、len和cap。通过下面的代码可以有以下的结果:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20add_slice(a%20%5B%5Dint)%7B%5Cn%5Cta%5B0%5D%3D2%5Cn%5Cta%5B1%5D%3D3%5Cn%5Ctreturn%5Cn%7D%5Cn%5Cnfunc%20append_slice(a%20%5B%5Dint)%7B%5Cn%5Cta%3Dappend(a%2C5)%5Cn%7D%5Cn%5Cnfunc%20modify_slice(a%20*%5B%5Dint)%7B%5Cn%5Ct*a%3Dappend(*a%2C6)%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Cta%3A%3D%5B%5Dint%7B1%2C2%2C3%7D%5Cn%20%20%5Cn%5Ctadd_slice(a)%5Cn%5Ctfmt.Println(a)%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%5D%5Cn%20%20%5Cn%5Ctappend_slice(a)%5Cn%5Ctfmt.Println(a)%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%5D%5Cn%5Cn%5Ctmodify_slice(%26a)%5Cn%5Ctfmt.Println(a)%20%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%206%5D%5Cn%7D%22%2C%22id%22%3A%22jpaWj%22%7D\"></card><ol start=\"3\"><p><br /></p></ol><p>    只是改变slice内部的值时，看起来像是按引用传递，因为可以改变slice内的值，但是实际上是在参数传递的过程中，传递了array的首地址，而slice在内存中是一连串的地址，所以知道首地址就可以修改整个数组内部的值。</p><p>    但是由于是按值传递，所以不能在函数内对slice进行append。如果需要改变slice的长度，可以通过传入slice的指针。</p><p>    由于slice传递的形式，需要在编程中多多注意，避免进坑。另外看到一个关于传递slice的操作，加深了一下对slice传参的理解。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20main()%20%7B%5Cn%5Cta%20%3A%3D%20%5B%5Dint%7B7%2C8%2C9%7D%5Cn%5Ctb%3A%3D%5B%5Dint%7B%7D%5Cn%5Ctb%3Dappend(b%2C1%2C2%2C3)%20%20%2F%2Fa%2Cb%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E6%96%B9%E5%BC%8F%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%AF%BC%E8%87%B4%E4%B8%A4%E8%80%85%E7%9A%84cap%E4%B8%8D%E4%B8%80%E6%A0%B7%5Cn%5Cn%5Ctfmt.Printf(%5C%22a%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(a)%2C%20cap(a)%2C%20a)%20%20%2F%2Fa%20len%3A%203%20cap%3A3%20data%3A%5B7%208%209%5D%5Cn%5Ctfmt.Printf(%5C%22b%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(b)%2C%20cap(b)%2C%20b)%20%20%2F%2Fb%20len%3A%203%20cap%3A4%20data%3A%5B1%202%203%5D%5Cn%5Cn%5Ctappend_slice(a)%20%20%20%20%2F%2F%E6%98%BE%E7%84%B6append%E6%98%AF%E6%B2%A1%E6%9C%89%E6%95%88%E6%9E%9C%E7%9A%84%5Cn%5Ctfmt.Printf(%5C%22a%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(a)%2C%20cap(a)%2C%20a)%5Cn%5Ctp%20%3A%3D%20unsafe.Pointer(%26a%5B2%5D)%20%20%2F%2F%E6%A0%B9%E6%8D%AEslice%E5%9C%A8%E5%86%85%E5%AD%98%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%80%A7%EF%BC%8C%E6%8B%BF%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%BD%8D%E7%9A%84%E6%8C%87%E9%92%88%E5%9C%B0%E5%9D%80%5Cn%5Ctq%20%3A%3D%20uintptr(p)%2B8%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E5%B0%86%E6%8C%87%E9%92%88%E5%BE%80%E5%90%8E%E7%A7%BB%E4%B8%80%E4%BD%8D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%98%AFint%EF%BC%8C%E6%89%80%E4%BB%A5%E6%98%AF8%5Cn%5Ctt%20%3A%3D%20(*int)(unsafe.Pointer(q))%20%20%20%5Cn%5Ctfmt.Println(*t)%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA0%5Cn%5Cn%5Ctappend_slice(b)%5Cn%5Ctfmt.Printf(%5C%22b%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(b)%2C%20cap(b)%2C%20b)%5Cn%5Ctp1%20%3A%3D%20unsafe.Pointer(%26b%5B2%5D)%5Cn%5Ctq1%20%3A%3D%20uintptr(p1)%2B8%5Cn%5Ctt1%20%3A%3D%20(*int)(unsafe.Pointer(q1))%5Cn%5Ctfmt.Println(*t1)%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA10%5Cn%7D%5Cn%5Cnfunc%20append_slice(a%20%5B%5Dint)%20%7B%5Cn%5Cta%20%3D%20append(a%2C%2010)%5Cn%7D%22%2C%22id%22%3A%22vWcuo%22%7D\"></card><ol start=\"3\"><p><br /></p></ol><p>   可以看到，直接append到slice的值，如果cap够的话，是会append上的，但是由于len的值没有改变，所以看不到，可以通过unsafe指针观察到结果。但是如果cap不够，继续append，会导致重新分配内存空间，append在新的位置上，此时通过unsafe指针也拿不到append的值。</p><ol start=\"3\"><li>关于函数的执行顺序：</li><p><br /></p></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20add1(x%2Cy%20int)%20int%7B%5Cn%5Ctfmt.Println(%5C%22in%20add1.%20sum1%3D%20%5C%22%2Cx%2Cy)%5Cn%5Ctreturn%20x%2By%5Cn%7D%5Cnfunc%20add(x%2Cy%2Cz%2Ct%20int)%20int%7B%5Cn%5Ctsum%3A%3D0%5Cn%5Ctsum%3Dadd1(x%2Cy)%2Badd1(z%2Ct)%5Cn%5Ctfmt.Println(%5C%22in%20add.%20sum%3D%5C%22%2Csum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2%2C3%2C4)%2Cadd(2%2C3%2C4%2C5))%5Cn%7D%5Cn%5Cn%E7%BB%93%E6%9E%9C%EF%BC%9A%5Cnin%20add1.%20sum1%3D%20%201%202%5Cnin%20add1.%20sum1%3D%20%203%204%5Cnin%20add.%20sum%3D%2010%5Cnin%20add1.%20sum1%3D%20%202%203%5Cnin%20add1.%20sum1%3D%20%204%205%5Cnin%20add.%20sum%3D%2014%5Cn10%2014%22%2C%22id%22%3A%22INgVH%22%7D\"></card><p><br /></p><p>可以看到，add1的结果是最先执行的，再执行add，最后才执行fmt.Println（）.是按后序遍历的顺序。</p><h1 id=\"f43mD\">go语言学习</h1><ul><li>命名返回值:没有参数的 return 语句返回已命名的返回值</li><li>println 的执行顺序。会先把函数计算结束之后，再按照顺序输出</li><li>没有条件的 switch 同 <code>switch true</code> 一样。</li><li>defer函数调用会被压入一个栈中，所以后defer的值会先输出</li><li>结构体指针的使用：修改结构体指针的值时，不需要带*号。</li><li>数组定义的几种方式<a name=\"zZgyV\" target=\"_blank\"></a></li></ul><h1 id=\"asg81\">关于切片</h1><ul><li>切片就像数组的引用，改变切片会改变底层的值<br /></li><li>切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限<br /></li><li>只是截取切片是不会改变切片大小的<br /></li><li>切片的长度就是它所包含的元素个数。<br /></li><li>切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数<br /></li><li>切片的零值是 <code>nil</code><br /></li><li>函数的闭包<br /></li><li>接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，<code>**type **MyFloat float64</code>  <a name=\"X30WL\" target=\"_blank\"></a><br /></li></ul><h1 id=\"M47I1\">关于方法和接口</h1><ul><li>指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针</li><li>跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。</li></ul><p>1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？</p><p>我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20Println(a%20...interface%7B%7D)%20(n%20int%2C%20err%20error)%20%7B%5Cn%5Ctreturn%20Fprintln(os.Stdout%2C%20a...)%5Cn%7D%5Cnfunc%20Sprintln(a%20...interface%7B%7D)%20string%20%7B%5Cn%5Ctp%20%3A%3D%20newPrinter()%5Cn%5Ctp.doPrintln(a)%5Cn%5Cts%20%3A%3D%20string(p.buf)%5Cn%5Ctp.free()%5Cn%5Ctreturn%20s%5Cn%7D%22%2C%22id%22%3A%22KHdZg%22%7D\"></card><p>同时也重新把打印语句加复杂了一下，结果与预期相符。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22package%20main%5Cnimport%20%5C%22fmt%5C%22%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(add(1%2C1)%2Cadd(3%2C7))%2Cadd(4%2C5))%5Cn%7D%5Cn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cn3%5Cn2%5Cn10%5Cn12%5Cn9%5Cn3%2012%209%22%2C%22id%22%3A%22LczLv%22%7D\"></card><ol start=\"2\"><li>切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br />查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22newcap%20%3A%3D%20old.cap%5Cn%5Ctdoublecap%20%3A%3D%20newcap%20%2B%20newcap%5Cn%5Ctif%20cap%20%3E%20doublecap%20%7B%5Cn%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ctif%20old.len%20%3C%201024%20%7B%5Cn%5Ct%5Ct%5Ctnewcap%20%3D%20doublecap%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ct%2F%2F%20Check%200%20%3C%20newcap%20to%20detect%20overflow%5Cn%5Ct%5Ct%5Ct%2F%2F%20and%20prevent%20an%20infinite%20loop.%5Cn%5Ct%5Ct%5Ctfor%200%20%3C%20newcap%20%26%26%20newcap%20%3C%20cap%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%2B%3D%20newcap%20%2F%204%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Ct%2F%2F%20Set%20newcap%20to%20the%20requested%20cap%20when%5Cn%5Ct%5Ct%5Ct%2F%2F%20the%20newcap%20calculation%20overflowed.%5Cn%5Ct%5Ct%5Ctif%20newcap%20%3C%3D%200%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%22%2C%22id%22%3A%22oifNp%22%7D\"></card><p>通过代码测试上述结果：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20main()%7B%5Cn%5Ctvar%20a%20%5B%5Dint%5Cn%5Ctfor%20i%3A%3D0%3Bi%3C1500%3Bi%2B%2B%7B%5Cn%5Ct%5Cta%3Dappend(a%2Ci)%5Cn%5Ct%5Ctif%20i%25100%3D%3D0%7B%5Cn%5Ct%5Ct%5Ctfmt.Printf(%5C%22len%3A%20%25d%20%2C%20cap%3B%20%25d%5C%5Cn%5C%22%2Clen(a)%2Ccap(a))%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%7D%5Cn%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cnlen%3A%201%20%2C%20cap%3B%201%5Cnlen%3A%20101%20%2C%20cap%3B%20128%5Cnlen%3A%20201%20%2C%20cap%3B%20256%5Cnlen%3A%20301%20%2C%20cap%3B%20512%5Cnlen%3A%20401%20%2C%20cap%3B%20512%5Cnlen%3A%20501%20%2C%20cap%3B%20512%5Cnlen%3A%20601%20%2C%20cap%3B%201024%5Cnlen%3A%20701%20%2C%20cap%3B%201024%5Cnlen%3A%20801%20%2C%20cap%3B%201024%5Cnlen%3A%20901%20%2C%20cap%3B%201024%5Cnlen%3A%201001%20%2C%20cap%3B%201024%5Cnlen%3A%201101%20%2C%20cap%3B%201280%5Cnlen%3A%201201%20%2C%20cap%3B%201280%5Cnlen%3A%201301%20%2C%20cap%3B%201696%5Cnlen%3A%201401%20%2C%20cap%3B%201696%22%2C%22id%22%3A%22AsDx7%22%7D\"></card><p>如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22capmem%20%3D%20roundupsize(uintptr(newcap)%20*%20sys.PtrSize)%22%2C%22id%22%3A%22KQCI7%22%7D\"></card><p>其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20roundupsize(size%20uintptr)%20uintptr%20%7B%5Cn%5Ctif%20size%20%3C%20_MaxSmallSize%20%7B%5Cn%5Ct%5Ctif%20size%20%3C%3D%20smallSizeMax-8%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class8%5B(size%2BsmallSizeDiv-1)%2FsmallSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class128%5B(size-smallSizeMax%2BlargeSizeDiv-1)%2FlargeSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Ctif%20size%2B_PageSize%20%3C%20size%20%7B%5Cn%5Ct%5Ctreturn%20size%5Cn%5Ct%7D%5Cn%5Ctreturn%20round(size%2C%20_PageSize)%5Cn%7D%22%2C%22id%22%3A%22Yaz78%22%7D\"></card><p>其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）</p><p>当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22size_to_class8%20%3D%20%5BsmallSizeMax%2FsmallSizeDiv%20%2B%201%5Duintnsize_to_class128%20%3D%20%5B(_MaxSmallSize-smallSizeMax)%2FlargeSizeDiv%20%2B%201%5Duintnclass_to_size%20%3D%20%5B_NumSizeClasses%5Duint16%7B0%2C%208%2C%2016%2C%2032%2C%2048%2C%2064%2C%2080%2C%2096%2C%20112%2C%20128%2C%20144%2C%20160%2C%20176%2C%20192%2C%20208%2C%20224%2C%20240%2C%20256%2C%20288%2C%20320%2C%20352%2C%20384%2C%20416%2C%20448%2C%20480%2C%20512%2C%20576%2C%20640%2C%20704%2C%20768%2C%20896%2C%201024%2C%201152%2C%201280%2C%201408%2C%201536%2C%201792%2C%202048%2C%202304%2C%202688%2C%203072%2C%203200%2C%203456%2C%204096%2C%204864%2C%205376%2C%206144%2C%206528%2C%206784%2C%206912%2C%208192%2C%209472%2C%209728%2C%2010240%2C%2010880%2C%2012288%2C%2013568%2C%2014336%2C%2016384%2C%2018432%2C%2019072%2C%2020480%2C%2021760%2C%2024576%2C%2027264%2C%2028672%2C%2032768%7D%22%2C%22id%22%3A%22tA1P9%22%7D\"></card><p>可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.</p><p>而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096</p><p>以int为例</p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A4%2C%22cols%22%3A10%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Cthead%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E%E4%B8%AA%E6%95%B0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E2%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E3%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E4%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E5%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E6%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E7%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E8%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E9%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Fthead%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%E5%AD%97%E8%8A%82%E6%95%B0%3C%2Ftd%3E%3Ctd%3E8%3C%2Ftd%3E%3Ctd%3E16%3C%2Ftd%3E%3Ctd%3E24%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E40%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E56%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E72%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%3C%2Ftd%3E%3Ctd%3E8%3C%2Ftd%3E%3Ctd%3E16%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E80%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3Esize_to_class8%3C%2Ftd%3E%3Ctd%3E1%3C%2Ftd%3E%3Ctd%3E2%3C%2Ftd%3E%3Ctd%3E3%3C%2Ftd%3E%3Ctd%3E3%3C%2Ftd%3E%3Ctd%3E4%3C%2Ftd%3E%3Ctd%3E4%3C%2Ftd%3E%3Ctd%3E5%3C%2Ftd%3E%3Ctd%3E5%3C%2Ftd%3E%3Ctd%3E6%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22YMOnU%22%7D\"></card><p><br /></p>",
    "body_draft_lake": "<!doctype lake><ol start=\"1\"><li>类型别名<br />\ntype S string与<br />\ntype S = string 区别？</li></ol><p>    <span>type S string是类型声明，S是一种新的类型，给S定义的方法，接口等和string没有关系。</span></p><p>而<span>type S = string只是一种别名，可以理解为，S和String是完全一样的，只是换了一种叫法而已。类型别名和原类型方法是一样的。也不能在Switch中使用两者同时作为分支。</span></p><ol start=\"2\"><li>go语言中没有按地址传递，可以深究一下如何传递slice，再回复到邮件中<cursor /></li></ol><p>    Go语言中只有按值传递，通过源码可以看到，slice是一个结构体。结构体中包括真正的数组和长度以及容量。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22type%20slice%20struct%20%7B%5Cn%5Ctarray%20unsafe.Pointer%5Cn%5Ctlen%20%20%20int%5Cn%5Ctcap%20%20%20int%5Cn%7D%22%2C%22id%22%3A%22TKhVG%22%7D\"></card><p><br /></p><p>    函数传递slice时，其实传递的slice结构体，其中包括array的首地址、len和cap。通过下面的代码可以有以下的结果:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20add_slice(a%20%5B%5Dint)%7B%5Cn%5Cta%5B0%5D%3D2%5Cn%5Cta%5B1%5D%3D3%5Cn%5Ctreturn%5Cn%7D%5Cn%5Cnfunc%20append_slice(a%20%5B%5Dint)%7B%5Cn%5Cta%3Dappend(a%2C5)%5Cn%7D%5Cn%5Cnfunc%20modify_slice(a%20*%5B%5Dint)%7B%5Cn%5Ct*a%3Dappend(*a%2C6)%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Cta%3A%3D%5B%5Dint%7B1%2C2%2C3%7D%5Cn%20%20%5Cn%5Ctadd_slice(a)%5Cn%5Ctfmt.Println(a)%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%5D%5Cn%20%20%5Cn%5Ctappend_slice(a)%5Cn%5Ctfmt.Println(a)%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%5D%5Cn%5Cn%5Ctmodify_slice(%26a)%5Cn%5Ctfmt.Println(a)%20%20%20%2F%2F%E8%BE%93%E5%87%BA%5B2%203%203%206%5D%5Cn%7D%22%2C%22id%22%3A%22jpaWj%22%7D\"></card><ol start=\"3\"><p><br /></p></ol><p>    只是改变slice内部的值时，看起来像是按引用传递，因为可以改变slice内的值，但是实际上是在参数传递的过程中，传递了array的首地址，而slice在内存中是一连串的地址，所以知道首地址就可以修改整个数组内部的值。</p><p>    但是由于是按值传递，所以不能在函数内对slice进行append。如果需要改变slice的长度，可以通过传入slice的指针。</p><p>    由于slice传递的形式，需要在编程中多多注意，避免进坑。另外看到一个关于传递slice的操作，加深了一下对slice传参的理解。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20main()%20%7B%5Cn%5Cta%20%3A%3D%20%5B%5Dint%7B7%2C8%2C9%7D%5Cn%5Ctb%3A%3D%5B%5Dint%7B%7D%5Cn%5Ctb%3Dappend(b%2C1%2C2%2C3)%20%20%2F%2Fa%2Cb%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E6%96%B9%E5%BC%8F%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%AF%BC%E8%87%B4%E4%B8%A4%E8%80%85%E7%9A%84cap%E4%B8%8D%E4%B8%80%E6%A0%B7%5Cn%5Cn%5Ctfmt.Printf(%5C%22a%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(a)%2C%20cap(a)%2C%20a)%20%20%2F%2Fa%20len%3A%203%20cap%3A3%20data%3A%5B7%208%209%5D%5Cn%5Ctfmt.Printf(%5C%22b%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(b)%2C%20cap(b)%2C%20b)%20%20%2F%2Fb%20len%3A%203%20cap%3A4%20data%3A%5B1%202%203%5D%5Cn%5Cn%5Ctappend_slice(a)%20%20%20%20%2F%2F%E6%98%BE%E7%84%B6append%E6%98%AF%E6%B2%A1%E6%9C%89%E6%95%88%E6%9E%9C%E7%9A%84%5Cn%5Ctfmt.Printf(%5C%22a%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(a)%2C%20cap(a)%2C%20a)%5Cn%5Ctp%20%3A%3D%20unsafe.Pointer(%26a%5B2%5D)%20%20%2F%2F%E6%A0%B9%E6%8D%AEslice%E5%9C%A8%E5%86%85%E5%AD%98%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%80%A7%EF%BC%8C%E6%8B%BF%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%BD%8D%E7%9A%84%E6%8C%87%E9%92%88%E5%9C%B0%E5%9D%80%5Cn%5Ctq%20%3A%3D%20uintptr(p)%2B8%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E5%B0%86%E6%8C%87%E9%92%88%E5%BE%80%E5%90%8E%E7%A7%BB%E4%B8%80%E4%BD%8D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%98%AFint%EF%BC%8C%E6%89%80%E4%BB%A5%E6%98%AF8%5Cn%5Ctt%20%3A%3D%20(*int)(unsafe.Pointer(q))%20%20%20%5Cn%5Ctfmt.Println(*t)%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA0%5Cn%5Cn%5Ctappend_slice(b)%5Cn%5Ctfmt.Printf(%5C%22b%20len%3A%20%25d%20cap%3A%25d%20data%3A%25%2Bv%5C%5Cn%5C%22%2C%20len(b)%2C%20cap(b)%2C%20b)%5Cn%5Ctp1%20%3A%3D%20unsafe.Pointer(%26b%5B2%5D)%5Cn%5Ctq1%20%3A%3D%20uintptr(p1)%2B8%5Cn%5Ctt1%20%3A%3D%20(*int)(unsafe.Pointer(q1))%5Cn%5Ctfmt.Println(*t1)%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA10%5Cn%7D%5Cn%5Cnfunc%20append_slice(a%20%5B%5Dint)%20%7B%5Cn%5Cta%20%3D%20append(a%2C%2010)%5Cn%7D%22%2C%22id%22%3A%22vWcuo%22%7D\"></card><ol start=\"3\"><p><br /></p></ol><p>   可以看到，直接append到slice的值，如果cap够的话，是会append上的，但是由于len的值没有改变，所以看不到，可以通过unsafe指针观察到结果。但是如果cap不够，继续append，会导致重新分配内存空间，append在新的位置上，此时通过unsafe指针也拿不到append的值。</p><ol start=\"3\"><li>关于函数的执行顺序：</li><p><br /></p></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20add1(x%2Cy%20int)%20int%7B%5Cn%5Ctfmt.Println(%5C%22in%20add1.%20sum1%3D%20%5C%22%2Cx%2Cy)%5Cn%5Ctreturn%20x%2By%5Cn%7D%5Cnfunc%20add(x%2Cy%2Cz%2Ct%20int)%20int%7B%5Cn%5Ctsum%3A%3D0%5Cn%5Ctsum%3Dadd1(x%2Cy)%2Badd1(z%2Ct)%5Cn%5Ctfmt.Println(%5C%22in%20add.%20sum%3D%5C%22%2Csum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2%2C3%2C4)%2Cadd(2%2C3%2C4%2C5))%5Cn%7D%5Cn%5Cn%E7%BB%93%E6%9E%9C%EF%BC%9A%5Cnin%20add1.%20sum1%3D%20%201%202%5Cnin%20add1.%20sum1%3D%20%203%204%5Cnin%20add.%20sum%3D%2010%5Cnin%20add1.%20sum1%3D%20%202%203%5Cnin%20add1.%20sum1%3D%20%204%205%5Cnin%20add.%20sum%3D%2014%5Cn10%2014%22%2C%22id%22%3A%22INgVH%22%7D\"></card><p><br /></p><p>可以看到，add1的结果是最先执行的，再执行add，最后才执行fmt.Println（）.是按后序遍历的顺序。</p><h1 id=\"f43mD\">go语言学习</h1><ul><li>命名返回值:没有参数的 return 语句返回已命名的返回值</li><li>println 的执行顺序。会先把函数计算结束之后，再按照顺序输出</li><li>没有条件的 switch 同 <code>switch true</code> 一样。</li><li>defer函数调用会被压入一个栈中，所以后defer的值会先输出</li><li>结构体指针的使用：修改结构体指针的值时，不需要带*号。</li><li>数组定义的几种方式<a name=\"zZgyV\" target=\"_blank\"></a></li></ul><h1 id=\"asg81\">关于切片</h1><ul><li>切片就像数组的引用，改变切片会改变底层的值<br /></li><li>切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限<br /></li><li>只是截取切片是不会改变切片大小的<br /></li><li>切片的长度就是它所包含的元素个数。<br /></li><li>切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数<br /></li><li>切片的零值是 <code>nil</code><br /></li><li>函数的闭包<br /></li><li>接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，<code>**type **MyFloat float64</code>  <a name=\"X30WL\" target=\"_blank\"></a><br /></li></ul><h1 id=\"M47I1\">关于方法和接口</h1><ul><li>指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针</li><li>跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。</li></ul><p>1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？</p><p>我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20Println(a%20...interface%7B%7D)%20(n%20int%2C%20err%20error)%20%7B%5Cn%5Ctreturn%20Fprintln(os.Stdout%2C%20a...)%5Cn%7D%5Cnfunc%20Sprintln(a%20...interface%7B%7D)%20string%20%7B%5Cn%5Ctp%20%3A%3D%20newPrinter()%5Cn%5Ctp.doPrintln(a)%5Cn%5Cts%20%3A%3D%20string(p.buf)%5Cn%5Ctp.free()%5Cn%5Ctreturn%20s%5Cn%7D%22%2C%22id%22%3A%22KHdZg%22%7D\"></card><p>同时也重新把打印语句加复杂了一下，结果与预期相符。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22package%20main%5Cnimport%20%5C%22fmt%5C%22%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(add(1%2C1)%2Cadd(3%2C7))%2Cadd(4%2C5))%5Cn%7D%5Cn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cn3%5Cn2%5Cn10%5Cn12%5Cn9%5Cn3%2012%209%22%2C%22id%22%3A%22LczLv%22%7D\"></card><ol start=\"2\"><li>切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br />查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22newcap%20%3A%3D%20old.cap%5Cn%5Ctdoublecap%20%3A%3D%20newcap%20%2B%20newcap%5Cn%5Ctif%20cap%20%3E%20doublecap%20%7B%5Cn%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ctif%20old.len%20%3C%201024%20%7B%5Cn%5Ct%5Ct%5Ctnewcap%20%3D%20doublecap%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ct%2F%2F%20Check%200%20%3C%20newcap%20to%20detect%20overflow%5Cn%5Ct%5Ct%5Ct%2F%2F%20and%20prevent%20an%20infinite%20loop.%5Cn%5Ct%5Ct%5Ctfor%200%20%3C%20newcap%20%26%26%20newcap%20%3C%20cap%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%2B%3D%20newcap%20%2F%204%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Ct%2F%2F%20Set%20newcap%20to%20the%20requested%20cap%20when%5Cn%5Ct%5Ct%5Ct%2F%2F%20the%20newcap%20calculation%20overflowed.%5Cn%5Ct%5Ct%5Ctif%20newcap%20%3C%3D%200%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%22%2C%22id%22%3A%22oifNp%22%7D\"></card><p>通过代码测试上述结果：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20main()%7B%5Cn%5Ctvar%20a%20%5B%5Dint%5Cn%5Ctfor%20i%3A%3D0%3Bi%3C1500%3Bi%2B%2B%7B%5Cn%5Ct%5Cta%3Dappend(a%2Ci)%5Cn%5Ct%5Ctif%20i%25100%3D%3D0%7B%5Cn%5Ct%5Ct%5Ctfmt.Printf(%5C%22len%3A%20%25d%20%2C%20cap%3B%20%25d%5C%5Cn%5C%22%2Clen(a)%2Ccap(a))%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%7D%5Cn%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cnlen%3A%201%20%2C%20cap%3B%201%5Cnlen%3A%20101%20%2C%20cap%3B%20128%5Cnlen%3A%20201%20%2C%20cap%3B%20256%5Cnlen%3A%20301%20%2C%20cap%3B%20512%5Cnlen%3A%20401%20%2C%20cap%3B%20512%5Cnlen%3A%20501%20%2C%20cap%3B%20512%5Cnlen%3A%20601%20%2C%20cap%3B%201024%5Cnlen%3A%20701%20%2C%20cap%3B%201024%5Cnlen%3A%20801%20%2C%20cap%3B%201024%5Cnlen%3A%20901%20%2C%20cap%3B%201024%5Cnlen%3A%201001%20%2C%20cap%3B%201024%5Cnlen%3A%201101%20%2C%20cap%3B%201280%5Cnlen%3A%201201%20%2C%20cap%3B%201280%5Cnlen%3A%201301%20%2C%20cap%3B%201696%5Cnlen%3A%201401%20%2C%20cap%3B%201696%22%2C%22id%22%3A%22AsDx7%22%7D\"></card><p>如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22capmem%20%3D%20roundupsize(uintptr(newcap)%20*%20sys.PtrSize)%22%2C%22id%22%3A%22KQCI7%22%7D\"></card><p>其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22func%20roundupsize(size%20uintptr)%20uintptr%20%7B%5Cn%5Ctif%20size%20%3C%20_MaxSmallSize%20%7B%5Cn%5Ct%5Ctif%20size%20%3C%3D%20smallSizeMax-8%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class8%5B(size%2BsmallSizeDiv-1)%2FsmallSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class128%5B(size-smallSizeMax%2BlargeSizeDiv-1)%2FlargeSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Ctif%20size%2B_PageSize%20%3C%20size%20%7B%5Cn%5Ct%5Ctreturn%20size%5Cn%5Ct%7D%5Cn%5Ctreturn%20round(size%2C%20_PageSize)%5Cn%7D%22%2C%22id%22%3A%22Yaz78%22%7D\"></card><p>其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）</p><p>当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22size_to_class8%20%3D%20%5BsmallSizeMax%2FsmallSizeDiv%20%2B%201%5Duintnsize_to_class128%20%3D%20%5B(_MaxSmallSize-smallSizeMax)%2FlargeSizeDiv%20%2B%201%5Duintnclass_to_size%20%3D%20%5B_NumSizeClasses%5Duint16%7B0%2C%208%2C%2016%2C%2032%2C%2048%2C%2064%2C%2080%2C%2096%2C%20112%2C%20128%2C%20144%2C%20160%2C%20176%2C%20192%2C%20208%2C%20224%2C%20240%2C%20256%2C%20288%2C%20320%2C%20352%2C%20384%2C%20416%2C%20448%2C%20480%2C%20512%2C%20576%2C%20640%2C%20704%2C%20768%2C%20896%2C%201024%2C%201152%2C%201280%2C%201408%2C%201536%2C%201792%2C%202048%2C%202304%2C%202688%2C%203072%2C%203200%2C%203456%2C%204096%2C%204864%2C%205376%2C%206144%2C%206528%2C%206784%2C%206912%2C%208192%2C%209472%2C%209728%2C%2010240%2C%2010880%2C%2012288%2C%2013568%2C%2014336%2C%2016384%2C%2018432%2C%2019072%2C%2020480%2C%2021760%2C%2024576%2C%2027264%2C%2028672%2C%2032768%7D%22%2C%22id%22%3A%22tA1P9%22%7D\"></card><p>可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.</p><p>而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096</p><p>以int为例</p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A4%2C%22cols%22%3A10%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3Ccol%20span%3D%5C%221%5C%22%20width%3D%5C%2272%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Cthead%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E%E4%B8%AA%E6%95%B0%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E1%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E2%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E3%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E4%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E5%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E6%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E7%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E8%3C%2Ftd%3E%3Ctd%20style%3D%5C%22text-align%3A%20left%3B%5C%22%3E9%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Fthead%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%E5%AD%97%E8%8A%82%E6%95%B0%3C%2Ftd%3E%3Ctd%3E8%3C%2Ftd%3E%3Ctd%3E16%3C%2Ftd%3E%3Ctd%3E24%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E40%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E56%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E72%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%3C%2Ftd%3E%3Ctd%3E8%3C%2Ftd%3E%3Ctd%3E16%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E32%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E48%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E64%3C%2Ftd%3E%3Ctd%3E80%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3Esize_to_class8%3C%2Ftd%3E%3Ctd%3E1%3C%2Ftd%3E%3Ctd%3E2%3C%2Ftd%3E%3Ctd%3E3%3C%2Ftd%3E%3Ctd%3E3%3C%2Ftd%3E%3Ctd%3E4%3C%2Ftd%3E%3Ctd%3E4%3C%2Ftd%3E%3Ctd%3E5%3C%2Ftd%3E%3Ctd%3E5%3C%2Ftd%3E%3Ctd%3E6%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22YMOnU%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-04T07:07:02.000Z",
    "deleted_at": null,
    "created_at": "2019-07-04T03:47:16.000Z",
    "updated_at": "2020-09-06T15:29:39.000Z",
    "published_at": "2019-07-04T07:07:02.000Z",
    "first_published_at": "2019-07-04T07:07:02.000Z",
    "word_count": 2672,
    "cover": null,
    "description": "类型别名type S string与type S = string 区别？    type S string是类型声明，S是一种新的类型，给S定义的方法，接口等和string没有关系。而type S = string只是一种别名，可以理解为，S和String是完全一样的，只是换了一种叫法而已。...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2025373,
    "slug": "qhz9md",
    "title": "2019.7.2 日报 余国聪",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"4TZ5B\"></a>\n# 2019.7.2 日报 余国聪\n配置了Ubuntu相关编程环境，学习Go语言基础内容，主要是跟着官方教程走一遍，对比C++的一些不同点学习。内容包括：\n<a name=\"895qu\"></a>\n# 一.Go语言变量、函数\n<a name=\"RPnwo\"></a>\n## 1.变量的初始化\n\n- 可以通过 `var a int` 或者采用 `a:=3` 省略变量的类型，Go语言会自动推导变量的类型。\n<a name=\"qgIZR\"></a>\n## 2.Go语言的基本类型\n\n- 多了一个rune类型，教程里没有仔细介绍，也很少使用，之后再注意。\n<a name=\"DiP7M\"></a>\n## 3.类型转换\n\n- Go语言中不同类型的项之间需要显示转换，没有隐式类型转换。\n<a name=\"WL522\"></a>\n## 4.函数有多返回值\n<a name=\"w018I\"></a>\n# 二.Go语言中的流程控制\n<a name=\"dUzLI\"></a>\n## 1.Go语言中的循环只有for\n\n- 所有的循环都采用for来实现，for的使用与C++类似，但是for后面不需要小括号，一定需要大括号。\n- 可以在for循环中定义变量，但作用于只在for循环中。\n- 需要注意的是，Go语言只有后置++，没有前置++。\n- 另外，for语句中可以有空项，但是分号要写上。\n- 当for用来写while循环时，可以直接采用 `for i<100{}` ，不需要写上全部分号。\n<a name=\"wrS1D\"></a>\n## 2.if语句\n\n- if语句表达式外不需要小括号，但是一定需要大括号，这点与for语句的使用是类似的。\n- 可以在if语句中执行一个简单的语句，分号隔开后再加判断语句。\n- 同样，else后面也需要大括号\n<a name=\"pi810\"></a>\n## 3.switch语句\n\n- Go语言的switch中的case可以不是常量，也可以不是整数。\n- Switch中的case语句，自带break，不需要再写break。\n<a name=\"ROV20\"></a>\n## 4.defer语句\n\n- defer语句会推迟到外层函数执行结束后执行。\n- defer语句会压栈，当有多个defer语句时，后面的defer语句会先执行。\n<a name=\"5xsBA\"></a>\n# 三.slice\n\n- 切片就像数组的引用，改变切片会改变底层的值\n- 切片的默认行为，可以不写完整的上下限，切片默认有上下限\n- 只是截取切片是不会改变切片大小的\n- 切片的长度就是它所包含的元素个数，容量是从它的第一个元素开始数，到其底层数组元素末尾的个数\n- 切片的零值是 `nil`\n<a name=\"SoN1j\"></a>\n# 四.主要问题记录\n<a name=\"oqDDX\"></a>\n## 1. fmt.Println()函数中的执行顺序问题\n当Println()中打印多个函数的执行结果时，Println()会先顺序调用每个函数，将其结果保存，之后再顺序打印。例子如下：\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc add(x,y int) int{\n\tsum:=x+y\n\tfmt.Println(sum)\n\treturn sum\n}\n\nfunc main(){\n\tfmt.Println(add(1,2),add(2,3))\n}\n```\n\n执行结果为：\n\n```go\n3\n5\n3 5\n```\n\n<a name=\"GRPRd\"></a>\n## 2.切片的容量扩展问题\n类似于C++中的vector，切片的容量扩展，大部分时候也是采用2倍扩展，但是也有稍许的差别，在学习过程中无意发现，查看源码可以看到append的实现。就int而言，当元素个数小于20时，当slice的容量不够时，继续append会将cap+1，超过20后才会cap*2。\n\n\n",
    "body_draft": "<a name=\"4TZ5B\"></a>\n# 2019.7.2 日报 余国聪\n配置了Ubuntu相关编程环境，学习Go语言基础内容，主要是跟着官方教程走一遍，对比C++的一些不同点学习。内容包括：\n<a name=\"895qu\"></a>\n# 一.Go语言变量、函数\n<a name=\"RPnwo\"></a>\n## 1.变量的初始化\n\n- 可以通过 `var a int` 或者采用 `a:=3` 省略变量的类型，Go语言会自动推导变量的类型。\n<a name=\"qgIZR\"></a>\n## 2.Go语言的基本类型\n\n- 多了一个rune类型，教程里没有仔细介绍，也很少使用，之后再注意。\n<a name=\"DiP7M\"></a>\n## 3.类型转换\n\n- Go语言中不同类型的项之间需要显示转换，没有隐式类型转换。\n<a name=\"WL522\"></a>\n## 4.函数有多返回值\n<a name=\"w018I\"></a>\n# 二.Go语言中的流程控制\n<a name=\"dUzLI\"></a>\n## 1.Go语言中的循环只有for\n\n- 所有的循环都采用for来实现，for的使用与C++类似，但是for后面不需要小括号，一定需要大括号。\n- 可以在for循环中定义变量，但作用于只在for循环中。\n- 需要注意的是，Go语言只有后置++，没有前置++。\n- 另外，for语句中可以有空项，但是分号要写上。\n- 当for用来写while循环时，可以直接采用 `for i<100{}` ，不需要写上全部分号。\n<a name=\"wrS1D\"></a>\n## 2.if语句\n\n- if语句表达式外不需要小括号，但是一定需要大括号，这点与for语句的使用是类似的。\n- 可以在if语句中执行一个简单的语句，分号隔开后再加判断语句。\n- 同样，else后面也需要大括号\n<a name=\"pi810\"></a>\n## 3.switch语句\n\n- Go语言的switch中的case可以不是常量，也可以不是整数。\n- Switch中的case语句，自带break，不需要再写break。\n<a name=\"ROV20\"></a>\n## 4.defer语句\n\n- defer语句会推迟到外层函数执行结束后执行。\n- defer语句会压栈，当有多个defer语句时，后面的defer语句会先执行。\n<a name=\"5xsBA\"></a>\n# 三.slice\n\n- 切片就像数组的引用，改变切片会改变底层的值\n- 切片的默认行为，可以不写完整的上下限，切片默认有上下限\n- 只是截取切片是不会改变切片大小的\n- 切片的长度就是它所包含的元素个数，容量是从它的第一个元素开始数，到其底层数组元素末尾的个数\n- 切片的零值是 `nil`\n<a name=\"SoN1j\"></a>\n# 四.主要问题记录\n<a name=\"oqDDX\"></a>\n## 1. fmt.Println()函数中的执行顺序问题\n当Println()中打印多个函数的执行结果时，Println()会先顺序调用每个函数，将其结果保存，之后再顺序打印。例子如下：\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc add(x,y int) int{\n\tsum:=x+y\n\tfmt.Println(sum)\n\treturn sum\n}\n\nfunc main(){\n\tfmt.Println(add(1,2),add(2,3))\n}\n```\n\n执行结果为：\n\n```go\n3\n5\n3 5\n```\n\n<a name=\"GRPRd\"></a>\n## 2.切片的容量扩展问题\n类似于C++中的vector，切片的容量扩展，大部分时候也是采用2倍扩展，但是也有稍许的差别，在学习过程中无意发现，查看源码可以看到append的实现。就int而言，当元素个数小于20时，当slice的容量不够时，继续append会将cap+1，超过20后才会cap*2。\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><h1 id=\"4TZ5B\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">2019.7.2 日报 余国聪</h1><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">配置了Ubuntu相关编程环境，学习Go语言基础内容，主要是跟着官方教程走一遍，对比C++的一些不同点学习。内容包括：</p><h1 id=\"895qu\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">一.Go语言变量、函数</h1><h2 id=\"RPnwo\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">1.变量的初始化</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>可以通过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">var a int</code> 或者采用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">a:=3</code> 省略变量的类型，Go语言会自动推导变量的类型。</li></ul><h2 id=\"qgIZR\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">2.Go语言的基本类型</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>多了一个rune类型，教程里没有仔细介绍，也很少使用，之后再注意。</li></ul><h2 id=\"DiP7M\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">3.类型转换</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>Go语言中不同类型的项之间需要显示转换，没有隐式类型转换。</li></ul><h2 id=\"WL522\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">4.函数有多返回值</h2><h1 id=\"w018I\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">二.Go语言中的流程控制</h1><h2 id=\"dUzLI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">1.Go语言中的循环只有for</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>所有的循环都采用for来实现，for的使用与C++类似，但是for后面不需要小括号，一定需要大括号。</li><li>可以在for循环中定义变量，但作用于只在for循环中。</li><li>需要注意的是，Go语言只有后置++，没有前置++。</li><li>另外，for语句中可以有空项，但是分号要写上。</li><li>当for用来写while循环时，可以直接采用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">for i&lt;100{}</code> ，不需要写上全部分号。</li></ul><h2 id=\"wrS1D\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">2.if语句</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>if语句表达式外不需要小括号，但是一定需要大括号，这点与for语句的使用是类似的。</li><li>可以在if语句中执行一个简单的语句，分号隔开后再加判断语句。</li><li>同样，else后面也需要大括号</li></ul><h2 id=\"pi810\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">3.switch语句</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>Go语言的switch中的case可以不是常量，也可以不是整数。</li><li>Switch中的case语句，自带break，不需要再写break。</li></ul><h2 id=\"ROV20\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">4.defer语句</h2><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>defer语句会推迟到外层函数执行结束后执行。</li><li>defer语句会压栈，当有多个defer语句时，后面的defer语句会先执行。</li></ul><h1 id=\"5xsBA\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">三.slice</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>切片就像数组的引用，改变切片会改变底层的值</li><li>切片的默认行为，可以不写完整的上下限，切片默认有上下限</li><li><span style=\"color: #000000;\">只是截取切片是不会改变切片大小的</span></li><li>切片的长度就是它所包含的元素个数，<span>容量是从它的第一个元素开始数，到其底层数组元素末尾的个数</span></li><li><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">切片的零值是 </span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">nil</code></li></ul><h1 id=\"SoN1j\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">四.主要问题记录</h1><h2 id=\"oqDDX\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">1. fmt.Println()函数中的执行顺序问题</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当Println()中打印多个函数的执行结果时，Println()会先顺序调用每个函数，将其结果保存，之后再顺序打印。例子如下：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22package%20main%5Cn%5Cnimport%20%5C%22fmt%5C%22%5Cn%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(2%2C3))%5Cn%7D%22%2C%22id%22%3A%228DX2D%22%7D\" id=\"8DX2D\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">package main\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">import \"fmt\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func add(x,y int) int{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    sum:=x+y\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(sum)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return sum\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(add(1,2),add(2,3))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">执行结果为：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%223%5Cn5%5Cn3%205%22%2C%22id%22%3A%227hAXa%22%7D\" id=\"7hAXa\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">5\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3 5</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h2 id=\"GRPRd\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">2.切片的容量扩展问题</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">类似于C++中的vector，切片的容量扩展，大部分时候也是采用2倍扩展，但是也有稍许的差别，在学习过程中无意发现，查看源码可以看到append的实现。就int而言，当元素个数小于20时，当slice的容量不够时，继续append会将cap+1，超过20<span data-lake-element=\"cursor\"></span>后才会cap*2。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><h1 id=\"4TZ5B\">2019.7.2 日报 余国聪</h1><p>配置了Ubuntu相关编程环境，学习Go语言基础内容，主要是跟着官方教程走一遍，对比C++的一些不同点学习。内容包括：</p><h1 id=\"895qu\">一.Go语言变量、函数</h1><h2 id=\"RPnwo\">1.变量的初始化</h2><ul><li>可以通过 <code>var a int</code> 或者采用 <code>a:=3</code> 省略变量的类型，Go语言会自动推导变量的类型。</li></ul><h2 id=\"qgIZR\">2.Go语言的基本类型</h2><ul><li>多了一个rune类型，教程里没有仔细介绍，也很少使用，之后再注意。</li></ul><h2 id=\"DiP7M\">3.类型转换</h2><ul><li>Go语言中不同类型的项之间需要显示转换，没有隐式类型转换。</li></ul><h2 id=\"WL522\">4.函数有多返回值</h2><h1 id=\"w018I\">二.Go语言中的流程控制</h1><h2 id=\"dUzLI\">1.Go语言中的循环只有for</h2><ul><li>所有的循环都采用for来实现，for的使用与C++类似，但是for后面不需要小括号，一定需要大括号。</li><li>可以在for循环中定义变量，但作用于只在for循环中。</li><li>需要注意的是，Go语言只有后置++，没有前置++。</li><li>另外，for语句中可以有空项，但是分号要写上。</li><li>当for用来写while循环时，可以直接采用 <code>for i&lt;100{}</code> ，不需要写上全部分号。</li></ul><h2 id=\"wrS1D\">2.if语句</h2><ul><li>if语句表达式外不需要小括号，但是一定需要大括号，这点与for语句的使用是类似的。</li><li>可以在if语句中执行一个简单的语句，分号隔开后再加判断语句。</li><li>同样，else后面也需要大括号</li></ul><h2 id=\"pi810\">3.switch语句</h2><ul><li>Go语言的switch中的case可以不是常量，也可以不是整数。</li><li>Switch中的case语句，自带break，不需要再写break。</li></ul><h2 id=\"ROV20\">4.defer语句</h2><ul><li>defer语句会推迟到外层函数执行结束后执行。</li><li>defer语句会压栈，当有多个defer语句时，后面的defer语句会先执行。</li></ul><h1 id=\"5xsBA\">三.slice</h1><ul><li>切片就像数组的引用，改变切片会改变底层的值</li><li>切片的默认行为，可以不写完整的上下限，切片默认有上下限</li><li><span style=\"color: #000000;\">只是截取切片是不会改变切片大小的</span></li><li>切片的长度就是它所包含的元素个数，<span>容量是从它的第一个元素开始数，到其底层数组元素末尾的个数</span></li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">切片的零值是 </span><code>nil</code></li></ul><h1 id=\"SoN1j\">四.主要问题记录</h1><h2 id=\"oqDDX\">1. fmt.Println()函数中的执行顺序问题</h2><p>当Println()中打印多个函数的执行结果时，Println()会先顺序调用每个函数，将其结果保存，之后再顺序打印。例子如下：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22package%20main%5Cn%5Cnimport%20%5C%22fmt%5C%22%5Cn%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(2%2C3))%5Cn%7D%22%2C%22id%22%3A%228DX2D%22%7D\"></card><p><br /></p><p>执行结果为：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%223%5Cn5%5Cn3%205%22%2C%22id%22%3A%227hAXa%22%7D\"></card><p><br /></p><h2 id=\"GRPRd\">2.切片的容量扩展问题</h2><p>类似于C++中的vector，切片的容量扩展，大部分时候也是采用2倍扩展，但是也有稍许的差别，在学习过程中无意发现，查看源码可以看到append的实现。就int而言，当元素个数小于20时，当slice的容量不够时，继续append会将cap+1，超过20<cursor />后才会cap*2。</p><p><br /></p><p><br /></p>",
    "body_draft_lake": "<!doctype lake><h1 id=\"4TZ5B\">2019.7.2 日报 余国聪</h1><p>配置了Ubuntu相关编程环境，学习Go语言基础内容，主要是跟着官方教程走一遍，对比C++的一些不同点学习。内容包括：</p><h1 id=\"895qu\">一.Go语言变量、函数</h1><h2 id=\"RPnwo\">1.变量的初始化</h2><ul><li>可以通过 <code>var a int</code> 或者采用 <code>a:=3</code> 省略变量的类型，Go语言会自动推导变量的类型。</li></ul><h2 id=\"qgIZR\">2.Go语言的基本类型</h2><ul><li>多了一个rune类型，教程里没有仔细介绍，也很少使用，之后再注意。</li></ul><h2 id=\"DiP7M\">3.类型转换</h2><ul><li>Go语言中不同类型的项之间需要显示转换，没有隐式类型转换。</li></ul><h2 id=\"WL522\">4.函数有多返回值</h2><h1 id=\"w018I\">二.Go语言中的流程控制</h1><h2 id=\"dUzLI\">1.Go语言中的循环只有for</h2><ul><li>所有的循环都采用for来实现，for的使用与C++类似，但是for后面不需要小括号，一定需要大括号。</li><li>可以在for循环中定义变量，但作用于只在for循环中。</li><li>需要注意的是，Go语言只有后置++，没有前置++。</li><li>另外，for语句中可以有空项，但是分号要写上。</li><li>当for用来写while循环时，可以直接采用 <code>for i&lt;100{}</code> ，不需要写上全部分号。</li></ul><h2 id=\"wrS1D\">2.if语句</h2><ul><li>if语句表达式外不需要小括号，但是一定需要大括号，这点与for语句的使用是类似的。</li><li>可以在if语句中执行一个简单的语句，分号隔开后再加判断语句。</li><li>同样，else后面也需要大括号</li></ul><h2 id=\"pi810\">3.switch语句</h2><ul><li>Go语言的switch中的case可以不是常量，也可以不是整数。</li><li>Switch中的case语句，自带break，不需要再写break。</li></ul><h2 id=\"ROV20\">4.defer语句</h2><ul><li>defer语句会推迟到外层函数执行结束后执行。</li><li>defer语句会压栈，当有多个defer语句时，后面的defer语句会先执行。</li></ul><h1 id=\"5xsBA\">三.slice</h1><ul><li>切片就像数组的引用，改变切片会改变底层的值</li><li>切片的默认行为，可以不写完整的上下限，切片默认有上下限</li><li><span style=\"color: #000000;\">只是截取切片是不会改变切片大小的</span></li><li>切片的长度就是它所包含的元素个数，<span>容量是从它的第一个元素开始数，到其底层数组元素末尾的个数</span></li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">切片的零值是 </span><code>nil</code></li></ul><h1 id=\"SoN1j\">四.主要问题记录</h1><h2 id=\"oqDDX\">1. fmt.Println()函数中的执行顺序问题</h2><p>当Println()中打印多个函数的执行结果时，Println()会先顺序调用每个函数，将其结果保存，之后再顺序打印。例子如下：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22package%20main%5Cn%5Cnimport%20%5C%22fmt%5C%22%5Cn%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(2%2C3))%5Cn%7D%22%2C%22id%22%3A%228DX2D%22%7D\"></card><p><br /></p><p>执行结果为：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%223%5Cn5%5Cn3%205%22%2C%22id%22%3A%227hAXa%22%7D\"></card><p><br /></p><h2 id=\"GRPRd\">2.切片的容量扩展问题</h2><p>类似于C++中的vector，切片的容量扩展，大部分时候也是采用2倍扩展，但是也有稍许的差别，在学习过程中无意发现，查看源码可以看到append的实现。就int而言，当元素个数小于20时，当slice的容量不够时，继续append会将cap+1，超过20<cursor />后才会cap*2。</p><p><br /></p><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-02T12:19:30.000Z",
    "deleted_at": null,
    "created_at": "2019-07-02T10:54:33.000Z",
    "updated_at": "2020-09-06T15:29:39.000Z",
    "published_at": "2019-07-02T12:19:30.000Z",
    "first_published_at": "2019-07-02T11:57:35.000Z",
    "word_count": 801,
    "cover": null,
    "description": "2019.7.2 日报 余国聪配置了Ubuntu相关编程环境，学习Go语言基础内容，主要是跟着官方教程走一遍，对比C++的一些不同点学习。内容包括：一.Go语言变量、函数1.变量的初始化可以通过 var a int 或者采用 a:=3 省略变量的类型，Go语言会自动推导变量的类型。2.Go语言...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2019568,
    "slug": "fff20p",
    "title": "go语言学习",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "- 命名返回值:没有参数的 return 语句返回已命名的返回值\n- println 的执行顺序。会先把函数计算结束之后，再按照顺序输出\n- 没有条件的 switch 同 `switch true` 一样。\n- defer函数调用会被压入一个栈中，所以后defer的值会先输出\n- 结构体指针的使用：修改结构体指针的值时，不需要带*号。\n- 数组定义的几种方式\n<a name=\"zZgyV\"></a>\n# 关于切片\n\n- 切片就像数组的引用，改变切片会改变底层的值\n- 切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限\n- 只是截取切片是不会改变切片大小的\n\n- 切片的长度就是它所包含的元素个数。\n- 切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数\n- 切片的零值是 `nil`\n\n- 函数的闭包\n- 接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`**type **MyFloat float64 `  \n<a name=\"X30WL\"></a>\n# 关于方法和接口\n\n- 指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针\n- 跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。\n\n\n\n1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？<br />我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。\n\n```go\nfunc Println(a ...interface{}) (n int, err error) {\n\treturn Fprintln(os.Stdout, a...)\n}\nfunc Sprintln(a ...interface{}) string {\n\tp := newPrinter()\n\tp.doPrintln(a)\n\ts := string(p.buf)\n\tp.free()\n\treturn s\n}\n```\n同时也重新把打印语句加复杂了一下，结果与预期相符。\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc add(x,y int) int{\n\tsum:=x+y\n\tfmt.Println(sum)\n\treturn sum\n}\n\nfunc main(){\n\tfmt.Println(add(1,2),add(add(1,1),add(3,7)),add(4,5))\n}\n运行结果为：\n3\n2\n10\n12\n9\n3 12 9\n```\n\n2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br />查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。\n\n```go\n\tnewcap := old.cap\n\tdoublecap := newcap + newcap\n\tif cap > doublecap {\n\t\tnewcap = cap\n\t} else {\n\t\tif old.len < 1024 {\n\t\t\tnewcap = doublecap\n\t\t} else {\n\t\t\t// Check 0 < newcap to detect overflow\n\t\t\t// and prevent an infinite loop.\n\t\t\tfor 0 < newcap && newcap < cap {\n\t\t\t\tnewcap += newcap / 4\n\t\t\t}\n\t\t\t// Set newcap to the requested cap when\n\t\t\t// the newcap calculation overflowed.\n\t\t\tif newcap <= 0 {\n\t\t\t\tnewcap = cap\n\t\t\t}\n\t\t}\n\t}\n```\n通过代码测试上述结果：\n\n```go\nfunc main(){\n\tvar a []int\n\tfor i:=0;i<1500;i++{\n\t\ta=append(a,i)\n\t\tif i%100==0{\n\t\t\tfmt.Printf(\"len: %d , cap; %d\\n\",len(a),cap(a))\n\t\t}\n\t}\n}\n\n输出结果为：\nlen: 1 , cap; 1\nlen: 101 , cap; 128\nlen: 201 , cap; 256\nlen: 301 , cap; 512\nlen: 401 , cap; 512\nlen: 501 , cap; 512\nlen: 601 , cap; 1024\nlen: 701 , cap; 1024\nlen: 801 , cap; 1024\nlen: 901 , cap; 1024\nlen: 1001 , cap; 1024\nlen: 1101 , cap; 1280\nlen: 1201 , cap; 1280\nlen: 1301 , cap; 1696\nlen: 1401 , cap; 1696\n```\n如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：\n\n```go\ncapmem = roundupsize(uintptr(newcap) * sys.PtrSize)\n```\n\n其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下\n\n```go\nfunc roundupsize(size uintptr) uintptr {\n\tif size < _MaxSmallSize {\n\t\tif size <= smallSizeMax-8 {\n\t\t\treturn uintptr(class_to_size[size_to_class8[(size+smallSizeDiv-1)/smallSizeDiv]])\n\t\t} else {\n\t\t\treturn uintptr(class_to_size[size_to_class128[(size-smallSizeMax+largeSizeDiv-1)/largeSizeDiv]])\n\t\t}\n\t}\n\tif size+_PageSize < size {\n\t\treturn size\n\t}\n\treturn round(size, _PageSize)\n}\n```\n其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）<br />当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。\n\n```\nsize_to_class8 = [smallSizeMax/smallSizeDiv + 1]uint8{0, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31}\nsize_to_class128 = [(_MaxSmallSize-smallSizeMax)/largeSizeDiv + 1]uint8{31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 39, 40, 40, 40, 41, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66}\n\nclass_to_size = [_NumSizeClasses]uint16{0, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 288, 320, 352, 384, 416, 448, 480, 512, 576, 640, 704, 768, 896, 1024, 1152, 1280, 1408, 1536, 1792, 2048, 2304, 2688, 3072, 3200, 3456, 4096, 4864, 5376, 6144, 6528, 6784, 6912, 8192, 9472, 9728, 10240, 10880, 12288, 13568, 14336, 16384, 18432, 19072, 20480, 21760, 24576, 27264, 28672, 32768}\n```\n可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.<br />而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096<br />以int为例\n\n| 个数 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| 字节数 | 8 | 16 | 24 | 32 | 40 | 48 | 56 | 64 | 72 |\n| 所占空间 | 8 | 16 | 32 | 32 | 48 | 48 | 64 | 64 | 80 |\n| size_to_class8 | 1 | 2 | 3 | 3 | 4 | 4 | 5 | 5 | 6 |\n\n\n",
    "body_draft": "- 命名返回值:没有参数的 return 语句返回已命名的返回值\n- println 的执行顺序。会先把函数计算结束之后，再按照顺序输出\n- 没有条件的 switch 同 `switch true` 一样。\n- defer函数调用会被压入一个栈中，所以后defer的值会先输出\n- 结构体指针的使用：修改结构体指针的值时，不需要带*号。\n- 数组定义的几种方式\n<a name=\"zZgyV\"></a>\n# 关于切片\n\n- 切片就像数组的引用，改变切片会改变底层的值\n- 切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限\n- 只是截取切片是不会改变切片大小的\n\n- 切片的长度就是它所包含的元素个数。\n- 切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数\n- 切片的零值是 `nil`\n\n- 函数的闭包\n- 接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`**type **MyFloat float64 `  \n<a name=\"X30WL\"></a>\n# 关于方法和接口\n\n- 指针参数的函数必须接受一个指针,而以指针为接收者的方法被调用时，接收者既能为值又能为指针\n- 跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。\n\n\n\n1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？<br />我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。\n\n```go\nfunc Println(a ...interface{}) (n int, err error) {\n\treturn Fprintln(os.Stdout, a...)\n}\nfunc Sprintln(a ...interface{}) string {\n\tp := newPrinter()\n\tp.doPrintln(a)\n\ts := string(p.buf)\n\tp.free()\n\treturn s\n}\n```\n同时也重新把打印语句加复杂了一下，结果与预期相符。\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc add(x,y int) int{\n\tsum:=x+y\n\tfmt.Println(sum)\n\treturn sum\n}\n\nfunc main(){\n\tfmt.Println(add(1,2),add(add(1,1),add(3,7)),add(4,5))\n}\n运行结果为：\n3\n2\n10\n12\n9\n3 12 9\n```\n\n2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据<br />查看了一下slice中的growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。\n\n```go\n\tnewcap := old.cap\n\tdoublecap := newcap + newcap\n\tif cap > doublecap {\n\t\tnewcap = cap\n\t} else {\n\t\tif old.len < 1024 {\n\t\t\tnewcap = doublecap\n\t\t} else {\n\t\t\t// Check 0 < newcap to detect overflow\n\t\t\t// and prevent an infinite loop.\n\t\t\tfor 0 < newcap && newcap < cap {\n\t\t\t\tnewcap += newcap / 4\n\t\t\t}\n\t\t\t// Set newcap to the requested cap when\n\t\t\t// the newcap calculation overflowed.\n\t\t\tif newcap <= 0 {\n\t\t\t\tnewcap = cap\n\t\t\t}\n\t\t}\n\t}\n```\n通过代码测试上述结果：\n\n```go\nfunc main(){\n\tvar a []int\n\tfor i:=0;i<1500;i++{\n\t\ta=append(a,i)\n\t\tif i%100==0{\n\t\t\tfmt.Printf(\"len: %d , cap; %d\\n\",len(a),cap(a))\n\t\t}\n\t}\n}\n\n输出结果为：\nlen: 1 , cap; 1\nlen: 101 , cap; 128\nlen: 201 , cap; 256\nlen: 301 , cap; 512\nlen: 401 , cap; 512\nlen: 501 , cap; 512\nlen: 601 , cap; 1024\nlen: 701 , cap; 1024\nlen: 801 , cap; 1024\nlen: 901 , cap; 1024\nlen: 1001 , cap; 1024\nlen: 1101 , cap; 1280\nlen: 1201 , cap; 1280\nlen: 1301 , cap; 1696\nlen: 1401 , cap; 1696\n```\n如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：\n\n```go\ncapmem = roundupsize(uintptr(newcap) * sys.PtrSize)\n```\n\n其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。roundupsize函数的实现如下\n\n```go\nfunc roundupsize(size uintptr) uintptr {\n\tif size < _MaxSmallSize {\n\t\tif size <= smallSizeMax-8 {\n\t\t\treturn uintptr(class_to_size[size_to_class8[(size+smallSizeDiv-1)/smallSizeDiv]])\n\t\t} else {\n\t\t\treturn uintptr(class_to_size[size_to_class128[(size-smallSizeMax+largeSizeDiv-1)/largeSizeDiv]])\n\t\t}\n\t}\n\tif size+_PageSize < size {\n\t\treturn size\n\t}\n\treturn round(size, _PageSize)\n}\n```\n其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）<br />当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。\n\n```\nsize_to_class8 = [smallSizeMax/smallSizeDiv + 1]uint8{0, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31}\nsize_to_class128 = [(_MaxSmallSize-smallSizeMax)/largeSizeDiv + 1]uint8{31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 39, 40, 40, 40, 41, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66}\n\nclass_to_size = [_NumSizeClasses]uint16{0, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 288, 320, 352, 384, 416, 448, 480, 512, 576, 640, 704, 768, 896, 1024, 1152, 1280, 1408, 1536, 1792, 2048, 2304, 2688, 3072, 3200, 3456, 4096, 4864, 5376, 6144, 6528, 6784, 6912, 8192, 9472, 9728, 10240, 10880, 12288, 13568, 14336, 16384, 18432, 19072, 20480, 21760, 24576, 27264, 28672, 32768}\n```\n可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.<br />而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096<br />以int为例\n\n| 个数 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| 字节数 | 8 | 16 | 24 | 32 | 40 | 48 | 56 | 64 | 72 |\n| 所占空间 | 8 | 16 | 32 | 32 | 48 | 48 | 64 | 64 | 80 |\n| size_to_class8 | 1 | 2 | 3 | 3 | 4 | 4 | 5 | 5 | 6 |\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>命名返回值:没有参数的 return 语句返回已命名的返回值</li><li>println 的执行顺序。会先把函数计算结束之后，再按照顺序输出</li><li><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">没有条件的 switch 同 </span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">switch true</code><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\"> 一样。</span></li><li><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">defer函数调用会被压入一个栈中，所以后defer的值会先输出</span></li><li>结构体指针的使用：修改结构体指针的值时，不需要带*号。</li><li>数组定义的几种方式</li></ul><h1 id=\"zZgyV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">关于切片</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>切片就像数组的引用，改变切片会改变底层的值</li><li>切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限</li><li><span style=\"color: #F5222D;\">只是截取切片是不会改变切片大小的</span></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>切片的长度就是它所包含的元素个数。</li><li>切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数</li><li><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">切片的零值是 </span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">nil</code></li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><span style=\"color: #F5222D;\">函数的闭包</span></li><li><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`</span><strong>type </strong>MyFloat float64 <span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">` &nbsp;</span></li></ul><h1 id=\"X30WL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">关于方法和接口</h1><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">指针参数的函数必须接受一个指针,</span><span class=\"lake-fontsize-12\" style=\"color: rgb(0, 0, 0); font-size: 16px;\" data-mce-style=\"font-size: 12px\">而以指针为接收者的方法被调用时，接收者既能为值又能为指针</span></li><li>跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。</li></ul><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-14\" data-mce-style=\"font-size: 14px\" style=\"font-size: 19px;\">1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20Println(a%20...interface%7B%7D)%20(n%20int%2C%20err%20error)%20%7B%5Cn%5Ctreturn%20Fprintln(os.Stdout%2C%20a...)%5Cn%7D%5Cnfunc%20Sprintln(a%20...interface%7B%7D)%20string%20%7B%5Cn%5Ctp%20%3A%3D%20newPrinter()%5Cn%5Ctp.doPrintln(a)%5Cn%5Cts%20%3A%3D%20string(p.buf)%5Cn%5Ctp.free()%5Cn%5Ctreturn%20s%5Cn%7D%22%2C%22id%22%3A%22n8h7P%22%7D\" id=\"n8h7P\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func Println(a ...interface{}) (n int, err error) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return Fprintln(os.Stdout, a...)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func Sprintln(a ...interface{}) string {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p := newPrinter()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p.doPrintln(a)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    s := string(p.buf)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    p.free()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return s\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">同时也重新把打印语句加复杂了一下，结果与预期相符。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22package%20main%5Cn%5Cnimport%20%5C%22fmt%5C%22%5Cn%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(add(1%2C1)%2Cadd(3%2C7))%2Cadd(4%2C5))%5Cn%7D%5Cn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cn3%5Cn2%5Cn10%5Cn12%5Cn9%5Cn3%2012%209%22%2C%22id%22%3A%221pTXj%22%7D\" id=\"1pTXj\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">package main\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">import \"fmt\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func add(x,y int) int{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    sum:=x+y\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(sum)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return sum\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    fmt.Println(add(1,2),add(add(1,1),add(3,7)),add(4,5))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">运行结果为：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">10\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">12\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">9\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3 12 9</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-14\" data-mce-style=\"font-size: 14px\" style=\"font-size: 19px;\">2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span class=\"lake-fontsize-11\" data-mce-style=\"font-size: 11px\" style=\"font-size: 14px;\">查看了一下slice中的</span><span style=\"color: #4A4A4A;\">growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22%5Ctnewcap%20%3A%3D%20old.cap%5Cn%5Ctdoublecap%20%3A%3D%20newcap%20%2B%20newcap%5Cn%5Ctif%20cap%20%3E%20doublecap%20%7B%5Cn%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ctif%20old.len%20%3C%201024%20%7B%5Cn%5Ct%5Ct%5Ctnewcap%20%3D%20doublecap%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ct%2F%2F%20Check%200%20%3C%20newcap%20to%20detect%20overflow%5Cn%5Ct%5Ct%5Ct%2F%2F%20and%20prevent%20an%20infinite%20loop.%5Cn%5Ct%5Ct%5Ctfor%200%20%3C%20newcap%20%26%26%20newcap%20%3C%20cap%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%2B%3D%20newcap%20%2F%204%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Ct%2F%2F%20Set%20newcap%20to%20the%20requested%20cap%20when%5Cn%5Ct%5Ct%5Ct%2F%2F%20the%20newcap%20calculation%20overflowed.%5Cn%5Ct%5Ct%5Ctif%20newcap%20%3C%3D%200%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%22%2C%22id%22%3A%22NyfP5%22%7D\" id=\"NyfP5\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    newcap := old.cap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    doublecap := newcap + newcap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if cap &gt; doublecap {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        newcap = cap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    } else {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        if old.len &lt; 1024 {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            newcap = doublecap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        } else {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // Check 0 &lt; newcap to detect overflow\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // and prevent an infinite loop.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            for 0 &lt; newcap &amp;&amp; newcap &lt; cap {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                newcap += newcap / 4\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // Set newcap to the requested cap when\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            // the newcap calculation overflowed.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            if newcap &lt;= 0 {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                newcap = cap\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">通过代码测试上述结果：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20main()%7B%5Cn%5Ctvar%20a%20%5B%5Dint%5Cn%5Ctfor%20i%3A%3D0%3Bi%3C1500%3Bi%2B%2B%7B%5Cn%5Ct%5Cta%3Dappend(a%2Ci)%5Cn%5Ct%5Ctif%20i%25100%3D%3D0%7B%5Cn%5Ct%5Ct%5Ctfmt.Printf(%5C%22len%3A%20%25d%20%2C%20cap%3B%20%25d%5C%5Cn%5C%22%2Clen(a)%2Ccap(a))%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%7D%5Cn%5Cn%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cnlen%3A%201%20%2C%20cap%3B%201%5Cnlen%3A%20101%20%2C%20cap%3B%20128%5Cnlen%3A%20201%20%2C%20cap%3B%20256%5Cnlen%3A%20301%20%2C%20cap%3B%20512%5Cnlen%3A%20401%20%2C%20cap%3B%20512%5Cnlen%3A%20501%20%2C%20cap%3B%20512%5Cnlen%3A%20601%20%2C%20cap%3B%201024%5Cnlen%3A%20701%20%2C%20cap%3B%201024%5Cnlen%3A%20801%20%2C%20cap%3B%201024%5Cnlen%3A%20901%20%2C%20cap%3B%201024%5Cnlen%3A%201001%20%2C%20cap%3B%201024%5Cnlen%3A%201101%20%2C%20cap%3B%201280%5Cnlen%3A%201201%20%2C%20cap%3B%201280%5Cnlen%3A%201301%20%2C%20cap%3B%201696%5Cnlen%3A%201401%20%2C%20cap%3B%201696%22%2C%22id%22%3A%22hKrlz%22%7D\" id=\"hKrlz\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func main(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    var a []int\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    for i:=0;i&lt;1500;i++{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        a=append(a,i)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        if i%100==0{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            fmt.Printf(\"len: %d , cap; %d\\n\",len(a),cap(a))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">输出结果为：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1 , cap; 1\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 101 , cap; 128\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 201 , cap; 256\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 301 , cap; 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 401 , cap; 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 501 , cap; 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 601 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 701 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 801 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 901 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1001 , cap; 1024\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1101 , cap; 1280\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1201 , cap; 1280\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1301 , cap; 1696\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">len: 1401 , cap; 1696</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22capmem%20%3D%20roundupsize(uintptr(newcap)%20*%20sys.PtrSize)%22%2C%22id%22%3A%221FKnK%22%7D\" id=\"1FKnK\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">capmem = roundupsize(uintptr(newcap) * sys.PtrSize)</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。<span>roundupsize函数的实现如下</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20roundupsize(size%20uintptr)%20uintptr%20%7B%5Cn%5Ctif%20size%20%3C%20_MaxSmallSize%20%7B%5Cn%5Ct%5Ctif%20size%20%3C%3D%20smallSizeMax-8%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class8%5B(size%2BsmallSizeDiv-1)%2FsmallSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class128%5B(size-smallSizeMax%2BlargeSizeDiv-1)%2FlargeSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Ctif%20size%2B_PageSize%20%3C%20size%20%7B%5Cn%5Ct%5Ctreturn%20size%5Cn%5Ct%7D%5Cn%5Ctreturn%20round(size%2C%20_PageSize)%5Cn%7D%22%2C%22id%22%3A%2221oaO%22%7D\" id=\"21oaO\" data-language=\"go\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">func roundupsize(size uintptr) uintptr {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if size &lt; _MaxSmallSize {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        if size &lt;= smallSizeMax-8 {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            return uintptr(class_to_size[size_to_class8[(size+smallSizeDiv-1)/smallSizeDiv]])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        } else {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            return uintptr(class_to_size[size_to_class128[(size-smallSizeMax+largeSizeDiv-1)/largeSizeDiv]])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    if size+_PageSize &lt; size {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        return size\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    return round(size, _PageSize)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22size_to_class8%20%3D%20%5BsmallSizeMax%2FsmallSizeDiv%20%2B%201%5Duintnsize_to_class128%20%3D%20%5B(_MaxSmallSize-smallSizeMax)%2FlargeSizeDiv%20%2B%201%5Duintn%5Cnclass_to_size%20%3D%20%5B_NumSizeClasses%5Duint16%7B0%2C%208%2C%2016%2C%2032%2C%2048%2C%2064%2C%2080%2C%2096%2C%20112%2C%20128%2C%20144%2C%20160%2C%20176%2C%20192%2C%20208%2C%20224%2C%20240%2C%20256%2C%20288%2C%20320%2C%20352%2C%20384%2C%20416%2C%20448%2C%20480%2C%20512%2C%20576%2C%20640%2C%20704%2C%20768%2C%20896%2C%201024%2C%201152%2C%201280%2C%201408%2C%201536%2C%201792%2C%202048%2C%202304%2C%202688%2C%203072%2C%203200%2C%203456%2C%204096%2C%204864%2C%205376%2C%206144%2C%206528%2C%206784%2C%206912%2C%208192%2C%209472%2C%209728%2C%2010240%2C%2010880%2C%2012288%2C%2013568%2C%2014336%2C%2016384%2C%2018432%2C%2019072%2C%2020480%2C%2021760%2C%2024576%2C%2027264%2C%2028672%2C%2032768%7D%22%2C%22id%22%3A%22vptXb%22%7D\" id=\"vptXb\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size_to_class8 = [smallSizeMax/smallSizeDiv + 1]uint8{0, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size_to_class128 = [(_MaxSmallSize-smallSizeMax)/largeSizeDiv + 1]uint8{31, 32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 39, 40, 40, 40, 41, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class_to_size = [_NumSizeClasses]uint16{0, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 288, 320, 352, 384, 416, 448, 480, 512, 576, 640, 704, 768, 896, 1024, 1152, 1280, 1408, 1536, 1792, 2048, 2304, 2688, 3072, 3200, 3456, 4096, 4864, 5376, 6144, 6528, 6784, 6912, 8192, 9472, 9728, 10240, 10880, 12288, 13568, 14336, 16384, 18432, 19072, 20480, 21760, 24576, 27264, 28672, 32768}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">以int为例</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"table\" data-card-value=\"data:%7B%22rows%22%3A4%2C%22cols%22%3A10%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E4%B8%AA%E6%95%B0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E2%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E6%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E7%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E9%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E5%AD%97%E8%8A%82%E6%95%B0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E16%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E24%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E40%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E56%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E72%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E16%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E80%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3Esize_to_class8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E2%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E6%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22LYunA%22%7D\" id=\"LYunA\"><table class=\"lake-table\" style=\"width: 721px; outline: none; border-collapse: collapse;\"><colgroup><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"><col width=\"72\" span=\"1\"></colgroup><tbody><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"512f939ad7a857f1da88ec188d5f1f0d\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">个数</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"d3e961c2813d7d834b1cff3fd3912f62\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"d3a94251e4e8f8faab39ebac7a4a7943\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"b87efe88db40a0fe70f16922ee2b5624\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"ba2bb8ea5833bc346c80e7a637b75c13\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">4</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"5e2be2bdc0e09c597db78d8f66c44d9d\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">5</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"d2337bf741c7a4a2686456e16769d9b5\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">6</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"de55b05d23ff8eb36a0c31b9222c746c\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">7</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"ede9fe9829739d94fb2345ce1e43bdf6\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">8</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"53633302897aff39c61698a7dba002f0\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">9</p></td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"4a07c2091237217fa4382758d18cc2c1\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">字节数</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"89410984eea788b2cfe5d1094ef20dfb\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">8</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"8129c7ca00c780e1e5c104c3856c4770\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">16</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"ae937b3db11311b84ac8421fdd565d21\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">24</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"791bf046e2b9ad745e9e72ab16d055d8\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">32</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"7c99ab6dd6c97c3a027b35f78f35ff7b\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">40</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"4a9712a2731a3ad79fa2fae82b020fe8\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">48</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"0793f2d28811625795816219712406ca\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">56</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"033fa2acf2ebabe43dd4cadced68a9c0\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">64</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"cfdf012db3c1527d81eea83545b2f499\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">72</p></td></tr><tr style=\"height: 33px;\"><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"6bd3117964fd676a759fe22f9c152364\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">所占空间</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"537c24711917a6e820f65988fdff7191\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">8</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"71e27a2db40d79114b6e35dbb688ae6f\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">16</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"96863685bbed559b80a8fe1171938c92\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">32</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"925a0ff23838eae0795c838dcee3d242\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">32</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"cd73b9857485b2e625ec40a5cc1c2472\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">48</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"807c868b2bda670629f08441ba537c81\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">48</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"6e08557406488d55c7c69192603ab7e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">64</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"0cfda14619b6feee0e5c056d4026fe6b\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">64</p></td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"d5744efb142c45d9516c59453db36429\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">80</p></td></tr><tr style=\"height: 33px;\"><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"4b36d34ecf7c5deaaa04f6d68ef70528\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">size_to_class8</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"5671e9dde7bc4875f96d9c5790434979\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">1</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"b39e45bb1bbd0bf46af8805622f79d5e\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">2</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"97a1ec3a41b1fe03f1c6ad0f544d30a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"611d98a12effdbd7db26215953b52760\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">3</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"b9f9451e77d4e2e75fe83af2e1b562d0\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">4</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"dac1cc401fead4fd140b7d22b35daf44\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">4</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"75ddf86345a0c00dfc3de863d9cd1948\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">5</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"a362722e635874892fe52c8f51138812\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">5</p></td><td colspan=\"1\" style=\"vertical-align: top; background-color: rgb(255, 255, 255); color: rgb(38, 38, 38); min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\"><p data-lake-id=\"02b89ead2f4fae84c8d9c5f606976215\" style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">6</p></td></tr></tbody></table></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><ul><li>命名返回值:没有参数的 return 语句返回已命名的返回值</li><li>println 的执行顺序。会先把函数计算结束之后，再按照顺序输出</li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">没有条件的 switch 同 </span><code>switch true</code><span class=\"lake-fontsize-12\" style=\"color: #000000;\"> 一样。</span></li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">defer函数调用会被压入一个栈中，所以后defer的值会先输出</span></li><li>结构体指针的使用：修改结构体指针的值时，不需要带*号。</li><li>数组定义的几种方式</li></ul><h1 id=\"zZgyV\">关于切片</h1><ul><li>切片就像数组的引用，改变切片会改变底层的值</li><li>切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限</li><li><span style=\"color: #F5222D;\">只是截取切片是不会改变切片大小的</span></li></ul><p><br /></p><ul><li>切片的长度就是它所包含的元素个数。</li><li>切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数</li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">切片的零值是 </span><code>nil</code></li></ul><p><br /></p><ul><li><span style=\"color: #F5222D;\">函数的闭包</span></li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`</span><strong>type </strong>MyFloat float64 <span class=\"lake-fontsize-12\" style=\"color: #000000;\">`  </span></li></ul><h1 id=\"X30WL\">关于方法和接口</h1><ul><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">指针参数的函数必须接受一个指针,</span><span class=\"lake-fontsize-12\" style=\"color: #000000;\">而以指针为接收者的方法被调用时，接收者既能为值又能为指针</span></li><li>跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。</li></ul><p><br /></p><p><br /></p><p><br /></p><p><span class=\"lake-fontsize-14\">1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？</span></p><p>我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20Println(a%20...interface%7B%7D)%20(n%20int%2C%20err%20error)%20%7B%5Cn%5Ctreturn%20Fprintln(os.Stdout%2C%20a...)%5Cn%7D%5Cnfunc%20Sprintln(a%20...interface%7B%7D)%20string%20%7B%5Cn%5Ctp%20%3A%3D%20newPrinter()%5Cn%5Ctp.doPrintln(a)%5Cn%5Cts%20%3A%3D%20string(p.buf)%5Cn%5Ctp.free()%5Cn%5Ctreturn%20s%5Cn%7D%22%2C%22id%22%3A%22n8h7P%22%7D\"></card><p>同时也重新把打印语句加复杂了一下，结果与预期相符。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22package%20main%5Cn%5Cnimport%20%5C%22fmt%5C%22%5Cn%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(add(1%2C1)%2Cadd(3%2C7))%2Cadd(4%2C5))%5Cn%7D%5Cn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cn3%5Cn2%5Cn10%5Cn12%5Cn9%5Cn3%2012%209%22%2C%22id%22%3A%221pTXj%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-14\">2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据</span></p><p><span class=\"lake-fontsize-11\">查看了一下slice中的</span><span style=\"color: #4A4A4A;\">growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22%5Ctnewcap%20%3A%3D%20old.cap%5Cn%5Ctdoublecap%20%3A%3D%20newcap%20%2B%20newcap%5Cn%5Ctif%20cap%20%3E%20doublecap%20%7B%5Cn%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ctif%20old.len%20%3C%201024%20%7B%5Cn%5Ct%5Ct%5Ctnewcap%20%3D%20doublecap%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ct%2F%2F%20Check%200%20%3C%20newcap%20to%20detect%20overflow%5Cn%5Ct%5Ct%5Ct%2F%2F%20and%20prevent%20an%20infinite%20loop.%5Cn%5Ct%5Ct%5Ctfor%200%20%3C%20newcap%20%26%26%20newcap%20%3C%20cap%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%2B%3D%20newcap%20%2F%204%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Ct%2F%2F%20Set%20newcap%20to%20the%20requested%20cap%20when%5Cn%5Ct%5Ct%5Ct%2F%2F%20the%20newcap%20calculation%20overflowed.%5Cn%5Ct%5Ct%5Ctif%20newcap%20%3C%3D%200%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%22%2C%22id%22%3A%22NyfP5%22%7D\"></card><p>通过代码测试上述结果：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20main()%7B%5Cn%5Ctvar%20a%20%5B%5Dint%5Cn%5Ctfor%20i%3A%3D0%3Bi%3C1500%3Bi%2B%2B%7B%5Cn%5Ct%5Cta%3Dappend(a%2Ci)%5Cn%5Ct%5Ctif%20i%25100%3D%3D0%7B%5Cn%5Ct%5Ct%5Ctfmt.Printf(%5C%22len%3A%20%25d%20%2C%20cap%3B%20%25d%5C%5Cn%5C%22%2Clen(a)%2Ccap(a))%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%7D%5Cn%5Cn%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cnlen%3A%201%20%2C%20cap%3B%201%5Cnlen%3A%20101%20%2C%20cap%3B%20128%5Cnlen%3A%20201%20%2C%20cap%3B%20256%5Cnlen%3A%20301%20%2C%20cap%3B%20512%5Cnlen%3A%20401%20%2C%20cap%3B%20512%5Cnlen%3A%20501%20%2C%20cap%3B%20512%5Cnlen%3A%20601%20%2C%20cap%3B%201024%5Cnlen%3A%20701%20%2C%20cap%3B%201024%5Cnlen%3A%20801%20%2C%20cap%3B%201024%5Cnlen%3A%20901%20%2C%20cap%3B%201024%5Cnlen%3A%201001%20%2C%20cap%3B%201024%5Cnlen%3A%201101%20%2C%20cap%3B%201280%5Cnlen%3A%201201%20%2C%20cap%3B%201280%5Cnlen%3A%201301%20%2C%20cap%3B%201696%5Cnlen%3A%201401%20%2C%20cap%3B%201696%22%2C%22id%22%3A%22hKrlz%22%7D\"></card><p>如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22capmem%20%3D%20roundupsize(uintptr(newcap)%20*%20sys.PtrSize)%22%2C%22id%22%3A%221FKnK%22%7D\"></card><p><br /></p><p>其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。<span>roundupsize函数的实现如下</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20roundupsize(size%20uintptr)%20uintptr%20%7B%5Cn%5Ctif%20size%20%3C%20_MaxSmallSize%20%7B%5Cn%5Ct%5Ctif%20size%20%3C%3D%20smallSizeMax-8%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class8%5B(size%2BsmallSizeDiv-1)%2FsmallSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class128%5B(size-smallSizeMax%2BlargeSizeDiv-1)%2FlargeSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Ctif%20size%2B_PageSize%20%3C%20size%20%7B%5Cn%5Ct%5Ctreturn%20size%5Cn%5Ct%7D%5Cn%5Ctreturn%20round(size%2C%20_PageSize)%5Cn%7D%22%2C%22id%22%3A%2221oaO%22%7D\"></card><p>其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）</p><p>当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22size_to_class8%20%3D%20%5BsmallSizeMax%2FsmallSizeDiv%20%2B%201%5Duintnsize_to_class128%20%3D%20%5B(_MaxSmallSize-smallSizeMax)%2FlargeSizeDiv%20%2B%201%5Duintn%5Cnclass_to_size%20%3D%20%5B_NumSizeClasses%5Duint16%7B0%2C%208%2C%2016%2C%2032%2C%2048%2C%2064%2C%2080%2C%2096%2C%20112%2C%20128%2C%20144%2C%20160%2C%20176%2C%20192%2C%20208%2C%20224%2C%20240%2C%20256%2C%20288%2C%20320%2C%20352%2C%20384%2C%20416%2C%20448%2C%20480%2C%20512%2C%20576%2C%20640%2C%20704%2C%20768%2C%20896%2C%201024%2C%201152%2C%201280%2C%201408%2C%201536%2C%201792%2C%202048%2C%202304%2C%202688%2C%203072%2C%203200%2C%203456%2C%204096%2C%204864%2C%205376%2C%206144%2C%206528%2C%206784%2C%206912%2C%208192%2C%209472%2C%209728%2C%2010240%2C%2010880%2C%2012288%2C%2013568%2C%2014336%2C%2016384%2C%2018432%2C%2019072%2C%2020480%2C%2021760%2C%2024576%2C%2027264%2C%2028672%2C%2032768%7D%22%2C%22id%22%3A%22vptXb%22%7D\"></card><p>可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.</p><p>而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096</p><p>以int为例</p><p><br /></p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A4%2C%22cols%22%3A10%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E4%B8%AA%E6%95%B0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E2%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E6%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E7%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E9%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E5%AD%97%E8%8A%82%E6%95%B0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E16%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E24%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E40%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E56%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E72%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E16%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E80%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3Esize_to_class8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E2%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E6%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22LYunA%22%7D\"></card><p><br /></p>",
    "body_draft_lake": "<!doctype lake><ul><li>命名返回值:没有参数的 return 语句返回已命名的返回值</li><li>println 的执行顺序。会先把函数计算结束之后，再按照顺序输出</li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">没有条件的 switch 同 </span><code>switch true</code><span class=\"lake-fontsize-12\" style=\"color: #000000;\"> 一样。</span></li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">defer函数调用会被压入一个栈中，所以后defer的值会先输出</span></li><li>结构体指针的使用：修改结构体指针的值时，不需要带*号。</li><li>数组定义的几种方式</li></ul><h1 id=\"zZgyV\">关于切片</h1><ul><li>切片就像数组的引用，改变切片会改变底层的值</li><li>切片的默认行为，可以不写完全部的上下限，因为切片默认有上下限</li><li><span style=\"color: #F5222D;\">只是截取切片是不会改变切片大小的</span></li></ul><p><br /></p><ul><li>切片的长度就是它所包含的元素个数。</li><li>切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数</li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">切片的零值是 </span><code>nil</code></li></ul><p><br /></p><ul><li><span style=\"color: #F5222D;\">函数的闭包</span></li><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法，可以定义别名，`</span><strong>type </strong>MyFloat float64 <span class=\"lake-fontsize-12\" style=\"color: #000000;\">`  </span></li></ul><h1 id=\"X30WL\">关于方法和接口</h1><ul><li><span class=\"lake-fontsize-12\" style=\"color: #000000;\">指针参数的函数必须接受一个指针,</span><span class=\"lake-fontsize-12\" style=\"color: #000000;\">而以指针为接收者的方法被调用时，接收者既能为值又能为指针</span></li><li>跟C++中一样，使用指针接收者可以修改接收者指向的值；另外，可以避免每次在调用方法时复制该值。</li></ul><p><br /></p><p><br /></p><p><br /></p><p><span class=\"lake-fontsize-14\">1.函数执行顺序是否是后序遍历的方式，可以再嵌套一层方法试试？ 画个调用树出来看看？</span></p><p>我在网上没有找到相关的解释，就自己查看了fmt.Println()函数的源码，会先调用Fprintln函数，而Fprintln会先执行传入的函数，存在p的buf中，之后转换成string再打印。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20Println(a%20...interface%7B%7D)%20(n%20int%2C%20err%20error)%20%7B%5Cn%5Ctreturn%20Fprintln(os.Stdout%2C%20a...)%5Cn%7D%5Cnfunc%20Sprintln(a%20...interface%7B%7D)%20string%20%7B%5Cn%5Ctp%20%3A%3D%20newPrinter()%5Cn%5Ctp.doPrintln(a)%5Cn%5Cts%20%3A%3D%20string(p.buf)%5Cn%5Ctp.free()%5Cn%5Ctreturn%20s%5Cn%7D%22%2C%22id%22%3A%22n8h7P%22%7D\"></card><p>同时也重新把打印语句加复杂了一下，结果与预期相符。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22package%20main%5Cn%5Cnimport%20%5C%22fmt%5C%22%5Cn%5Cnfunc%20add(x%2Cy%20int)%20int%7B%5Cn%5Ctsum%3A%3Dx%2By%5Cn%5Ctfmt.Println(sum)%5Cn%5Ctreturn%20sum%5Cn%7D%5Cn%5Cnfunc%20main()%7B%5Cn%5Ctfmt.Println(add(1%2C2)%2Cadd(add(1%2C1)%2Cadd(3%2C7))%2Cadd(4%2C5))%5Cn%7D%5Cn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cn3%5Cn2%5Cn10%5Cn12%5Cn9%5Cn3%2012%209%22%2C%22id%22%3A%221pTXj%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-14\">2. 切片的增长为什么是20，是否在大于1024或某个值时，有其他的增长方法？ 比如 增加1.2倍？ 可以贴源码作为论据</span></p><p><span class=\"lake-fontsize-11\">查看了一下slice中的</span><span style=\"color: #4A4A4A;\">growslice函数，可以看到当容量小于1024时，是按照2倍进行增长的，当超过1024时，按照1.25倍进行增长，应该是从节省空间的角度考虑，毕竟对一个很长的数组，再插入同样长度的数的概率很小。</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22%5Ctnewcap%20%3A%3D%20old.cap%5Cn%5Ctdoublecap%20%3A%3D%20newcap%20%2B%20newcap%5Cn%5Ctif%20cap%20%3E%20doublecap%20%7B%5Cn%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ctif%20old.len%20%3C%201024%20%7B%5Cn%5Ct%5Ct%5Ctnewcap%20%3D%20doublecap%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ct%2F%2F%20Check%200%20%3C%20newcap%20to%20detect%20overflow%5Cn%5Ct%5Ct%5Ct%2F%2F%20and%20prevent%20an%20infinite%20loop.%5Cn%5Ct%5Ct%5Ctfor%200%20%3C%20newcap%20%26%26%20newcap%20%3C%20cap%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%2B%3D%20newcap%20%2F%204%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Ct%2F%2F%20Set%20newcap%20to%20the%20requested%20cap%20when%5Cn%5Ct%5Ct%5Ct%2F%2F%20the%20newcap%20calculation%20overflowed.%5Cn%5Ct%5Ct%5Ctif%20newcap%20%3C%3D%200%20%7B%5Cn%5Ct%5Ct%5Ct%5Ctnewcap%20%3D%20cap%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%22%2C%22id%22%3A%22NyfP5%22%7D\"></card><p>通过代码测试上述结果：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20main()%7B%5Cn%5Ctvar%20a%20%5B%5Dint%5Cn%5Ctfor%20i%3A%3D0%3Bi%3C1500%3Bi%2B%2B%7B%5Cn%5Ct%5Cta%3Dappend(a%2Ci)%5Cn%5Ct%5Ctif%20i%25100%3D%3D0%7B%5Cn%5Ct%5Ct%5Ctfmt.Printf(%5C%22len%3A%20%25d%20%2C%20cap%3B%20%25d%5C%5Cn%5C%22%2Clen(a)%2Ccap(a))%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%7D%5Cn%5Cn%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B8%BA%EF%BC%9A%5Cnlen%3A%201%20%2C%20cap%3B%201%5Cnlen%3A%20101%20%2C%20cap%3B%20128%5Cnlen%3A%20201%20%2C%20cap%3B%20256%5Cnlen%3A%20301%20%2C%20cap%3B%20512%5Cnlen%3A%20401%20%2C%20cap%3B%20512%5Cnlen%3A%20501%20%2C%20cap%3B%20512%5Cnlen%3A%20601%20%2C%20cap%3B%201024%5Cnlen%3A%20701%20%2C%20cap%3B%201024%5Cnlen%3A%20801%20%2C%20cap%3B%201024%5Cnlen%3A%20901%20%2C%20cap%3B%201024%5Cnlen%3A%201001%20%2C%20cap%3B%201024%5Cnlen%3A%201101%20%2C%20cap%3B%201280%5Cnlen%3A%201201%20%2C%20cap%3B%201280%5Cnlen%3A%201301%20%2C%20cap%3B%201696%5Cnlen%3A%201401%20%2C%20cap%3B%201696%22%2C%22id%22%3A%22hKrlz%22%7D\"></card><p>如上符合源码结果，所以之前的分析有些问题，但是append多个值的时候，与之前的结果相同。再次查看源码，发现实际上还有内存对齐的考虑：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22capmem%20%3D%20roundupsize(uintptr(newcap)%20*%20sys.PtrSize)%22%2C%22id%22%3A%221FKnK%22%7D\"></card><p><br /></p><p>其中capmem会根据roundupsize函数进行内存对齐。其中uintptr(newcap)表示新容量的大小，sys.PtrSize表示一个元素的大小，int时为8。<span>roundupsize函数的实现如下</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22go%22%2C%22code%22%3A%22func%20roundupsize(size%20uintptr)%20uintptr%20%7B%5Cn%5Ctif%20size%20%3C%20_MaxSmallSize%20%7B%5Cn%5Ct%5Ctif%20size%20%3C%3D%20smallSizeMax-8%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class8%5B(size%2BsmallSizeDiv-1)%2FsmallSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%20else%20%7B%5Cn%5Ct%5Ct%5Ctreturn%20uintptr(class_to_size%5Bsize_to_class128%5B(size-smallSizeMax%2BlargeSizeDiv-1)%2FlargeSizeDiv%5D%5D)%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Ctif%20size%2B_PageSize%20%3C%20size%20%7B%5Cn%5Ct%5Ctreturn%20size%5Cn%5Ct%7D%5Cn%5Ctreturn%20round(size%2C%20_PageSize)%5Cn%7D%22%2C%22id%22%3A%2221oaO%22%7D\"></card><p>其中：_MaxSmallSize=32768,2的15次方，是32K。当需要分配的size大于32K时，需要mchche向mcentral申请；当size小于32K时，计算应该分配的sizeclass，直接去mchche申请。（关于具体的内存申请方面，在后面的开发需要的时候再仔细研究）</p><p>当size小于smallSizeMax-8=1024-8=1016时，采用size_to_class8的分配方式，大于1016时采用size_to_class128的分配方式。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22size_to_class8%20%3D%20%5BsmallSizeMax%2FsmallSizeDiv%20%2B%201%5Duintnsize_to_class128%20%3D%20%5B(_MaxSmallSize-smallSizeMax)%2FlargeSizeDiv%20%2B%201%5Duint8%7B31%2C%2032%2C%2033%2C%2034%2C%2035%2C%2036%2C%2036%2C%2037%2C%2037%2C%2038%2C%2038%2C%2039%2C%2039%2C%2039%2C%2040%2C%2040%2C%2040%2C%2041%2C%2042%2C%2042%2C%2043%2C%2043%2C%2043%2C%2043%2C%2043%2C%2044%2C%2044%2C%2044%2C%2044%2C%2044%2C%2044%2C%2045%2C%2045%2C%2045%2C%2045%2C%2046%2C%2046%2C%2046%2C%2046%2C%2046%2C%2046%2C%2047%2C%2047%2C%2047%2C%2048%2C%2048%2C%2049%2C%2050%2C%2050%2C%2050%2C%2050%2C%2050%2C%2050%2C%2050%2C%2050%2C%2050%2C%2050%2C%2051%2C%2051%2C%2051%2C%2051%2C%2051%2C%2051%2C%2051%2C%2051%2C%2051%2C%2051%2C%2052%2C%2052%2C%2053%2C%2053%2C%2053%2C%2053%2C%2054%2C%2054%2C%2054%2C%2054%2C%2054%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2055%2C%2056%2C%2056%2C%2056%2C%2056%2C%2056%2C%2056%2C%2056%2C%2056%2C%2056%2C%2056%2C%2057%2C%2057%2C%2057%2C%2057%2C%2057%2C%2057%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2058%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2059%2C%2060%2C%2060%2C%2060%2C%2060%2C%2060%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2061%2C%2062%2C%2062%2C%2062%2C%2062%2C%2062%2C%2062%2C%2062%2C%2062%2C%2062%2C%2062%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2063%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2064%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2065%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%2C%2066%7D%5Cn%5Cnclass_to_size%20%3D%20%5B_NumSizeClasses%5Duint16%7B0%2C%208%2C%2016%2C%2032%2C%2048%2C%2064%2C%2080%2C%2096%2C%20112%2C%20128%2C%20144%2C%20160%2C%20176%2C%20192%2C%20208%2C%20224%2C%20240%2C%20256%2C%20288%2C%20320%2C%20352%2C%20384%2C%20416%2C%20448%2C%20480%2C%20512%2C%20576%2C%20640%2C%20704%2C%20768%2C%20896%2C%201024%2C%201152%2C%201280%2C%201408%2C%201536%2C%201792%2C%202048%2C%202304%2C%202688%2C%203072%2C%203200%2C%203456%2C%204096%2C%204864%2C%205376%2C%206144%2C%206528%2C%206784%2C%206912%2C%208192%2C%209472%2C%209728%2C%2010240%2C%2010880%2C%2012288%2C%2013568%2C%2014336%2C%2016384%2C%2018432%2C%2019072%2C%2020480%2C%2021760%2C%2024576%2C%2027264%2C%2028672%2C%2032768%7D%22%2C%22id%22%3A%22vptXb%22%7D\"></card><p>可以看到两个数组值的不同，并且间隔的粒度也不同，当size较小时，间隔为8，当size较大时，间隔为128.</p><p>而为了内存优化考虑，class_to_size会控制分配大小，间隔从8-4096</p><p>以int为例</p><p><br /></p><card type=\"block\" name=\"table\" value=\"data:%7B%22rows%22%3A4%2C%22cols%22%3A10%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20721px%3B%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3Ccol%20width%3D%5C%2272%5C%22%20span%3D%5C%221%5C%22%20%2F%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E4%B8%AA%E6%95%B0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E2%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E6%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E7%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E9%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E5%AD%97%E8%8A%82%E6%95%B0%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E16%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E24%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E40%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E56%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E72%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%3E%3Cp%3E%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E16%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E32%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E48%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E64%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%3E%3Cp%3E80%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20style%3D%5C%22height%3A%2033px%3B%5C%22%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3Esize_to_class8%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E1%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E2%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E3%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E4%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E5%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20colspan%3D%5C%221%5C%22%20style%3D%5C%22vertical-align%3A%20top%3B%20background-color%3A%20%23FFFFFF%3B%20color%3A%20%23262626%3B%5C%22%3E%3Cp%3E6%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22id%22%3A%22LYunA%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-04T04:35:42.000Z",
    "deleted_at": null,
    "created_at": "2019-07-02T02:00:25.000Z",
    "updated_at": "2020-09-06T15:29:39.000Z",
    "published_at": "2019-07-04T04:35:42.000Z",
    "first_published_at": "2019-07-02T10:54:22.000Z",
    "word_count": 1732,
    "cover": null,
    "description": "命名返回值:没有参数的 return 语句返回已命名的返回值println 的执行顺序。会先把函数计算结束之后，再按照顺序输出没有条件的 switch 同 switch true 一样。defer函数调用会被压入一个栈中，所以后defer的值会先输出结构体指针的使用：修改结构体指针的值时，不需...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1775683,
    "slug": "htwhzf",
    "title": "Git使用总结",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-08T14:16:27.803Z",
      "updated_at": "2020-09-08T14:16:27.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title: MySQL相关概念总结<br />date: 2019-1-20 11:27:21<br />categories: Git<br />tags: [Git,学习]<br />\n\n\n---\n\n<a name=\"OBWm9\"></a>\n# 简单配置\n<a name=\"K6UZv\"></a>\n## 配置user信息\n\n\n```\ngit config --global user.name 'your_name'\ngit config --global user.email 'your_email'\n\ngit config --local  #local只对某个仓库有效\ngit config --global  #global对当前用户的所有仓库有效\ngit config --system  #对系统所有登录用户有效，一般不用没什么意义\n\ngit config --global --list #显示配置项\n```\nlocal比global优先级要高<br />\n\n<a name=\"1Q93z\"></a>\n# 给文件重命名\n\n<br />\n\n```git\n#原来的使用：\nmv readme readme.md\ngit add readme.md\ngit rm readme\n#直接使用\ngit mv readme readme.md\n```\n\n\n<a name=\"InL4q\"></a>\n# 查看gitlog\n\n\n```git\ngit log #只显示当前分支\ngit log --all --graph #可以看所有的分支\ngit log --oneline --all -n4 #一行显示所有分支最近的4个\n```\n\n\n<a name=\"D3lfM\"></a>\n# .git目录\nHEAD：整个仓库正在工作的分支<br />config：存放仓库本地的配置信息，记录user等信息<br />refs：<br />objects：包括文件夹和pack<br />\n\n<a name=\"rzV7P\"></a>\n# commit、tree和blob之间的关系\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1558841650988-46fcccb5-6359-4112-8808-e60284941018.png#align=left&display=inline&height=681&margin=%5Bobject%20Object%5D&name=image.png&originHeight=681&originWidth=1132&size=170368&status=done&style=none&width=1132)<br />一个commit对应一棵tree，每个文件夹对应一个tree\n<a name=\"ra3di\"></a>\n# 分离头指针\n表示某个变更没有基于某个branch，在切换分支的时候，这些变更很有可能会被git当做垃圾清理，所以如果认为这些变更有用的话，一定要与某个branch绑定才能得到保留。\n<a name=\"2LCka\"></a>\n# HEAD和branch\n切换分支时，HEAD指向会发生变化。<br />\n\n```git\ngit diff HEAD HEAD^  #与上一次HEAD比较\ngit diff HEAD HEAD^^ #与上上次进行比较\ngit diff HEAD HEAD^3 #与上上上次进行比较\n```\n<a name=\"yVsnr\"></a>\n# 常用场景\n<a name=\"yIDvl\"></a>\n## 删除分支\n\n\n```git\ngit branch -d '分支名'  #清除分支的命令\ngit branch -D '分支名'  #确信清除没有影响，采用D清除\n```\n<a name=\"cDmjb\"></a>\n## 修改commit的message\n在维护自己的分支的时候，还没有提交的时候\n```git\ngit commit --amend   #修改最新的commit的message\ngit rebase -i 'commit id'  #修改更久的commit的message\n  然后按照提示进行修改\n```\n<a name=\"e5xQP\"></a>\n## 整理多个commit为1个\n\n\n```git\ngit rebase -i 'commit-id'  # commit-id为最久的想合并的\n```\n<a name=\"yxX2F\"></a>\n## 比较暂存区和HEAD所含文件的差异\n\n\n```git\ngit diff --cached  #表示暂存区和HEAD的区别\n```\n<a name=\"vvIkA\"></a>\n## 比较工作区和暂存区的区别\n\n\n```git\ngit diff #默认比较的是工作区和暂存区的区别\ngit diff --文件名 #比较文件\n```\n<a name=\"co5yg\"></a>\n## 让暂存区恢复成和HEAD一样\n\n\n```git\ngit reset HEAD #将暂存区所有的变更恢复成HEAD\n```\n<a name=\"5EUrs\"></a>\n## 工作区的文件恢复成暂存区一样\n\n\n```git\ngit checkout -- '文件名' \n```\n<a name=\"SC0Bx\"></a>\n## 取消暂存区部分文件的修改\n\n\n```git\ngit reset HEAD --'文件名'  # 将暂存区某一文件恢复成HEAD\n```\n<a name=\"VeLZp\"></a>\n## 消除最近的几次提交\n\n\n```git\ngit reset --hard 'commit-id' #慎用\n```\n<a name=\"gk3PU\"></a>\n## 看不同提交的指定文件的差异\n\n\n```git\ngit diff 'branch1' 'branch2' -- '文件名'\ngit diff 'commit-id1' 'commit-id2' -- '文件名'\n```\n<a name=\"axzdx\"></a>\n## 正确删除文件的方法\n\n\n```git\ngit rm '文件名'\n```\n<a name=\"tOivQ\"></a>\n## 开发临时加塞紧急任务处理方式\n\n\n```git\ngit stash\ngit stash apply\n或者 git stach pop  #两者区别是会丢掉\n```\n<a name=\"UrUu1\"></a>\n## Git的备份\n\n- 哑协议：不显示进度条\n- 智能协议：\n\n\n<br />\n<br />\n<br />大萨达<br />\n<br />231231<br />\n\n",
    "body_draft": "title: MySQL相关概念总结<br />date: 2019-1-20 11:27:21<br />categories: Git<br />tags: [Git,学习]<br />\n\n\n---\n\n<a name=\"OBWm9\"></a>\n# 简单配置\n<a name=\"K6UZv\"></a>\n## 配置user信息\n\n\n```\ngit config --global user.name 'your_name'\ngit config --global user.email 'your_email'\n\ngit config --local  #local只对某个仓库有效\ngit config --global  #global对当前用户的所有仓库有效\ngit config --system  #对系统所有登录用户有效，一般不用没什么意义\n\ngit config --global --list #显示配置项\n```\nlocal比global优先级要高<br />\n\n<a name=\"1Q93z\"></a>\n# 给文件重命名\n\n<br />\n\n```git\n#原来的使用：\nmv readme readme.md\ngit add readme.md\ngit rm readme\n#直接使用\ngit mv readme readme.md\n```\n\n\n<a name=\"InL4q\"></a>\n# 查看gitlog\n\n\n```git\ngit log #只显示当前分支\ngit log --all --graph #可以看所有的分支\ngit log --oneline --all -n4 #一行显示所有分支最近的4个\n```\n\n\n<a name=\"D3lfM\"></a>\n# .git目录\nHEAD：整个仓库正在工作的分支<br />config：存放仓库本地的配置信息，记录user等信息<br />refs：<br />objects：包括文件夹和pack<br />\n\n<a name=\"rzV7P\"></a>\n# commit、tree和blob之间的关系\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/187932/1558841650988-46fcccb5-6359-4112-8808-e60284941018.png#align=left&display=inline&height=681&margin=%5Bobject%20Object%5D&name=image.png&originHeight=681&originWidth=1132&size=170368&status=done&style=none&width=1132)<br />一个commit对应一棵tree，每个文件夹对应一个tree\n<a name=\"ra3di\"></a>\n# 分离头指针\n表示某个变更没有基于某个branch，在切换分支的时候，这些变更很有可能会被git当做垃圾清理，所以如果认为这些变更有用的话，一定要与某个branch绑定才能得到保留。\n<a name=\"2LCka\"></a>\n# HEAD和branch\n切换分支时，HEAD指向会发生变化。<br />\n\n```git\ngit diff HEAD HEAD^  #与上一次HEAD比较\ngit diff HEAD HEAD^^ #与上上次进行比较\ngit diff HEAD HEAD^3 #与上上上次进行比较\n```\n<a name=\"yVsnr\"></a>\n# 常用场景\n<a name=\"yIDvl\"></a>\n## 删除分支\n\n\n```git\ngit branch -d '分支名'  #清除分支的命令\ngit branch -D '分支名'  #确信清除没有影响，采用D清除\n```\n<a name=\"cDmjb\"></a>\n## 修改commit的message\n在维护自己的分支的时候，还没有提交的时候\n```git\ngit commit --amend   #修改最新的commit的message\ngit rebase -i 'commit id'  #修改更久的commit的message\n  然后按照提示进行修改\n```\n<a name=\"e5xQP\"></a>\n## 整理多个commit为1个\n\n\n```git\ngit rebase -i 'commit-id'  # commit-id为最久的想合并的\n```\n<a name=\"yxX2F\"></a>\n## 比较暂存区和HEAD所含文件的差异\n\n\n```git\ngit diff --cached  #表示暂存区和HEAD的区别\n```\n<a name=\"vvIkA\"></a>\n## 比较工作区和暂存区的区别\n\n\n```git\ngit diff #默认比较的是工作区和暂存区的区别\ngit diff --文件名 #比较文件\n```\n<a name=\"co5yg\"></a>\n## 让暂存区恢复成和HEAD一样\n\n\n```git\ngit reset HEAD #将暂存区所有的变更恢复成HEAD\n```\n<a name=\"5EUrs\"></a>\n## 工作区的文件恢复成暂存区一样\n\n\n```git\ngit checkout -- '文件名' \n```\n<a name=\"SC0Bx\"></a>\n## 取消暂存区部分文件的修改\n\n\n```git\ngit reset HEAD --'文件名'  # 将暂存区某一文件恢复成HEAD\n```\n<a name=\"VeLZp\"></a>\n## 消除最近的几次提交\n\n\n```git\ngit reset --hard 'commit-id' #慎用\n```\n<a name=\"gk3PU\"></a>\n## 看不同提交的指定文件的差异\n\n\n```git\ngit diff 'branch1' 'branch2' -- '文件名'\ngit diff 'commit-id1' 'commit-id2' -- '文件名'\n```\n<a name=\"axzdx\"></a>\n## 正确删除文件的方法\n\n\n```git\ngit rm '文件名'\n```\n<a name=\"tOivQ\"></a>\n## 开发临时加塞紧急任务处理方式\n\n\n```git\ngit stash\ngit stash apply\n或者 git stach pop  #两者区别是会丢掉\n```\n<a name=\"UrUu1\"></a>\n## Git的备份\n\n- 哑协议：不显示进度条\n- 智能协议：\n\n\n<br />\n<br />\n<br />大萨达<br />\n<br />231231<br />\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B78%2C0%2C3%5D%2C%5B78%2C0%2C3%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"6eb773998fda5f92c43dec6c2f5e699f_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>title:&nbsp;</span>MySQL相关概念总结</p><p data-lake-id=\"5b526a8c330824abb2ad2a2ed266acee_p_1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>date: 2019-1-20&nbsp;<span>11:27:21</span></span></p><p data-lake-id=\"25df1744b0cb5efedae8e8ce68fdb4d9_p_2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">categories: Git</p><p data-lake-id=\"7607cce4b2ff45f464bccde402f93672_p_3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">tags: [<span>Git</span>,学习]</p><p data-lake-id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" id=\"g3Deo\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><h1 id=\"OBWm9\" data-lake-id=\"0f045851db37db5449ef87a802b5b14a_h1_0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">简单配置</h1><h2 id=\"K6UZv\" data-lake-id=\"730fa44caeba149c3e441b65ea25a490_h2_0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">配置user信息</h2><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"NThl1\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git config --global user.name 'your_name'\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git config --global user.email 'your_email'\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git config --local  #local只对某个仓库有效\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git config --global  #global对当前用户的所有仓库有效\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git config --system  #对系统所有登录用户有效，一般不用没什么意义\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git config --global --list #显示配置项</span></span></pre></div></div></div><p data-lake-id=\"4db56cb9b514a959dedc215ebaaf5f9c_p_6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">local比global优先级要高</p><p data-lake-id=\"e1b0979b54c1fb29acc1d92ad2159922_p_7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 id=\"1Q93z\" data-lake-id=\"3852648c75906ed77a541a000588890a_h1_1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">给文件重命名</h1><p data-lake-id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"eadc4ec477465f1f239730d987d394b1_p_9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"T7Ozg\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#原来的使用：</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mv</span> readme readme.md\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> add readme.md\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rm</span> readme\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#直接使用</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mv</span> readme readme.md</span></span></pre></div></div></div><p data-lake-id=\"042da541aac17f869693ba89ebd10d8e_p_10\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 id=\"InL4q\" data-lake-id=\"638d61f1f7992ce9693af08213b6e949_h1_2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">查看gitlog</h1><p data-lake-id=\"828bea0262f636b25c97fbef525aed20_p_11\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"F42Ap\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> log <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#只显示当前分支</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> log <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--all</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--graph</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#可以看所有的分支</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> log <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--oneline</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--all</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-n4</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#一行显示所有分支最近的4个</span></span></span></pre></div></div></div><p data-lake-id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 id=\"D3lfM\" data-lake-id=\"17c66105a3520741092c062fac8b4852_h1_3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">.git目录</h1><p data-lake-id=\"8ed96ea93b7a1b773799c71225770807_p_13\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">HEAD：整个仓库正在工作的分支</p><p data-lake-id=\"a1b6a48bd83055f689871ed76ab748dd_p_14\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">config：存放仓库本地的配置信息，记录user等信息</p><p data-lake-id=\"35db0de6fb388e9eaa3f3825620389ff_p_15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">refs：</p><p data-lake-id=\"901d4bf6894938b0c052bf1cabc962b5_p_16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">objects：包括文件夹和pack</p><p data-lake-id=\"c5eaf555cee01ec836fc749258c6179d_p_17\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h1 id=\"rzV7P\" data-lake-id=\"f8734e05e5ae5e28e339dfd150d4288b_h1_4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">commit、tree和blob之间的关系</h1><p data-lake-id=\"344a7475ae8f63b0f5ca06e2f9c46233_p_18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1558841650988-46fcccb5-6359-4112-8808-e60284941018.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"681px\" style=\"visibility: visible; width: 1132px;\"></span></p><p data-lake-id=\"df8d4ce50938f4326b9f63d3976ee38d_p_19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个commit对应一棵tree，每个文件夹对应一个tree</p><h1 id=\"ra3di\" data-lake-id=\"482726339ab161f6057c25f871b8f32a_h1_5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">分离头指针</h1><p data-lake-id=\"d1a2de881772988772cd3480d9e703dc_p_20\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">表示某个变更没有基于某个branch，在切换分支的时候，这些变更很有可能会被git当做垃圾清理，所以如果认为这些变更有用的话，一定要与某个branch绑定才能得到保留。</p><h1 id=\"2LCka\" data-lake-id=\"77208fe9e6d0e6c2bd82247fb2fffee8_h1_6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">HEAD和branch</h1><p data-lake-id=\"700407418cfcd3677c9ca725b518e3ca_p_21\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">切换分支时，HEAD指向会发生变化。</p><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"ftEsc\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> HEAD HEAD^  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#与上一次HEAD比较</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> HEAD HEAD^^ <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#与上上次进行比较</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> HEAD HEAD^3 <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#与上上上次进行比较</span></span></span></pre></div></div></div><h1 id=\"yVsnr\" data-lake-id=\"5983ad9dc916301aeccc441569f651d1_h1_7\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">常用场景</h1><h2 id=\"yIDvl\" data-lake-id=\"0378a361a28b96b596c9b40ecad24100_h2_1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">删除分支</h2><p data-lake-id=\"4547a4b65fb57fca5301c6973643450c_p_23\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"xqFrx\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> branch <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-d</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'分支名'</span>  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#清除分支的命令</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> branch <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-D</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'分支名'</span>  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#确信清除没有影响，采用D清除</span></span></span></pre></div></div></div><h2 id=\"cDmjb\" data-lake-id=\"8840269f767851d9ac1c39150532f3f9_h2_2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">修改commit的message</h2><p data-lake-id=\"3422f63a32ff46973fe2198a04549dc1_p_24\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在维护自己的分支的时候，还没有提交的时候</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"RMJv1\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> commit <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--amend</span>   <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#修改最新的commit的message</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> rebase <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-i</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'commit id'</span>  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#修改更久的commit的message</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  然后按照提示进行修改</span></span></pre></div></div></div><h2 id=\"e5xQP\" data-lake-id=\"f9d899e3134fffea96871bfb3b73298a_h2_3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">整理多个commit为1个</h2><p data-lake-id=\"3afe72986fc83f6913935faccbcf69b2_p_25\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"pS0TE\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> rebase <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-i</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'commit-id'</span>  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># commit-id为最久的想合并的</span></span></span></pre></div></div></div><h2 id=\"yxX2F\" data-lake-id=\"12cb64dbd6b833e49134ce5222e7a70e_h2_4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">比较暂存区和HEAD所含文件的差异</h2><p data-lake-id=\"b57de0a6a045efefe71d109094be9ddc_p_26\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"kmVQC\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--cached</span>  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#表示暂存区和HEAD的区别</span></span></span></pre></div></div></div><h2 id=\"vvIkA\" data-lake-id=\"369fa9cf5bb4227c00e3cbf028340922_h2_5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">比较工作区和暂存区的区别</h2><p data-lake-id=\"4cc44302cfe9be1836a49b383f7e914f_p_27\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"b7xHK\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#默认比较的是工作区和暂存区的区别</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span>文件名 <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#比较文件</span></span></span></pre></div></div></div><h2 id=\"co5yg\" data-lake-id=\"4098e6086536394348cf9ecef954072e_h2_6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">让暂存区恢复成和HEAD一样</h2><p data-lake-id=\"d17d837b16c49a0e5c21edc18722e410_p_28\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"Ki47z\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> reset HEAD <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#将暂存区所有的变更恢复成HEAD</span></span></span></pre></div></div></div><h2 id=\"5EUrs\" data-lake-id=\"f697aa254a376b7bac93fcdc5270afbe_h2_7\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">工作区的文件恢复成暂存区一样</h2><p data-lake-id=\"d8f02fc6e1d9d5e68b5ff128662a6b29_p_29\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"twEQC\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> checkout <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'文件名'</span> </span></span></pre></div></div></div><h2 id=\"SC0Bx\" data-lake-id=\"714f7e76cf02e407c4fff5a6df0cf155_h2_8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">取消暂存区部分文件的修改</h2><p data-lake-id=\"d657ac1e4c3211af4f7dcea889518735_p_30\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"RVSxw\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> reset HEAD <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'文件名'</span>  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 将暂存区某一文件恢复成HEAD</span></span></span></pre></div></div></div><h2 id=\"VeLZp\" data-lake-id=\"5785e0623f9171258224477f753d59da_h2_9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">消除最近的几次提交</h2><p data-lake-id=\"e2e9b10bfede90e88bd47291199e0b55_p_31\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"fXgll\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> reset <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--hard</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'commit-id'</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#慎用</span></span></span></pre></div></div></div><h2 id=\"gk3PU\" data-lake-id=\"5ee42f41d7ba0d48eee635f6428bdf52_h2_10\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">看不同提交的指定文件的差异</h2><p data-lake-id=\"bb3e20f1faeaf6bf9497bffd7f381295_p_32\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"ZbGuR\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'branch1'</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'branch2'</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'文件名'</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">diff</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'commit-id1'</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'commit-id2'</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'文件名'</span></span></span></pre></div></div></div><h2 id=\"axzdx\" data-lake-id=\"9d024d60b18b46c97b73041594fff54d_h2_11\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">正确删除文件的方法</h2><p data-lake-id=\"73b74e66f7d869f94eb34b57d63eae3f_p_33\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"UCqeA\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rm</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'文件名'</span></span></span></pre></div></div></div><h2 id=\"tOivQ\" data-lake-id=\"16e281c856af5b86ecd065aa35dc0ed4_h2_12\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">开发临时加塞紧急任务处理方式</h2><p data-lake-id=\"39abba9494ef6da94608fbd0e487aa60_p_34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"6tC99\" data-language=\"git\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> stash\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> stash apply\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">或者 <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> stach pop  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#两者区别是会丢掉</span></span></span></pre></div></div></div><h2 id=\"UrUu1\" data-lake-id=\"35ca61b975ef005ec4c5e92b8b539ff1_h2_13\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Git的备份</h2><ul data-lake-id=\"a68db202bb7c690b641a73aac518a1fd_ul_0\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"b3fa487917f479f68bdb9fce76bc67cf_li_0\">哑协议：不显示进度条</li><li data-lake-id=\"3566a8c8523c34fd9fa2da69974ac35c_li_1\">智能协议：</li></ul><p data-lake-id=\"86d045d193aa7ac4616d4ea50a0dc92f_p_35\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"29912fa6b1bfe3ef993c2b4f9eb43928\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c0ffc2adeb7a5c934d6246244f92acb5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e36956652290c08769751d24063d0fe8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">大萨达</p><p data-lake-id=\"ee37eca3a18ec9b9fe34ee4d402c8da6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ca7f3c28cf59ed494859780e9479900c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">231231</p><p data-lake-id=\"6f8f966688575a1f666bafa122494f73_p_36\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"6eb773998fda5f92c43dec6c2f5e699f_p_0\"><span>title: </span>MySQL相关概念总结</p><p data-lake-id=\"5b526a8c330824abb2ad2a2ed266acee_p_1\"><span>date: 2019-1-20 <span>11:27:21</span></span></p><p data-lake-id=\"25df1744b0cb5efedae8e8ce68fdb4d9_p_2\">categories: Git</p><p data-lake-id=\"7607cce4b2ff45f464bccde402f93672_p_3\">tags: [<span>Git</span>,学习]</p><p data-lake-id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\"><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><h1 id=\"OBWm9\" data-lake-id=\"0f045851db37db5449ef87a802b5b14a_h1_0\">简单配置</h1><h2 id=\"K6UZv\" data-lake-id=\"730fa44caeba149c3e441b65ea25a490_h2_0\">配置user信息</h2><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22git%20config%20--global%20user.name%20'your_name'%5Cngit%20config%20--global%20user.email%20'your_email'%5Cn%5Cngit%20config%20--local%20%20%23local%E5%8F%AA%E5%AF%B9%E6%9F%90%E4%B8%AA%E4%BB%93%E5%BA%93%E6%9C%89%E6%95%88%5Cngit%20config%20--global%20%20%23global%E5%AF%B9%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E7%9A%84%E6%89%80%E6%9C%89%E4%BB%93%E5%BA%93%E6%9C%89%E6%95%88%5Cngit%20config%20--system%20%20%23%E5%AF%B9%E7%B3%BB%E7%BB%9F%E6%89%80%E6%9C%89%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7%E6%9C%89%E6%95%88%EF%BC%8C%E4%B8%80%E8%88%AC%E4%B8%8D%E7%94%A8%E6%B2%A1%E4%BB%80%E4%B9%88%E6%84%8F%E4%B9%89%5Cn%5Cngit%20config%20--global%20--list%20%23%E6%98%BE%E7%A4%BA%E9%85%8D%E7%BD%AE%E9%A1%B9%22%2C%22id%22%3A%22NThl1%22%7D\"></card><p data-lake-id=\"4db56cb9b514a959dedc215ebaaf5f9c_p_6\">local比global优先级要高</p><p data-lake-id=\"e1b0979b54c1fb29acc1d92ad2159922_p_7\"><br /></p><h1 id=\"1Q93z\" data-lake-id=\"3852648c75906ed77a541a000588890a_h1_1\">给文件重命名</h1><p data-lake-id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\"><br /></p><p data-lake-id=\"eadc4ec477465f1f239730d987d394b1_p_9\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22%23%E5%8E%9F%E6%9D%A5%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%9A%5Cnmv%20readme%20readme.md%5Cngit%20add%20readme.md%5Cngit%20rm%20readme%5Cn%23%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%5Cngit%20mv%20readme%20readme.md%22%2C%22id%22%3A%22T7Ozg%22%7D\"></card><p data-lake-id=\"042da541aac17f869693ba89ebd10d8e_p_10\"><br /></p><h1 id=\"InL4q\" data-lake-id=\"638d61f1f7992ce9693af08213b6e949_h1_2\">查看gitlog</h1><p data-lake-id=\"828bea0262f636b25c97fbef525aed20_p_11\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20log%20%23%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF%5Cngit%20log%20--all%20--graph%20%23%E5%8F%AF%E4%BB%A5%E7%9C%8B%E6%89%80%E6%9C%89%E7%9A%84%E5%88%86%E6%94%AF%5Cngit%20log%20--oneline%20--all%20-n4%20%23%E4%B8%80%E8%A1%8C%E6%98%BE%E7%A4%BA%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF%E6%9C%80%E8%BF%91%E7%9A%844%E4%B8%AA%22%2C%22id%22%3A%22F42Ap%22%7D\"></card><p data-lake-id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\"><br /></p><h1 id=\"D3lfM\" data-lake-id=\"17c66105a3520741092c062fac8b4852_h1_3\">.git目录</h1><p data-lake-id=\"8ed96ea93b7a1b773799c71225770807_p_13\">HEAD：整个仓库正在工作的分支</p><p data-lake-id=\"a1b6a48bd83055f689871ed76ab748dd_p_14\">config：存放仓库本地的配置信息，记录user等信息</p><p data-lake-id=\"35db0de6fb388e9eaa3f3825620389ff_p_15\">refs：</p><p data-lake-id=\"901d4bf6894938b0c052bf1cabc962b5_p_16\">objects：包括文件夹和pack</p><p data-lake-id=\"c5eaf555cee01ec836fc749258c6179d_p_17\"><br /></p><h1 id=\"rzV7P\" data-lake-id=\"f8734e05e5ae5e28e339dfd150d4288b_h1_4\">commit、tree和blob之间的关系</h1><p data-lake-id=\"344a7475ae8f63b0f5ca06e2f9c46233_p_18\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1558841650988-46fcccb5-6359-4112-8808-e60284941018.png%22%2C%22originWidth%22%3A1132%2C%22originHeight%22%3A681%2C%22name%22%3A%22image.png%22%2C%22size%22%3A170368%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A1132%2C%22height%22%3A681%7D\"></card></p><p data-lake-id=\"df8d4ce50938f4326b9f63d3976ee38d_p_19\">一个commit对应一棵tree，每个文件夹对应一个tree</p><h1 id=\"ra3di\" data-lake-id=\"482726339ab161f6057c25f871b8f32a_h1_5\">分离头指针</h1><p data-lake-id=\"d1a2de881772988772cd3480d9e703dc_p_20\">表示某个变更没有基于某个branch，在切换分支的时候，这些变更很有可能会被git当做垃圾清理，所以如果认为这些变更有用的话，一定要与某个branch绑定才能得到保留。</p><h1 id=\"2LCka\" data-lake-id=\"77208fe9e6d0e6c2bd82247fb2fffee8_h1_6\">HEAD和branch</h1><p data-lake-id=\"700407418cfcd3677c9ca725b518e3ca_p_21\">切换分支时，HEAD指向会发生变化。</p><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20HEAD%20HEAD%5E%20%20%23%E4%B8%8E%E4%B8%8A%E4%B8%80%E6%AC%A1HEAD%E6%AF%94%E8%BE%83%5Cngit%20diff%20HEAD%20HEAD%5E%5E%20%23%E4%B8%8E%E4%B8%8A%E4%B8%8A%E6%AC%A1%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83%5Cngit%20diff%20HEAD%20HEAD%5E3%20%23%E4%B8%8E%E4%B8%8A%E4%B8%8A%E4%B8%8A%E6%AC%A1%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83%22%2C%22id%22%3A%22ftEsc%22%7D\"></card><h1 id=\"yVsnr\" data-lake-id=\"5983ad9dc916301aeccc441569f651d1_h1_7\">常用场景</h1><h2 id=\"yIDvl\" data-lake-id=\"0378a361a28b96b596c9b40ecad24100_h2_1\">删除分支</h2><p data-lake-id=\"4547a4b65fb57fca5301c6973643450c_p_23\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20branch%20-d%20'%E5%88%86%E6%94%AF%E5%90%8D'%20%20%23%E6%B8%85%E9%99%A4%E5%88%86%E6%94%AF%E7%9A%84%E5%91%BD%E4%BB%A4%5Cngit%20branch%20-D%20'%E5%88%86%E6%94%AF%E5%90%8D'%20%20%23%E7%A1%AE%E4%BF%A1%E6%B8%85%E9%99%A4%E6%B2%A1%E6%9C%89%E5%BD%B1%E5%93%8D%EF%BC%8C%E9%87%87%E7%94%A8D%E6%B8%85%E9%99%A4%22%2C%22id%22%3A%22xqFrx%22%7D\"></card><h2 id=\"cDmjb\" data-lake-id=\"8840269f767851d9ac1c39150532f3f9_h2_2\">修改commit的message</h2><p data-lake-id=\"3422f63a32ff46973fe2198a04549dc1_p_24\">在维护自己的分支的时候，还没有提交的时候</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20commit%20--amend%20%20%20%23%E4%BF%AE%E6%94%B9%E6%9C%80%E6%96%B0%E7%9A%84commit%E7%9A%84message%5Cngit%20rebase%20-i%20'commit%20id'%20%20%23%E4%BF%AE%E6%94%B9%E6%9B%B4%E4%B9%85%E7%9A%84commit%E7%9A%84message%5Cn%20%20%E7%84%B6%E5%90%8E%E6%8C%89%E7%85%A7%E6%8F%90%E7%A4%BA%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9%22%2C%22id%22%3A%22RMJv1%22%7D\"></card><h2 id=\"e5xQP\" data-lake-id=\"f9d899e3134fffea96871bfb3b73298a_h2_3\">整理多个commit为1个</h2><p data-lake-id=\"3afe72986fc83f6913935faccbcf69b2_p_25\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20rebase%20-i%20'commit-id'%20%20%23%20commit-id%E4%B8%BA%E6%9C%80%E4%B9%85%E7%9A%84%E6%83%B3%E5%90%88%E5%B9%B6%E7%9A%84%22%2C%22id%22%3A%22pS0TE%22%7D\"></card><h2 id=\"yxX2F\" data-lake-id=\"12cb64dbd6b833e49134ce5222e7a70e_h2_4\">比较暂存区和HEAD所含文件的差异</h2><p data-lake-id=\"b57de0a6a045efefe71d109094be9ddc_p_26\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20--cached%20%20%23%E8%A1%A8%E7%A4%BA%E6%9A%82%E5%AD%98%E5%8C%BA%E5%92%8CHEAD%E7%9A%84%E5%8C%BA%E5%88%AB%22%2C%22id%22%3A%22kmVQC%22%7D\"></card><h2 id=\"vvIkA\" data-lake-id=\"369fa9cf5bb4227c00e3cbf028340922_h2_5\">比较工作区和暂存区的区别</h2><p data-lake-id=\"4cc44302cfe9be1836a49b383f7e914f_p_27\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20%23%E9%BB%98%E8%AE%A4%E6%AF%94%E8%BE%83%E7%9A%84%E6%98%AF%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E5%8C%BA%E5%88%AB%5Cngit%20diff%20--%E6%96%87%E4%BB%B6%E5%90%8D%20%23%E6%AF%94%E8%BE%83%E6%96%87%E4%BB%B6%22%2C%22id%22%3A%22b7xHK%22%7D\"></card><h2 id=\"co5yg\" data-lake-id=\"4098e6086536394348cf9ecef954072e_h2_6\">让暂存区恢复成和HEAD一样</h2><p data-lake-id=\"d17d837b16c49a0e5c21edc18722e410_p_28\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20reset%20HEAD%20%23%E5%B0%86%E6%9A%82%E5%AD%98%E5%8C%BA%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%98%E6%9B%B4%E6%81%A2%E5%A4%8D%E6%88%90HEAD%22%2C%22id%22%3A%22Ki47z%22%7D\"></card><h2 id=\"5EUrs\" data-lake-id=\"f697aa254a376b7bac93fcdc5270afbe_h2_7\">工作区的文件恢复成暂存区一样</h2><p data-lake-id=\"d8f02fc6e1d9d5e68b5ff128662a6b29_p_29\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20checkout%20--%20'%E6%96%87%E4%BB%B6%E5%90%8D'%20%22%2C%22id%22%3A%22twEQC%22%7D\"></card><h2 id=\"SC0Bx\" data-lake-id=\"714f7e76cf02e407c4fff5a6df0cf155_h2_8\">取消暂存区部分文件的修改</h2><p data-lake-id=\"d657ac1e4c3211af4f7dcea889518735_p_30\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20reset%20HEAD%20--'%E6%96%87%E4%BB%B6%E5%90%8D'%20%20%23%20%E5%B0%86%E6%9A%82%E5%AD%98%E5%8C%BA%E6%9F%90%E4%B8%80%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E6%88%90HEAD%22%2C%22id%22%3A%22RVSxw%22%7D\"></card><h2 id=\"VeLZp\" data-lake-id=\"5785e0623f9171258224477f753d59da_h2_9\">消除最近的几次提交</h2><p data-lake-id=\"e2e9b10bfede90e88bd47291199e0b55_p_31\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20reset%20--hard%20'commit-id'%20%23%E6%85%8E%E7%94%A8%22%2C%22id%22%3A%22fXgll%22%7D\"></card><h2 id=\"gk3PU\" data-lake-id=\"5ee42f41d7ba0d48eee635f6428bdf52_h2_10\">看不同提交的指定文件的差异</h2><p data-lake-id=\"bb3e20f1faeaf6bf9497bffd7f381295_p_32\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20'branch1'%20'branch2'%20--%20'%E6%96%87%E4%BB%B6%E5%90%8D'%5Cngit%20diff%20'commit-id1'%20'commit-id2'%20--%20'%E6%96%87%E4%BB%B6%E5%90%8D'%22%2C%22id%22%3A%22ZbGuR%22%7D\"></card><h2 id=\"axzdx\" data-lake-id=\"9d024d60b18b46c97b73041594fff54d_h2_11\">正确删除文件的方法</h2><p data-lake-id=\"73b74e66f7d869f94eb34b57d63eae3f_p_33\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20rm%20'%E6%96%87%E4%BB%B6%E5%90%8D'%22%2C%22id%22%3A%22UCqeA%22%7D\"></card><h2 id=\"tOivQ\" data-lake-id=\"16e281c856af5b86ecd065aa35dc0ed4_h2_12\">开发临时加塞紧急任务处理方式</h2><p data-lake-id=\"39abba9494ef6da94608fbd0e487aa60_p_34\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20stash%5Cngit%20stash%20apply%5Cn%E6%88%96%E8%80%85%20git%20stach%20pop%20%20%23%E4%B8%A4%E8%80%85%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BC%9A%E4%B8%A2%E6%8E%89%22%2C%22id%22%3A%226tC99%22%7D\"></card><h2 id=\"UrUu1\" data-lake-id=\"35ca61b975ef005ec4c5e92b8b539ff1_h2_13\">Git的备份</h2><ul data-lake-id=\"a68db202bb7c690b641a73aac518a1fd_ul_0\"><li data-lake-id=\"b3fa487917f479f68bdb9fce76bc67cf_li_0\">哑协议：不显示进度条</li><li data-lake-id=\"3566a8c8523c34fd9fa2da69974ac35c_li_1\">智能协议：</li></ul><p data-lake-id=\"86d045d193aa7ac4616d4ea50a0dc92f_p_35\"><br /></p><p data-lake-id=\"29912fa6b1bfe3ef993c2b4f9eb43928\"><br /></p><p data-lake-id=\"c0ffc2adeb7a5c934d6246244f92acb5\"><br /></p><p data-lake-id=\"e36956652290c08769751d24063d0fe8\">大萨达</p><p data-lake-id=\"ee37eca3a18ec9b9fe34ee4d402c8da6\"><br /></p><p data-lake-id=\"ca7f3c28cf59ed494859780e9479900c\">231231</p><p data-lake-id=\"6f8f966688575a1f666bafa122494f73_p_36\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"6eb773998fda5f92c43dec6c2f5e699f_p_0\"><span>title: </span>MySQL相关概念总结</p><p data-lake-id=\"5b526a8c330824abb2ad2a2ed266acee_p_1\"><span>date: 2019-1-20 <span>11:27:21</span></span></p><p data-lake-id=\"25df1744b0cb5efedae8e8ce68fdb4d9_p_2\">categories: Git</p><p data-lake-id=\"7607cce4b2ff45f464bccde402f93672_p_3\">tags: [<span>Git</span>,学习]</p><p data-lake-id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\"><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><h1 id=\"OBWm9\" data-lake-id=\"0f045851db37db5449ef87a802b5b14a_h1_0\">简单配置</h1><h2 id=\"K6UZv\" data-lake-id=\"730fa44caeba149c3e441b65ea25a490_h2_0\">配置user信息</h2><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22git%20config%20--global%20user.name%20'your_name'%5Cngit%20config%20--global%20user.email%20'your_email'%5Cn%5Cngit%20config%20--local%20%20%23local%E5%8F%AA%E5%AF%B9%E6%9F%90%E4%B8%AA%E4%BB%93%E5%BA%93%E6%9C%89%E6%95%88%5Cngit%20config%20--global%20%20%23global%E5%AF%B9%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E7%9A%84%E6%89%80%E6%9C%89%E4%BB%93%E5%BA%93%E6%9C%89%E6%95%88%5Cngit%20config%20--system%20%20%23%E5%AF%B9%E7%B3%BB%E7%BB%9F%E6%89%80%E6%9C%89%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7%E6%9C%89%E6%95%88%EF%BC%8C%E4%B8%80%E8%88%AC%E4%B8%8D%E7%94%A8%E6%B2%A1%E4%BB%80%E4%B9%88%E6%84%8F%E4%B9%89%5Cn%5Cngit%20config%20--global%20--list%20%23%E6%98%BE%E7%A4%BA%E9%85%8D%E7%BD%AE%E9%A1%B9%22%2C%22id%22%3A%22NThl1%22%7D\"></card><p data-lake-id=\"4db56cb9b514a959dedc215ebaaf5f9c_p_6\">local比global优先级要高</p><p data-lake-id=\"e1b0979b54c1fb29acc1d92ad2159922_p_7\"><br /></p><h1 id=\"1Q93z\" data-lake-id=\"3852648c75906ed77a541a000588890a_h1_1\">给文件重命名</h1><p data-lake-id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\"><br /></p><p data-lake-id=\"eadc4ec477465f1f239730d987d394b1_p_9\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22%23%E5%8E%9F%E6%9D%A5%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%9A%5Cnmv%20readme%20readme.md%5Cngit%20add%20readme.md%5Cngit%20rm%20readme%5Cn%23%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%5Cngit%20mv%20readme%20readme.md%22%2C%22id%22%3A%22T7Ozg%22%7D\"></card><p data-lake-id=\"042da541aac17f869693ba89ebd10d8e_p_10\"><br /></p><h1 id=\"InL4q\" data-lake-id=\"638d61f1f7992ce9693af08213b6e949_h1_2\">查看gitlog</h1><p data-lake-id=\"828bea0262f636b25c97fbef525aed20_p_11\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20log%20%23%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF%5Cngit%20log%20--all%20--graph%20%23%E5%8F%AF%E4%BB%A5%E7%9C%8B%E6%89%80%E6%9C%89%E7%9A%84%E5%88%86%E6%94%AF%5Cngit%20log%20--oneline%20--all%20-n4%20%23%E4%B8%80%E8%A1%8C%E6%98%BE%E7%A4%BA%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF%E6%9C%80%E8%BF%91%E7%9A%844%E4%B8%AA%22%2C%22id%22%3A%22F42Ap%22%7D\"></card><p data-lake-id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\"><br /></p><h1 id=\"D3lfM\" data-lake-id=\"17c66105a3520741092c062fac8b4852_h1_3\">.git目录</h1><p data-lake-id=\"8ed96ea93b7a1b773799c71225770807_p_13\">HEAD：整个仓库正在工作的分支</p><p data-lake-id=\"a1b6a48bd83055f689871ed76ab748dd_p_14\">config：存放仓库本地的配置信息，记录user等信息</p><p data-lake-id=\"35db0de6fb388e9eaa3f3825620389ff_p_15\">refs：</p><p data-lake-id=\"901d4bf6894938b0c052bf1cabc962b5_p_16\">objects：包括文件夹和pack</p><p data-lake-id=\"c5eaf555cee01ec836fc749258c6179d_p_17\"><br /></p><h1 id=\"rzV7P\" data-lake-id=\"f8734e05e5ae5e28e339dfd150d4288b_h1_4\">commit、tree和blob之间的关系</h1><p data-lake-id=\"344a7475ae8f63b0f5ca06e2f9c46233_p_18\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1558841650988-46fcccb5-6359-4112-8808-e60284941018.png%22%2C%22originWidth%22%3A1132%2C%22originHeight%22%3A681%2C%22name%22%3A%22image.png%22%2C%22size%22%3A170368%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A1132%2C%22height%22%3A681%7D\"></card></p><p data-lake-id=\"df8d4ce50938f4326b9f63d3976ee38d_p_19\">一个commit对应一棵tree，每个文件夹对应一个tree</p><h1 id=\"ra3di\" data-lake-id=\"482726339ab161f6057c25f871b8f32a_h1_5\">分离头指针</h1><p data-lake-id=\"d1a2de881772988772cd3480d9e703dc_p_20\">表示某个变更没有基于某个branch，在切换分支的时候，这些变更很有可能会被git当做垃圾清理，所以如果认为这些变更有用的话，一定要与某个branch绑定才能得到保留。</p><h1 id=\"2LCka\" data-lake-id=\"77208fe9e6d0e6c2bd82247fb2fffee8_h1_6\">HEAD和branch</h1><p data-lake-id=\"700407418cfcd3677c9ca725b518e3ca_p_21\">切换分支时，HEAD指向会发生变化。</p><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20HEAD%20HEAD%5E%20%20%23%E4%B8%8E%E4%B8%8A%E4%B8%80%E6%AC%A1HEAD%E6%AF%94%E8%BE%83%5Cngit%20diff%20HEAD%20HEAD%5E%5E%20%23%E4%B8%8E%E4%B8%8A%E4%B8%8A%E6%AC%A1%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83%5Cngit%20diff%20HEAD%20HEAD%5E3%20%23%E4%B8%8E%E4%B8%8A%E4%B8%8A%E4%B8%8A%E6%AC%A1%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83%22%2C%22id%22%3A%22ftEsc%22%7D\"></card><h1 id=\"yVsnr\" data-lake-id=\"5983ad9dc916301aeccc441569f651d1_h1_7\">常用场景</h1><h2 id=\"yIDvl\" data-lake-id=\"0378a361a28b96b596c9b40ecad24100_h2_1\">删除分支</h2><p data-lake-id=\"4547a4b65fb57fca5301c6973643450c_p_23\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20branch%20-d%20'%E5%88%86%E6%94%AF%E5%90%8D'%20%20%23%E6%B8%85%E9%99%A4%E5%88%86%E6%94%AF%E7%9A%84%E5%91%BD%E4%BB%A4%5Cngit%20branch%20-D%20'%E5%88%86%E6%94%AF%E5%90%8D'%20%20%23%E7%A1%AE%E4%BF%A1%E6%B8%85%E9%99%A4%E6%B2%A1%E6%9C%89%E5%BD%B1%E5%93%8D%EF%BC%8C%E9%87%87%E7%94%A8D%E6%B8%85%E9%99%A4%22%2C%22id%22%3A%22xqFrx%22%7D\"></card><h2 id=\"cDmjb\" data-lake-id=\"8840269f767851d9ac1c39150532f3f9_h2_2\">修改commit的message</h2><p data-lake-id=\"3422f63a32ff46973fe2198a04549dc1_p_24\">在维护自己的分支的时候，还没有提交的时候</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20commit%20--amend%20%20%20%23%E4%BF%AE%E6%94%B9%E6%9C%80%E6%96%B0%E7%9A%84commit%E7%9A%84message%5Cngit%20rebase%20-i%20'commit%20id'%20%20%23%E4%BF%AE%E6%94%B9%E6%9B%B4%E4%B9%85%E7%9A%84commit%E7%9A%84message%5Cn%20%20%E7%84%B6%E5%90%8E%E6%8C%89%E7%85%A7%E6%8F%90%E7%A4%BA%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9%22%2C%22id%22%3A%22RMJv1%22%7D\"></card><h2 id=\"e5xQP\" data-lake-id=\"f9d899e3134fffea96871bfb3b73298a_h2_3\">整理多个commit为1个</h2><p data-lake-id=\"3afe72986fc83f6913935faccbcf69b2_p_25\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20rebase%20-i%20'commit-id'%20%20%23%20commit-id%E4%B8%BA%E6%9C%80%E4%B9%85%E7%9A%84%E6%83%B3%E5%90%88%E5%B9%B6%E7%9A%84%22%2C%22id%22%3A%22pS0TE%22%7D\"></card><h2 id=\"yxX2F\" data-lake-id=\"12cb64dbd6b833e49134ce5222e7a70e_h2_4\">比较暂存区和HEAD所含文件的差异</h2><p data-lake-id=\"b57de0a6a045efefe71d109094be9ddc_p_26\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20--cached%20%20%23%E8%A1%A8%E7%A4%BA%E6%9A%82%E5%AD%98%E5%8C%BA%E5%92%8CHEAD%E7%9A%84%E5%8C%BA%E5%88%AB%22%2C%22id%22%3A%22kmVQC%22%7D\"></card><h2 id=\"vvIkA\" data-lake-id=\"369fa9cf5bb4227c00e3cbf028340922_h2_5\">比较工作区和暂存区的区别</h2><p data-lake-id=\"4cc44302cfe9be1836a49b383f7e914f_p_27\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20%23%E9%BB%98%E8%AE%A4%E6%AF%94%E8%BE%83%E7%9A%84%E6%98%AF%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E5%8C%BA%E5%88%AB%5Cngit%20diff%20--%E6%96%87%E4%BB%B6%E5%90%8D%20%23%E6%AF%94%E8%BE%83%E6%96%87%E4%BB%B6%22%2C%22id%22%3A%22b7xHK%22%7D\"></card><h2 id=\"co5yg\" data-lake-id=\"4098e6086536394348cf9ecef954072e_h2_6\">让暂存区恢复成和HEAD一样</h2><p data-lake-id=\"d17d837b16c49a0e5c21edc18722e410_p_28\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20reset%20HEAD%20%23%E5%B0%86%E6%9A%82%E5%AD%98%E5%8C%BA%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%98%E6%9B%B4%E6%81%A2%E5%A4%8D%E6%88%90HEAD%22%2C%22id%22%3A%22Ki47z%22%7D\"></card><h2 id=\"5EUrs\" data-lake-id=\"f697aa254a376b7bac93fcdc5270afbe_h2_7\">工作区的文件恢复成暂存区一样</h2><p data-lake-id=\"d8f02fc6e1d9d5e68b5ff128662a6b29_p_29\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20checkout%20--%20'%E6%96%87%E4%BB%B6%E5%90%8D'%20%22%2C%22id%22%3A%22twEQC%22%7D\"></card><h2 id=\"SC0Bx\" data-lake-id=\"714f7e76cf02e407c4fff5a6df0cf155_h2_8\">取消暂存区部分文件的修改</h2><p data-lake-id=\"d657ac1e4c3211af4f7dcea889518735_p_30\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20reset%20HEAD%20--'%E6%96%87%E4%BB%B6%E5%90%8D'%20%20%23%20%E5%B0%86%E6%9A%82%E5%AD%98%E5%8C%BA%E6%9F%90%E4%B8%80%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E6%88%90HEAD%22%2C%22id%22%3A%22RVSxw%22%7D\"></card><h2 id=\"VeLZp\" data-lake-id=\"5785e0623f9171258224477f753d59da_h2_9\">消除最近的几次提交</h2><p data-lake-id=\"e2e9b10bfede90e88bd47291199e0b55_p_31\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20reset%20--hard%20'commit-id'%20%23%E6%85%8E%E7%94%A8%22%2C%22id%22%3A%22fXgll%22%7D\"></card><h2 id=\"gk3PU\" data-lake-id=\"5ee42f41d7ba0d48eee635f6428bdf52_h2_10\">看不同提交的指定文件的差异</h2><p data-lake-id=\"bb3e20f1faeaf6bf9497bffd7f381295_p_32\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20diff%20'branch1'%20'branch2'%20--%20'%E6%96%87%E4%BB%B6%E5%90%8D'%5Cngit%20diff%20'commit-id1'%20'commit-id2'%20--%20'%E6%96%87%E4%BB%B6%E5%90%8D'%22%2C%22id%22%3A%22ZbGuR%22%7D\"></card><h2 id=\"axzdx\" data-lake-id=\"9d024d60b18b46c97b73041594fff54d_h2_11\">正确删除文件的方法</h2><p data-lake-id=\"73b74e66f7d869f94eb34b57d63eae3f_p_33\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20rm%20'%E6%96%87%E4%BB%B6%E5%90%8D'%22%2C%22id%22%3A%22UCqeA%22%7D\"></card><h2 id=\"tOivQ\" data-lake-id=\"16e281c856af5b86ecd065aa35dc0ed4_h2_12\">开发临时加塞紧急任务处理方式</h2><p data-lake-id=\"39abba9494ef6da94608fbd0e487aa60_p_34\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20stash%5Cngit%20stash%20apply%5Cn%E6%88%96%E8%80%85%20git%20stach%20pop%20%20%23%E4%B8%A4%E8%80%85%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BC%9A%E4%B8%A2%E6%8E%89%22%2C%22id%22%3A%226tC99%22%7D\"></card><h2 id=\"UrUu1\" data-lake-id=\"35ca61b975ef005ec4c5e92b8b539ff1_h2_13\">Git的备份</h2><ul data-lake-id=\"a68db202bb7c690b641a73aac518a1fd_ul_0\"><li data-lake-id=\"b3fa487917f479f68bdb9fce76bc67cf_li_0\">哑协议：不显示进度条</li><li data-lake-id=\"3566a8c8523c34fd9fa2da69974ac35c_li_1\">智能协议：</li></ul><p data-lake-id=\"86d045d193aa7ac4616d4ea50a0dc92f_p_35\"><br /></p><p data-lake-id=\"29912fa6b1bfe3ef993c2b4f9eb43928\"><br /></p><p data-lake-id=\"c0ffc2adeb7a5c934d6246244f92acb5\"><br /></p><p data-lake-id=\"e36956652290c08769751d24063d0fe8\">大萨达</p><p data-lake-id=\"ee37eca3a18ec9b9fe34ee4d402c8da6\"><br /></p><p data-lake-id=\"ca7f3c28cf59ed494859780e9479900c\">231231</p><p data-lake-id=\"6f8f966688575a1f666bafa122494f73_p_36\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-08T14:16:27.000Z",
    "deleted_at": null,
    "created_at": "2019-05-26T02:24:53.000Z",
    "updated_at": "2020-09-08T14:16:27.000Z",
    "published_at": "2020-09-08T14:16:27.000Z",
    "first_published_at": "2019-05-26T10:14:15.000Z",
    "word_count": 815,
    "cover": "https://cdn.nlark.com/yuque/0/2019/png/187932/1558841650988-46fcccb5-6359-4112-8808-e60284941018.png",
    "description": "title: MySQL相关概念总结date: 2019-1-20 11:27:21categories: Gittags: [Git,学习]简单配置配置user信息git config --global user.name 'your_name' git config --global us...",
    "custom_description": null,
    "hits": 24,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1681616,
    "slug": "td6co8",
    "title": "Hexo折腾笔记",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title: MySQL相关概念总结<br />categories: 工具<br />tags: [Hexo,博客]\n\n---\n\n\n\n> 没错，这几天又开始折腾一下博客了，最近的节奏天天白天待在实验室怼论文，晚上看C++，时间安排比较紧凑，就觉得更需要阶段性的总结吧，所以又来写博客了，github始终是一个好的选择，于是入了Hexo的坑。。折腾的过程心情总是有些复杂，在激动和mmp之间徘徊，虽然很多问题在wiki和issue里都有，但还是想总结一下自己亲自踩的坑。\n\n<a name=\"2018-12-24\"></a>\n## 2019-5-12\n修改语雀自动同步，不用再本地编辑和推送了，见：<br />[https://www.yuguocong.cn/yuque/mwklk2.html](https://www.yuguocong.cn/yuque/mwklk2.html) \n\n更换了主题：[Aircloud](https://github.com/aircloud/hexo-theme-aircloud) \n<a name=\"QGomr\"></a>\n## \n<a name=\"FaAMw\"></a>\n## 2018-12-24\n\n<a name=\"901461ce\"></a>\n### Hexo添加分类\n\n在文件中使用`categories`，然后配置`themes/_config.yml`文件：\n\n```\nmenu:\n  home: /\n  #categories: /categories/\n  archives: /archives/\n  tags: /tags/\n  books: /books   \n  movies: /movies\n  friends: /categories/friends\n  about: /categories/about\n```\n\n<a name=\"63713917\"></a>\n### 添加背景图片\n\n使用插件jquery-backstretch，编辑文件`/themes/next/layout/_layout.swig`,将下面的代码添加到最后面body的前面:\n\n```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-backstretch/2.0.4/jquery.backstretch.min.js\"></script>;\n  <script>\n  $(\"body\").backstretch(\"http://blog-1252063226.cosbj.myqcloud.com/network/20181224194730.png\");\n  </script>\n\n</body>\n```\n\n但是好像没有效果，于是在文件`themes\\next\\source\\css_custom\\custom.styl`中添加了如下：\n\n```\nbody {\n    background:url(https://source.unsplash.com/random/1600x900);\n    background-repeat: no-repeat;\n    background-attachment:fixed;\n    background-position:50% 50%;\n}\n\n//修改背景的不透明度\n.main-inner { \n    margin-top: 60px;\n    padding: 60px 60px 60px 60px;\n    background: #fff;\n    opacity: 0.8;\n    min-height: 500px;\n}\n```\n\n<a name=\"b2c9d447\"></a>\n### 使用hexo-neat进行压缩以增加页面速度\n\n采用`hexo-neat`进行压缩，插件地址为：https://github.com/rozbo/hexo-neat，使用步骤为：\n\n```\n#安装hexo-neat\n$ npm install hexo-neat --save\n```\n\n添加配置到根目录下的`_config.yml`，在最后加上(这里跟别人的有一些改动，因为有一些配置出了问题，找了很久，但是还是没有解决，干脆就不折腾了):\n\n```\n# hexo-neat\n# 博文压缩\nneat_enable: true\n# 压缩html\nneat_html:\n  enable: true\n  exclude:\n    - '**/*.html'\n# 压缩css  \nneat_css:\n  enable: true\n  exclude:\n    - '**/*.min.css'\n# 压缩js\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '**/*.min.js'\n    - '**/jquery.fancybox.pack.js'\n    - '**/index.js'\n```\n\n不用再做其他的改动，压缩前后的对比为：\n\n![](https://cdn.nlark.com/yuque/0/2019/png/187932/1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png#align=left&display=inline&height=179&originHeight=179&originWidth=717&size=0&status=done&width=717)\n\n![](https://cdn.nlark.com/yuque/0/2019/jpeg/187932/1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg#align=left&display=inline&height=407&originHeight=407&originWidth=1117&size=0&status=done&width=1117)\n<a name=\"335aadcc\"></a>\n##### 主页文章添加阴影效果\n\n<a name=\"3ed7ceff\"></a>\n##### 在网站底部加上访问量\n\n<a name=\"7b90033a\"></a>\n##### 添加热度\n\n<a name=\"424f8c57\"></a>\n##### 网站底部字数统计\n\n<a name=\"a61da507\"></a>\n##### 修改``代码块自定义样式\n\n打开`\\themes\\next\\source\\css\\_custom\\custom.styl`,向里面加入：(颜色可以自己定义):\n\n```\n// Custom styles.\ncode {\n    color: #ff7600;\n    background: #fbf7f8;\n    margin: 2px;\n}\n// 大代码块的自定义样式\n.highlight, pre {\n    margin: 5px 0;\n    padding: 5px;\n    border-radius: 3px;\n}\n.highlight, code, pre {\n    border: 1px solid #d6d6d6;\n}\n```\n\n<a name=\"67e9ff97\"></a>\n##### 添加访问量\n\n打开`\\themes\\next\\layout\\_partials\\footer.swig`文件,搜索`<div class=\"copyright\">`，在这个`div`标签前边加上如下代码:\n\n```\n<script async src=\"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n```\n\n然后再在合适的位置添加如下代码，放在footer.swig文件的末尾:\n\n```\n<div class=\"powered-by\">\n<i class=\"fa fa-user-md\"></i><span id=\"busuanzi_container_site_uv\">\n  本站访客数:<span id=\"busuanzi_value_site_uv\"></span>\n</span>\n</div>\n```\n\n<a name=\"96c6a927\"></a>\n##### 设置博文内链接为蓝色\n\n通过路径：`themes\\next\\source\\css\\_common\\components\\post\\`,打开`post.styl`文件，在文件中添加，如下字段：\n\n```\n.post-body p a{\n      color: #0593d3;\n      border-bottom: none;\n      &:hover {\n        color: #0477ab;\n        text-decoration: underline;\n      }\n    }\n```\n\n<a name=\"381bdc3c\"></a>\n##### 设置文章末尾”本文结束”标记\n\n<a name=\"bcfbbd85\"></a>\n##### 显示每篇文章字数\n\n<a name=\"07b3b5a4\"></a>\n##### 文章末尾添加版权说明\n\n直接修改`主题配置文件`，定位到`post_copyright`，将`enable`由`false`改为`true`即可。\n\n```\n# Declare license on posts\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 3.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/\n```\n\n<a name=\"c9107f73\"></a>\n##### 实现fork me on github\n\n在右上角或者左上角实现fork me on github。<br />点击[这里](https://blog.github.com/2008-12-19-github-ribbons/)挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：\n\n```\n<a href=\"https://github.com/you\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png\" alt=\"Fork me on GitHub\"></a>\n```\n\n粘贴刚才复制的代码到`themes/next/layout/_layout.swig`文件中(放在`<div class=\"headband\"></div>`的下面)，并把`href`标签改为github地址：\n\n<a name=\"83c9f21d\"></a>\n##### 修改文章底部的#号标签\n\n修改模板`/themes/next/layout/_macro/post.swig`，搜索 `rel=\"tag\">#`，将其中的 `#`换成`<i class=\"fa fa-tag\"></i>`\n\n<a name=\"bb66e963\"></a>\n##### 添加搜索功能\n\n安装 `hexo-generator-searchdb`，在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-searchdb --save\n```\n\n编辑 `站点配置文件` （站点根目录下），新增以下内容到任意位置：\n\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n编辑 `主题配置文件` （主题目录下），启用本地搜索功能：\n\n```\n# Local search\nlocal_search:\n  enable: true\n```\n\n<a name=\"9d7e7da8\"></a>\n##### 图床修改\n\n由于以前都是直接使用的github私人仓库做的图床，但是有时候就是访问不到，因为博客是采用双部署的，可能coding上的已经是外链了被屏蔽了，所以还是得想点别的办法了。<br />看到网上说的各种，其实都还是有点问题，最终发现最近的腾讯对象存储，发现还真的可以。<br />软件名：picgo<br />链接：[https://sspai.com/post/42310](https://sspai.com/post/42310)<br />使用方法：[https://github.com/Molunerfinn/PicGo/wiki/详细窗口的使用#v5版本说明](https://github.com/Molunerfinn/PicGo/wiki/%E8%AF%A6%E7%BB%86%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8#v5%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E)\n\n<a name=\"44054a16\"></a>\n##### Next主题个性化之自动更换背景图片\n\n[https://blog.csdn.net/mango_haoming/article/details/78473243](https://blog.csdn.net/mango_haoming/article/details/78473243)\n\n<a name=\"f95bcf01\"></a>\n##### 修改主题：yilia（已取消）\n\n[https://github.com/litten/hexo-theme-yilia](https://github.com/litten/hexo-theme-yilia)\n\n<a name=\"c0151d17\"></a>\n##### 2018-4-22 加入畅言评论（已取消）\n\n详见：[https://blog.csdn.net/lcyaiym/article/details/76762074](https://blog.csdn.net/lcyaiym/article/details/76762074)\n\n<a name=\"d6dd82fc\"></a>\n##### 2018-4-10 加入豆瓣读书和电影\n\n详细见：[https://github.com/mythsman/hexo-douban](https://github.com/mythsman/hexo-douban)\n\n<a name=\"b9b58a07\"></a>\n##### 页面中文无法显示的问题\n\n这种中文问题，基本上都是编码的问题，但是开始各种都没找到原因，改了language里面的配置文件，最后发现是文件的编码，需要改成'无bom的utf-8的编码格式 '\n\n<a name=\"53a898ea\"></a>\n##### 主界面无法显示categories和tags的问题\n\n这个问题真的是搞的有点久，因为基本上都被人忽略了，也可能很多人都没遇到而我恰好遇到了吧，不懂前端的我只能对于这种玄学问题强行百度了。<br />解决办法：将categories和tags目录下的index文件分别改成：\n\n```\ncategories:\ntype: \"categories\"\nlayout: \"categories\"\ntags:\ntype: \"tags\"\nlayout: \"tags\"\n```\n\n折腾完又不早了，希望以后好好看书，好好编程吧，最近没有什么特别大的梦想，只想安静的学习。。。\n\n<a name=\"2f83833c\"></a>\n##### 绑定gitpages到自己的域名\n\n打开[学生包](https://education.github.com/)，通过教育邮箱申请之后，可以在package中找到那么namecheap，注册通过GitHub进入，可以直接申请域名，会自动绑定到我们的gitpage，不过还需要一点点修改，就是把cname的www改成我们的gitpage页面，就可以了。。\n\n<a name=\"217a4820\"></a>\n##### 采用coding和gitpages双部署\n\n采用双部署的原因是国内访问github的速度有时候太感人了，有些人直接打不开，搞得有点尴尬，于是看到了网上所说的双部署，将默认的国内地址解析到coding的pages服务上，其他的绑定到gitpage上，这样国内的访问速度就快了。<br />具体的coding pages的搭建就不写了，在coding网站中建好仓库后，在我们本地的config文件后面的push repository 加上coding page仓库的地址就可以了。<br />具体的cname记录和A记录如下图：\n\n** Reference: **<br />[Hexo文档](https://hexo.io/zh-cn/docs/)<br />[Next主题文档](http://theme-next.iissnan.com/getting-started.html)<br />[绑定到coding](http://blog.csdn.net/dengnanyi/article/details/53969684)<br />[Hexo搭建的GitHub博客之优化大全](https://zhuanlan.zhihu.com/p/33616481)<br />[解决 Travis CI 总是更新旧博客的问题](https://wafer.li/Hexo/%E8%A7%A3%E5%86%B3%20Travis%20CI%20%E6%80%BB%E6%98%AF%E6%9B%B4%E6%96%B0%E6%97%A7%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%97%AE%E9%A2%98/)<br />[修改背景图片](http://www.tianguolangzi.com/2018/01/17/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/)<br />[Hexo添加分类](https://xyzardq.github.io/2016/11/02/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8A%9F%E8%83%BD/)\n",
    "body_draft": "title: MySQL相关概念总结<br />categories: 工具<br />tags: [Hexo,博客]\n\n---\n\n\n\n> 没错，这几天又开始折腾一下博客了，最近的节奏天天白天待在实验室怼论文，晚上看C++，时间安排比较紧凑，就觉得更需要阶段性的总结吧，所以又来写博客了，github始终是一个好的选择，于是入了Hexo的坑。。折腾的过程心情总是有些复杂，在激动和mmp之间徘徊，虽然很多问题在wiki和issue里都有，但还是想总结一下自己亲自踩的坑。\n\n<a name=\"2018-12-24\"></a>\n## 2019-5-12\n修改语雀自动同步，不用再本地编辑和推送了，见：<br />[https://www.yuguocong.cn/yuque/mwklk2.html](https://www.yuguocong.cn/yuque/mwklk2.html) \n\n更换了主题：[Aircloud](https://github.com/aircloud/hexo-theme-aircloud) \n<a name=\"QGomr\"></a>\n## \n<a name=\"FaAMw\"></a>\n## 2018-12-24\n\n<a name=\"901461ce\"></a>\n### Hexo添加分类\n\n在文件中使用`categories`，然后配置`themes/_config.yml`文件：\n\n```\nmenu:\n  home: /\n  #categories: /categories/\n  archives: /archives/\n  tags: /tags/\n  books: /books   \n  movies: /movies\n  friends: /categories/friends\n  about: /categories/about\n```\n\n<a name=\"63713917\"></a>\n### 添加背景图片\n\n使用插件jquery-backstretch，编辑文件`/themes/next/layout/_layout.swig`,将下面的代码添加到最后面body的前面:\n\n```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-backstretch/2.0.4/jquery.backstretch.min.js\"></script>;\n  <script>\n  $(\"body\").backstretch(\"http://blog-1252063226.cosbj.myqcloud.com/network/20181224194730.png\");\n  </script>\n\n</body>\n```\n\n但是好像没有效果，于是在文件`themes\\next\\source\\css_custom\\custom.styl`中添加了如下：\n\n```\nbody {\n    background:url(https://source.unsplash.com/random/1600x900);\n    background-repeat: no-repeat;\n    background-attachment:fixed;\n    background-position:50% 50%;\n}\n\n//修改背景的不透明度\n.main-inner { \n    margin-top: 60px;\n    padding: 60px 60px 60px 60px;\n    background: #fff;\n    opacity: 0.8;\n    min-height: 500px;\n}\n```\n\n<a name=\"b2c9d447\"></a>\n### 使用hexo-neat进行压缩以增加页面速度\n\n采用`hexo-neat`进行压缩，插件地址为：https://github.com/rozbo/hexo-neat，使用步骤为：\n\n```\n#安装hexo-neat\n$ npm install hexo-neat --save\n```\n\n添加配置到根目录下的`_config.yml`，在最后加上(这里跟别人的有一些改动，因为有一些配置出了问题，找了很久，但是还是没有解决，干脆就不折腾了):\n\n```\n# hexo-neat\n# 博文压缩\nneat_enable: true\n# 压缩html\nneat_html:\n  enable: true\n  exclude:\n    - '**/*.html'\n# 压缩css  \nneat_css:\n  enable: true\n  exclude:\n    - '**/*.min.css'\n# 压缩js\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '**/*.min.js'\n    - '**/jquery.fancybox.pack.js'\n    - '**/index.js'\n```\n\n不用再做其他的改动，压缩前后的对比为：\n\n![](https://cdn.nlark.com/yuque/0/2019/png/187932/1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png#align=left&display=inline&height=179&originHeight=179&originWidth=717&size=0&status=done&width=717)\n\n![](https://cdn.nlark.com/yuque/0/2019/jpeg/187932/1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg#align=left&display=inline&height=407&originHeight=407&originWidth=1117&size=0&status=done&width=1117)\n<a name=\"335aadcc\"></a>\n##### 主页文章添加阴影效果\n\n<a name=\"3ed7ceff\"></a>\n##### 在网站底部加上访问量\n\n<a name=\"7b90033a\"></a>\n##### 添加热度\n\n<a name=\"424f8c57\"></a>\n##### 网站底部字数统计\n\n<a name=\"a61da507\"></a>\n##### 修改``代码块自定义样式\n\n打开`\\themes\\next\\source\\css\\_custom\\custom.styl`,向里面加入：(颜色可以自己定义):\n\n```\n// Custom styles.\ncode {\n    color: #ff7600;\n    background: #fbf7f8;\n    margin: 2px;\n}\n// 大代码块的自定义样式\n.highlight, pre {\n    margin: 5px 0;\n    padding: 5px;\n    border-radius: 3px;\n}\n.highlight, code, pre {\n    border: 1px solid #d6d6d6;\n}\n```\n\n<a name=\"67e9ff97\"></a>\n##### 添加访问量\n\n打开`\\themes\\next\\layout\\_partials\\footer.swig`文件,搜索`<div class=\"copyright\">`，在这个`div`标签前边加上如下代码:\n\n```\n<script async src=\"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n```\n\n然后再在合适的位置添加如下代码，放在footer.swig文件的末尾:\n\n```\n<div class=\"powered-by\">\n<i class=\"fa fa-user-md\"></i><span id=\"busuanzi_container_site_uv\">\n  本站访客数:<span id=\"busuanzi_value_site_uv\"></span>\n</span>\n</div>\n```\n\n<a name=\"96c6a927\"></a>\n##### 设置博文内链接为蓝色\n\n通过路径：`themes\\next\\source\\css\\_common\\components\\post\\`,打开`post.styl`文件，在文件中添加，如下字段：\n\n```\n.post-body p a{\n      color: #0593d3;\n      border-bottom: none;\n      &:hover {\n        color: #0477ab;\n        text-decoration: underline;\n      }\n    }\n```\n\n<a name=\"381bdc3c\"></a>\n##### 设置文章末尾”本文结束”标记\n\n<a name=\"bcfbbd85\"></a>\n##### 显示每篇文章字数\n\n<a name=\"07b3b5a4\"></a>\n##### 文章末尾添加版权说明\n\n直接修改`主题配置文件`，定位到`post_copyright`，将`enable`由`false`改为`true`即可。\n\n```\n# Declare license on posts\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 3.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/\n```\n\n<a name=\"c9107f73\"></a>\n##### 实现fork me on github\n\n在右上角或者左上角实现fork me on github。<br />点击[这里](https://blog.github.com/2008-12-19-github-ribbons/)挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：\n\n```\n<a href=\"https://github.com/you\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png\" alt=\"Fork me on GitHub\"></a>\n```\n\n粘贴刚才复制的代码到`themes/next/layout/_layout.swig`文件中(放在`<div class=\"headband\"></div>`的下面)，并把`href`标签改为github地址：\n\n<a name=\"83c9f21d\"></a>\n##### 修改文章底部的#号标签\n\n修改模板`/themes/next/layout/_macro/post.swig`，搜索 `rel=\"tag\">#`，将其中的 `#`换成`<i class=\"fa fa-tag\"></i>`\n\n<a name=\"bb66e963\"></a>\n##### 添加搜索功能\n\n安装 `hexo-generator-searchdb`，在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-searchdb --save\n```\n\n编辑 `站点配置文件` （站点根目录下），新增以下内容到任意位置：\n\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n编辑 `主题配置文件` （主题目录下），启用本地搜索功能：\n\n```\n# Local search\nlocal_search:\n  enable: true\n```\n\n<a name=\"9d7e7da8\"></a>\n##### 图床修改\n\n由于以前都是直接使用的github私人仓库做的图床，但是有时候就是访问不到，因为博客是采用双部署的，可能coding上的已经是外链了被屏蔽了，所以还是得想点别的办法了。<br />看到网上说的各种，其实都还是有点问题，最终发现最近的腾讯对象存储，发现还真的可以。<br />软件名：picgo<br />链接：[https://sspai.com/post/42310](https://sspai.com/post/42310)<br />使用方法：[https://github.com/Molunerfinn/PicGo/wiki/详细窗口的使用#v5版本说明](https://github.com/Molunerfinn/PicGo/wiki/%E8%AF%A6%E7%BB%86%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8#v5%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E)\n\n<a name=\"44054a16\"></a>\n##### Next主题个性化之自动更换背景图片\n\n[https://blog.csdn.net/mango_haoming/article/details/78473243](https://blog.csdn.net/mango_haoming/article/details/78473243)\n\n<a name=\"f95bcf01\"></a>\n##### 修改主题：yilia（已取消）\n\n[https://github.com/litten/hexo-theme-yilia](https://github.com/litten/hexo-theme-yilia)\n\n<a name=\"c0151d17\"></a>\n##### 2018-4-22 加入畅言评论（已取消）\n\n详见：[https://blog.csdn.net/lcyaiym/article/details/76762074](https://blog.csdn.net/lcyaiym/article/details/76762074)\n\n<a name=\"d6dd82fc\"></a>\n##### 2018-4-10 加入豆瓣读书和电影\n\n详细见：[https://github.com/mythsman/hexo-douban](https://github.com/mythsman/hexo-douban)\n\n<a name=\"b9b58a07\"></a>\n##### 页面中文无法显示的问题\n\n这种中文问题，基本上都是编码的问题，但是开始各种都没找到原因，改了language里面的配置文件，最后发现是文件的编码，需要改成'无bom的utf-8的编码格式 '\n\n<a name=\"53a898ea\"></a>\n##### 主界面无法显示categories和tags的问题\n\n这个问题真的是搞的有点久，因为基本上都被人忽略了，也可能很多人都没遇到而我恰好遇到了吧，不懂前端的我只能对于这种玄学问题强行百度了。<br />解决办法：将categories和tags目录下的index文件分别改成：\n\n```\ncategories:\ntype: \"categories\"\nlayout: \"categories\"\ntags:\ntype: \"tags\"\nlayout: \"tags\"\n```\n\n折腾完又不早了，希望以后好好看书，好好编程吧，最近没有什么特别大的梦想，只想安静的学习。。。\n\n<a name=\"2f83833c\"></a>\n##### 绑定gitpages到自己的域名\n\n打开[学生包](https://education.github.com/)，通过教育邮箱申请之后，可以在package中找到那么namecheap，注册通过GitHub进入，可以直接申请域名，会自动绑定到我们的gitpage，不过还需要一点点修改，就是把cname的www改成我们的gitpage页面，就可以了。。\n\n<a name=\"217a4820\"></a>\n##### 采用coding和gitpages双部署\n\n采用双部署的原因是国内访问github的速度有时候太感人了，有些人直接打不开，搞得有点尴尬，于是看到了网上所说的双部署，将默认的国内地址解析到coding的pages服务上，其他的绑定到gitpage上，这样国内的访问速度就快了。<br />具体的coding pages的搭建就不写了，在coding网站中建好仓库后，在我们本地的config文件后面的push repository 加上coding page仓库的地址就可以了。<br />具体的cname记录和A记录如下图：\n\n** Reference: **<br />[Hexo文档](https://hexo.io/zh-cn/docs/)<br />[Next主题文档](http://theme-next.iissnan.com/getting-started.html)<br />[绑定到coding](http://blog.csdn.net/dengnanyi/article/details/53969684)<br />[Hexo搭建的GitHub博客之优化大全](https://zhuanlan.zhihu.com/p/33616481)<br />[解决 Travis CI 总是更新旧博客的问题](https://wafer.li/Hexo/%E8%A7%A3%E5%86%B3%20Travis%20CI%20%E6%80%BB%E6%98%AF%E6%9B%B4%E6%96%B0%E6%97%A7%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%97%AE%E9%A2%98/)<br />[修改背景图片](http://www.tianguolangzi.com/2018/01/17/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/)<br />[Hexo添加分类](https://xyzardq.github.io/2016/11/02/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8A%9F%E8%83%BD/)\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>title: </span>MySQL相关概念总结</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: 工具</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [Hexo,博客]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\" id=\"g3Deo\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">没错，这几天又开始折腾一下博客了，最近的节奏天天白天待在实验室怼论文，晚上看C++，时间安排比较紧凑，就觉得更需要阶段性的总结吧，所以又来写博客了，github始终是一个好的选择，于是入了Hexo的坑。。折腾的过程心情总是有些复杂，在激动和mmp之间徘徊，虽然很多问题在wiki和issue里都有，但还是想总结一下自己亲自踩的坑。</p></blockquote><h2 id=\"2018-12-24\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">2019<span data-lake-element=\"cursor\"></span>-5-12</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">修改语雀自动同步，不用再本地编辑和推送了，见：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://www.yuguocong.cn/yuque/mwklk2.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.yuguocong.cn/yuque/mwklk2.html</a>&nbsp;</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">更换了主题：<a href=\"https://github.com/aircloud/hexo-theme-aircloud\" target=\"_blank\" rel=\"noopener noreferrer\">Aircloud</a>&nbsp;</p><h2 id=\"QGomr\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><br></h2><h2 id=\"FaAMw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">2018-12-24</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"901461ce\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Hexo添加分类</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">在文件中使用<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">categories</code>，然后配置<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">themes/_config.yml</code>文件：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2249cda60b%22%2C%22code%22%3A%22menu%3A%5Cn%20%20home%3A%20%2F%5Cn%20%20%23categories%3A%20%2Fcategories%2F%5Cn%20%20archives%3A%20%2Farchives%2F%5Cn%20%20tags%3A%20%2Ftags%2F%5Cn%20%20books%3A%20%2Fbooks%20%20%20%5Cn%20%20movies%3A%20%2Fmovies%5Cn%20%20friends%3A%20%2Fcategories%2Ffriends%5Cn%20%20about%3A%20%2Fcategories%2Fabout%22%7D\" id=\"49cda60b\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">menu:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  home: /\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  #categories: /categories/\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  archives: /archives/\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  tags: /tags/\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  books: /books   \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  movies: /movies\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  friends: /categories/friends\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  about: /categories/about</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"63713917\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">添加背景图片</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">使用插件jquery-backstretch，编辑文件<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">/themes/next/layout/_layout.swig</code>,将下面的代码添加到最后面body的前面:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%228ffe379c%22%2C%22code%22%3A%22%3Cscript%20src%3D%5C%22https%3A%2F%2Fcdnjs.cloudflare.com%2Fajax%2Flibs%2Fjquery-backstretch%2F2.0.4%2Fjquery.backstretch.min.js%5C%22%3E%3C%2Fscript%3E%3B%5Cn%20%20%3Cscript%3E%5Cn%20%20%24(%5C%22body%5C%22).backstretch(%5C%22http%3A%2F%2Fblog-1252063226.cosbj.myqcloud.com%2Fnetwork%2F20181224194730.png%5C%22)%3B%5Cn%20%20%3C%2Fscript%3E%5Cn%5Cn%3C%2Fbody%3E%22%7D\" id=\"8ffe379c\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-backstretch/2.0.4/jquery.backstretch.min.js\"&gt;&lt;/script&gt;;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  &lt;script&gt;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  $(\"body\").backstretch(\"http://blog-1252063226.cosbj.myqcloud.com/network/20181224194730.png\");\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  &lt;/script&gt;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/body&gt;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">但是好像没有效果，于是在文件<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">themes\\next\\source\\css_custom\\custom.styl</code>中添加了如下：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22d7e2c91e%22%2C%22code%22%3A%22body%20%7B%5Cn%20%20%20%20background%3Aurl(https%3A%2F%2Fsource.unsplash.com%2Frandom%2F1600x900)%3B%5Cn%20%20%20%20background-repeat%3A%20no-repeat%3B%5Cn%20%20%20%20background-attachment%3Afixed%3B%5Cn%20%20%20%20background-position%3A50%25%2050%25%3B%5Cn%7D%5Cn%5Cn%2F%2F%E4%BF%AE%E6%94%B9%E8%83%8C%E6%99%AF%E7%9A%84%E4%B8%8D%E9%80%8F%E6%98%8E%E5%BA%A6%5Cn.main-inner%20%7B%20%5Cn%20%20%20%20margin-top%3A%2060px%3B%5Cn%20%20%20%20padding%3A%2060px%2060px%2060px%2060px%3B%5Cn%20%20%20%20background%3A%20%23fff%3B%5Cn%20%20%20%20opacity%3A%200.8%3B%5Cn%20%20%20%20min-height%3A%20500px%3B%5Cn%7D%22%7D\" id=\"d7e2c91e\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">body {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    background:url(https://source.unsplash.com/random/1600x900);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    background-repeat: no-repeat;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    background-attachment:fixed;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    background-position:50% 50%;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//修改背景的不透明度\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.main-inner { \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    margin-top: 60px;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    padding: 60px 60px 60px 60px;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    background: #fff;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    opacity: 0.8;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    min-height: 500px;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h3 id=\"b2c9d447\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">使用hexo-neat进行压缩以增加页面速度</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">采用<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">hexo-neat</code>进行压缩，插件地址为：https://github.com/rozbo/hexo-neat，使用步骤为：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%226b6de511%22%2C%22code%22%3A%22%23%E5%AE%89%E8%A3%85hexo-neat%5Cn%24%20npm%20install%20hexo-neat%20--save%22%7D\" id=\"6b6de511\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#安装hexo-neat\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$ npm install hexo-neat --save</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">添加配置到根目录下的<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">_config.yml</code>，在最后加上(这里跟别人的有一些改动，因为有一些配置出了问题，找了很久，但是还是没有解决，干脆就不折腾了):</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2233402a6e%22%2C%22code%22%3A%22%23%20hexo-neat%5Cn%23%20%E5%8D%9A%E6%96%87%E5%8E%8B%E7%BC%A9%5Cnneat_enable%3A%20true%5Cn%23%20%E5%8E%8B%E7%BC%A9html%5Cnneat_html%3A%5Cn%20%20enable%3A%20true%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.html'%5Cn%23%20%E5%8E%8B%E7%BC%A9css%20%20%5Cnneat_css%3A%5Cn%20%20enable%3A%20true%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.min.css'%5Cn%23%20%E5%8E%8B%E7%BC%A9js%5Cnneat_js%3A%5Cn%20%20enable%3A%20true%5Cn%20%20mangle%3A%20true%5Cn%20%20output%3A%5Cn%20%20compress%3A%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.min.js'%5Cn%20%20%20%20-%20'**%2Fjquery.fancybox.pack.js'%5Cn%20%20%20%20-%20'**%2Findex.js'%22%7D\" id=\"33402a6e\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># hexo-neat\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 博文压缩\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">neat_enable: true\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 压缩html\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">neat_html:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  enable: true\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  exclude:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - '**/*.html'\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 压缩css  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">neat_css:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  enable: true\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  exclude:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - '**/*.min.css'\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 压缩js\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">neat_js:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  enable: true\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  mangle: true\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  output:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  compress:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  exclude:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - '**/*.min.js'\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - '**/jquery.fancybox.pack.js'\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - '**/index.js'</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">不用再做其他的改动，压缩前后的对比为：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png%22%2C%22originWidth%22%3A717%2C%22originHeight%22%3A179%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A717%2C%22height%22%3A179%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/187932/1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png\" class=\"image lake-drag-image\" style=\"width: 717px; height: 179px; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fjpeg%2F187932%2F1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg%22%2C%22originWidth%22%3A1117%2C%22originHeight%22%3A407%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1117%2C%22height%22%3A407%7D\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/jpeg/187932/1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/jpeg/187932/1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg\" class=\"image lake-drag-image\" style=\"width: 778px; height: 283px; visibility: visible;\"></span></p><h5 id=\"335aadcc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">主页文章添加阴影效果</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"3ed7ceff\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">在网站底部加上访问量</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"7b90033a\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">添加热度</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"424f8c57\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">网站底部字数统计</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"a61da507\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">修改``代码块自定义样式</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">打开<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">\\themes\\next\\source\\css\\_custom\\custom.styl</code>,向里面加入：(颜色可以自己定义):</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%229949e79c%22%2C%22code%22%3A%22%2F%2F%20Custom%20styles.%5Cncode%20%7B%5Cn%20%20%20%20color%3A%20%23ff7600%3B%5Cn%20%20%20%20background%3A%20%23fbf7f8%3B%5Cn%20%20%20%20margin%3A%202px%3B%5Cn%7D%5Cn%2F%2F%20%E5%A4%A7%E4%BB%A3%E7%A0%81%E5%9D%97%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%5Cn.highlight%2C%20pre%20%7B%5Cn%20%20%20%20margin%3A%205px%200%3B%5Cn%20%20%20%20padding%3A%205px%3B%5Cn%20%20%20%20border-radius%3A%203px%3B%5Cn%7D%5Cn.highlight%2C%20code%2C%20pre%20%7B%5Cn%20%20%20%20border%3A%201px%20solid%20%23d6d6d6%3B%5Cn%7D%22%7D\" id=\"9949e79c\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// Custom styles.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">code {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    color: #ff7600;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    background: #fbf7f8;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    margin: 2px;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 大代码块的自定义样式\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.highlight, pre {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    margin: 5px 0;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    padding: 5px;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    border-radius: 3px;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.highlight, code, pre {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    border: 1px solid #d6d6d6;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"67e9ff97\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">添加访问量</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">打开<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">\\themes\\next\\layout\\_partials\\footer.swig</code>文件,搜索<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&lt;div class=\"copyright\"&gt;</code>，在这个<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">div</code>标签前边加上如下代码:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2286aaf753%22%2C%22code%22%3A%22%3Cscript%20async%20src%3D%5C%22https%3A%2F%2Fdn-lbstatics.qbox.me%2Fbusuanzi%2F2.3%2Fbusuanzi.pure.mini.js%5C%22%3E%3C%2Fscript%3E%22%7D\" id=\"86aaf753\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;script async src=\"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"&gt;&lt;/script&gt;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">然后再在合适的位置添加如下代码，放在footer.swig文件的末尾:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22ecbeb2c5%22%2C%22code%22%3A%22%3Cdiv%20class%3D%5C%22powered-by%5C%22%3E%5Cn%3Ci%20class%3D%5C%22fa%20fa-user-md%5C%22%3E%3C%2Fi%3E%3Cspan%20id%3D%5C%22busuanzi_container_site_uv%5C%22%3E%5Cn%20%20%E6%9C%AC%E7%AB%99%E8%AE%BF%E5%AE%A2%E6%95%B0%3A%3Cspan%20id%3D%5C%22busuanzi_value_site_uv%5C%22%3E%3C%2Fspan%3E%5Cn%3C%2Fspan%3E%5Cn%3C%2Fdiv%3E%22%7D\" id=\"ecbeb2c5\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;div class=\"powered-by\"&gt;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;i class=\"fa fa-user-md\"&gt;&lt;/i&gt;&lt;span id=\"busuanzi_container_site_uv\"&gt;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  本站访客数:&lt;span id=\"busuanzi_value_site_uv\"&gt;&lt;/span&gt;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/span&gt;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/div&gt;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"96c6a927\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">设置博文内链接为蓝色</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">通过路径：<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">themes\\next\\source\\css\\_common\\components\\post\\</code>,打开<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">post.styl</code>文件，在文件中添加，如下字段：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22ce257d62%22%2C%22code%22%3A%22.post-body%20p%20a%7B%5Cn%20%20%20%20%20%20color%3A%20%230593d3%3B%5Cn%20%20%20%20%20%20border-bottom%3A%20none%3B%5Cn%20%20%20%20%20%20%26%3Ahover%20%7B%5Cn%20%20%20%20%20%20%20%20color%3A%20%230477ab%3B%5Cn%20%20%20%20%20%20%20%20text-decoration%3A%20underline%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%22%7D\" id=\"ce257d62\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.post-body p a{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      color: #0593d3;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      border-bottom: none;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      &amp;:hover {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        color: #0477ab;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        text-decoration: underline;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"381bdc3c\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">设置文章末尾”本文结束”标记</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"bcfbbd85\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">显示每篇文章字数</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"07b3b5a4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">文章末尾添加版权说明</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">直接修改<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">主题配置文件</code>，定位到<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">post_copyright</code>，将<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">enable</code>由<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">false</code>改为<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">true</code>即可。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2208b85662%22%2C%22code%22%3A%22%23%20Declare%20license%20on%20posts%5Cnpost_copyright%3A%5Cn%20%20enable%3A%20true%5Cn%20%20license%3A%20CC%20BY-NC-SA%203.0%5Cn%20%20license_url%3A%20https%3A%2F%2Fcreativecommons.org%2Flicenses%2Fby-nc-sa%2F3.0%2F%22%7D\" id=\"08b85662\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># Declare license on posts\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">post_copyright:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  enable: true\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  license: CC BY-NC-SA 3.0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"c9107f73\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">实现fork me on github</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">在右上角或者左上角实现fork me on github。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">点击<a href=\"https://blog.github.com/2008-12-19-github-ribbons/\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%228de4b621%22%2C%22code%22%3A%22%3Ca%20href%3D%5C%22https%3A%2F%2Fgithub.com%2Fyou%5C%22%3E%3Cimg%20style%3D%5C%22position%3A%20absolute%3B%20top%3A%200%3B%20left%3A%200%3B%20border%3A%200%3B%5C%22%20src%3D%5C%22https%3A%2F%2Fs3.amazonaws.com%2Fgithub%2Fribbons%2Fforkme_left_darkblue_121621.png%5C%22%20alt%3D%5C%22Fork%20me%20on%20GitHub%5C%22%3E%3C%2Fa%3E%22%7D\" id=\"8de4b621\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;a href=\"https://github.com/you\"&gt;&lt;img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png\" alt=\"Fork me on GitHub\"&gt;&lt;/a&gt;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">粘贴刚才复制的代码到<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">themes/next/layout/_layout.swig</code>文件中(放在<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&lt;div class=\"headband\"&gt;&lt;/div&gt;</code>的下面)，并把<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">href</code>标签改为github地址：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"83c9f21d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">修改文章底部的#号标签</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">修改模板<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">/themes/next/layout/_macro/post.swig</code>，搜索 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">rel=\"tag\"&gt;#</code>，将其中的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">#</code>换成<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&lt;i class=\"fa fa-tag\"&gt;&lt;/i&gt;</code></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"bb66e963\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">添加搜索功能</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">安装 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%22bdb673f9%22%2C%22code%22%3A%22npm%20install%20hexo-generator-searchdb%20--save%22%7D\" id=\"bdb673f9\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">npm install hexo-generator-searchdb --save</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">编辑 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">站点配置文件</code> （站点根目录下），新增以下内容到任意位置：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%2286640abe%22%2C%22code%22%3A%22search%3A%5Cn%20%20path%3A%20search.xml%5Cn%20%20field%3A%20post%5Cn%20%20format%3A%20html%5Cn%20%20limit%3A%2010000%22%7D\" id=\"86640abe\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">search:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  path: search.xml\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  field: post\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  format: html\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  limit: 10000</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">编辑 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">主题配置文件</code> （主题目录下），启用本地搜索功能：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%227e5efc16%22%2C%22code%22%3A%22%23%20Local%20search%5Cnlocal_search%3A%5Cn%20%20enable%3A%20true%22%7D\" id=\"7e5efc16\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># Local search\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">local_search:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  enable: true</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"9d7e7da8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">图床修改</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">由于以前都是直接使用的github私人仓库做的图床，但是有时候就是访问不到，因为博客是采用双部署的，可能coding上的已经是外链了被屏蔽了，所以还是得想点别的办法了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">看到网上说的各种，其实都还是有点问题，最终发现最近的腾讯对象存储，发现还真的可以。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">软件名：picgo</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">链接：<a href=\"https://sspai.com/post/42310\" target=\"_blank\" rel=\"noopener noreferrer\">https://sspai.com/post/42310</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">使用方法：<a href=\"https://github.com/Molunerfinn/PicGo/wiki/%E8%AF%A6%E7%BB%86%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8#v5%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Molunerfinn/PicGo/wiki/详细窗口的使用#v5版本说明</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"44054a16\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">Next主题个性化之自动更换背景图片</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://blog.csdn.net/mango_haoming/article/details/78473243\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/mango_haoming/article/details/78473243</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"f95bcf01\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">修改主题：yilia（已取消）</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/litten/hexo-theme-yilia</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"c0151d17\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">2018-4-22 加入畅言评论（已取消）</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">详见：<a href=\"https://blog.csdn.net/lcyaiym/article/details/76762074\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/lcyaiym/article/details/76762074</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"d6dd82fc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">2018-4-10 加入豆瓣读书和电影</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">详细见：<a href=\"https://github.com/mythsman/hexo-douban\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/mythsman/hexo-douban</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"b9b58a07\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">页面中文无法显示的问题</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这种中文问题，基本上都是编码的问题，但是开始各种都没找到原因，改了language里面的配置文件，最后发现是文件的编码，需要改成'无bom的utf-8的编码格式 '</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"53a898ea\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">主界面无法显示categories和tags的问题</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这个问题真的是搞的有点久，因为基本上都被人忽略了，也可能很多人都没遇到而我恰好遇到了吧，不懂前端的我只能对于这种玄学问题强行百度了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">解决办法：将categories和tags目录下的index文件分别改成：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%223fe07bb1%22%2C%22code%22%3A%22categories%3A%5Cntype%3A%20%5C%22categories%5C%22%5Cnlayout%3A%20%5C%22categories%5C%22%5Cntags%3A%5Cntype%3A%20%5C%22tags%5C%22%5Cnlayout%3A%20%5C%22tags%5C%22%22%7D\" id=\"3fe07bb1\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">categories:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type: \"categories\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">layout: \"categories\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tags:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type: \"tags\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">layout: \"tags\"</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">折腾完又不早了，希望以后好好看书，好好编程吧，最近没有什么特别大的梦想，只想安静的学习。。。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"2f83833c\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">绑定gitpages到自己的域名</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">打开<a href=\"https://education.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">学生包</a>，通过教育邮箱申请之后，可以在package中找到那么namecheap，注册通过GitHub进入，可以直接申请域名，会自动绑定到我们的gitpage，不过还需要一点点修改，就是把cname的www改成我们的gitpage页面，就可以了。。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><h5 id=\"217a4820\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">采用coding和gitpages双部署</h5><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">采用双部署的原因是国内访问github的速度有时候太感人了，有些人直接打不开，搞得有点尴尬，于是看到了网上所说的双部署，将默认的国内地址解析到coding的pages服务上，其他的绑定到gitpage上，这样国内的访问速度就快了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">具体的coding pages的搭建就不写了，在coding网站中建好仓库后，在我们本地的config文件后面的push repository 加上coding page仓库的地址就可以了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">具体的cname记录和A记录如下图：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong> Reference: </strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">Hexo文档</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener noreferrer\">Next主题文档</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"http://blog.csdn.net/dengnanyi/article/details/53969684\" target=\"_blank\" rel=\"noopener noreferrer\">绑定到coding</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://zhuanlan.zhihu.com/p/33616481\" target=\"_blank\" rel=\"noopener noreferrer\">Hexo搭建的GitHub博客之优化大全</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://wafer.li/Hexo/%E8%A7%A3%E5%86%B3%20Travis%20CI%20%E6%80%BB%E6%98%AF%E6%9B%B4%E6%96%B0%E6%97%A7%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%97%AE%E9%A2%98/\" target=\"_blank\" rel=\"noopener noreferrer\">解决 Travis CI 总是更新旧博客的问题</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"http://www.tianguolangzi.com/2018/01/17/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/\" target=\"_blank\" rel=\"noopener noreferrer\">修改背景图片</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><a href=\"https://xyzardq.github.io/2016/11/02/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8A%9F%E8%83%BD/\" target=\"_blank\" rel=\"noopener noreferrer\">Hexo添加分类</a></p></div>",
    "body_lake": "<!doctype lake><p><span>title: </span>MySQL相关概念总结</p><p>categories: 工具</p><p>tags: [Hexo,博客]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><p><br /></p><p><br /></p><blockquote><p>没错，这几天又开始折腾一下博客了，最近的节奏天天白天待在实验室怼论文，晚上看C++，时间安排比较紧凑，就觉得更需要阶段性的总结吧，所以又来写博客了，github始终是一个好的选择，于是入了Hexo的坑。。折腾的过程心情总是有些复杂，在激动和mmp之间徘徊，虽然很多问题在wiki和issue里都有，但还是想总结一下自己亲自踩的坑。</p></blockquote><h2 id=\"2018-12-24\">2019<cursor />-5-12</h2><p>修改语雀自动同步，不用再本地编辑和推送了，见：</p><p><a href=\"https://www.yuguocong.cn/yuque/mwklk2.html\" target=\"_blank\">https://www.yuguocong.cn/yuque/mwklk2.html</a> </p><p><br /></p><p>更换了主题：<a href=\"https://github.com/aircloud/hexo-theme-aircloud\" target=\"_blank\">Aircloud</a> </p><h2 id=\"QGomr\"><br /></h2><h2 id=\"FaAMw\">2018-12-24</h2><p><br /></p><h3 id=\"901461ce\">Hexo添加分类</h3><p><br /></p><p>在文件中使用<code>categories</code>，然后配置<code>themes/_config.yml</code>文件：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2249cda60b%22%2C%22code%22%3A%22menu%3A%5Cn%20%20home%3A%20%2F%5Cn%20%20%23categories%3A%20%2Fcategories%2F%5Cn%20%20archives%3A%20%2Farchives%2F%5Cn%20%20tags%3A%20%2Ftags%2F%5Cn%20%20books%3A%20%2Fbooks%20%20%20%5Cn%20%20movies%3A%20%2Fmovies%5Cn%20%20friends%3A%20%2Fcategories%2Ffriends%5Cn%20%20about%3A%20%2Fcategories%2Fabout%22%7D\"></card><p><br /></p><h3 id=\"63713917\">添加背景图片</h3><p><br /></p><p>使用插件jquery-backstretch，编辑文件<code>/themes/next/layout/_layout.swig</code>,将下面的代码添加到最后面body的前面:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228ffe379c%22%2C%22code%22%3A%22%3Cscript%20src%3D%5C%22https%3A%2F%2Fcdnjs.cloudflare.com%2Fajax%2Flibs%2Fjquery-backstretch%2F2.0.4%2Fjquery.backstretch.min.js%5C%22%3E%3C%2Fscript%3E%3B%5Cn%20%20%3Cscript%3E%5Cn%20%20%24(%5C%22body%5C%22).backstretch(%5C%22http%3A%2F%2Fblog-1252063226.cosbj.myqcloud.com%2Fnetwork%2F20181224194730.png%5C%22)%3B%5Cn%20%20%3C%2Fscript%3E%5Cn%5Cn%3C%2Fbody%3E%22%7D\"></card><p><br /></p><p>但是好像没有效果，于是在文件<code>themes\\next\\source\\css_custom\\custom.styl</code>中添加了如下：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d7e2c91e%22%2C%22code%22%3A%22body%20%7B%5Cn%20%20%20%20background%3Aurl(https%3A%2F%2Fsource.unsplash.com%2Frandom%2F1600x900)%3B%5Cn%20%20%20%20background-repeat%3A%20no-repeat%3B%5Cn%20%20%20%20background-attachment%3Afixed%3B%5Cn%20%20%20%20background-position%3A50%25%2050%25%3B%5Cn%7D%5Cn%5Cn%2F%2F%E4%BF%AE%E6%94%B9%E8%83%8C%E6%99%AF%E7%9A%84%E4%B8%8D%E9%80%8F%E6%98%8E%E5%BA%A6%5Cn.main-inner%20%7B%20%5Cn%20%20%20%20margin-top%3A%2060px%3B%5Cn%20%20%20%20padding%3A%2060px%2060px%2060px%2060px%3B%5Cn%20%20%20%20background%3A%20%23fff%3B%5Cn%20%20%20%20opacity%3A%200.8%3B%5Cn%20%20%20%20min-height%3A%20500px%3B%5Cn%7D%22%7D\"></card><p><br /></p><h3 id=\"b2c9d447\">使用hexo-neat进行压缩以增加页面速度</h3><p><br /></p><p>采用<code>hexo-neat</code>进行压缩，插件地址为：https://github.com/rozbo/hexo-neat，使用步骤为：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226b6de511%22%2C%22code%22%3A%22%23%E5%AE%89%E8%A3%85hexo-neat%5Cn%24%20npm%20install%20hexo-neat%20--save%22%7D\"></card><p><br /></p><p>添加配置到根目录下的<code>_config.yml</code>，在最后加上(这里跟别人的有一些改动，因为有一些配置出了问题，找了很久，但是还是没有解决，干脆就不折腾了):</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2233402a6e%22%2C%22code%22%3A%22%23%20hexo-neat%5Cn%23%20%E5%8D%9A%E6%96%87%E5%8E%8B%E7%BC%A9%5Cnneat_enable%3A%20true%5Cn%23%20%E5%8E%8B%E7%BC%A9html%5Cnneat_html%3A%5Cn%20%20enable%3A%20true%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.html'%5Cn%23%20%E5%8E%8B%E7%BC%A9css%20%20%5Cnneat_css%3A%5Cn%20%20enable%3A%20true%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.min.css'%5Cn%23%20%E5%8E%8B%E7%BC%A9js%5Cnneat_js%3A%5Cn%20%20enable%3A%20true%5Cn%20%20mangle%3A%20true%5Cn%20%20output%3A%5Cn%20%20compress%3A%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.min.js'%5Cn%20%20%20%20-%20'**%2Fjquery.fancybox.pack.js'%5Cn%20%20%20%20-%20'**%2Findex.js'%22%7D\"></card><p><br /></p><p>不用再做其他的改动，压缩前后的对比为：</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png%22%2C%22originWidth%22%3A717%2C%22originHeight%22%3A179%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A717%2C%22height%22%3A179%7D\"></card></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fjpeg%2F187932%2F1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg%22%2C%22originWidth%22%3A1117%2C%22originHeight%22%3A407%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1117%2C%22height%22%3A407%7D\"></card></p><h5 id=\"335aadcc\">主页文章添加阴影效果</h5><p><br /></p><h5 id=\"3ed7ceff\">在网站底部加上访问量</h5><p><br /></p><h5 id=\"7b90033a\">添加热度</h5><p><br /></p><h5 id=\"424f8c57\">网站底部字数统计</h5><p><br /></p><h5 id=\"a61da507\">修改``代码块自定义样式</h5><p><br /></p><p>打开<code>\\themes\\next\\source\\css\\_custom\\custom.styl</code>,向里面加入：(颜色可以自己定义):</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229949e79c%22%2C%22code%22%3A%22%2F%2F%20Custom%20styles.%5Cncode%20%7B%5Cn%20%20%20%20color%3A%20%23ff7600%3B%5Cn%20%20%20%20background%3A%20%23fbf7f8%3B%5Cn%20%20%20%20margin%3A%202px%3B%5Cn%7D%5Cn%2F%2F%20%E5%A4%A7%E4%BB%A3%E7%A0%81%E5%9D%97%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%5Cn.highlight%2C%20pre%20%7B%5Cn%20%20%20%20margin%3A%205px%200%3B%5Cn%20%20%20%20padding%3A%205px%3B%5Cn%20%20%20%20border-radius%3A%203px%3B%5Cn%7D%5Cn.highlight%2C%20code%2C%20pre%20%7B%5Cn%20%20%20%20border%3A%201px%20solid%20%23d6d6d6%3B%5Cn%7D%22%7D\"></card><p><br /></p><h5 id=\"67e9ff97\">添加访问量</h5><p><br /></p><p>打开<code>\\themes\\next\\layout\\_partials\\footer.swig</code>文件,搜索<code>&lt;div class=&quot;copyright&quot;&gt;</code>，在这个<code>div</code>标签前边加上如下代码:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2286aaf753%22%2C%22code%22%3A%22%3Cscript%20async%20src%3D%5C%22https%3A%2F%2Fdn-lbstatics.qbox.me%2Fbusuanzi%2F2.3%2Fbusuanzi.pure.mini.js%5C%22%3E%3C%2Fscript%3E%22%7D\"></card><p><br /></p><p>然后再在合适的位置添加如下代码，放在footer.swig文件的末尾:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ecbeb2c5%22%2C%22code%22%3A%22%3Cdiv%20class%3D%5C%22powered-by%5C%22%3E%5Cn%3Ci%20class%3D%5C%22fa%20fa-user-md%5C%22%3E%3C%2Fi%3E%3Cspan%20id%3D%5C%22busuanzi_container_site_uv%5C%22%3E%5Cn%20%20%E6%9C%AC%E7%AB%99%E8%AE%BF%E5%AE%A2%E6%95%B0%3A%3Cspan%20id%3D%5C%22busuanzi_value_site_uv%5C%22%3E%3C%2Fspan%3E%5Cn%3C%2Fspan%3E%5Cn%3C%2Fdiv%3E%22%7D\"></card><p><br /></p><h5 id=\"96c6a927\">设置博文内链接为蓝色</h5><p><br /></p><p>通过路径：<code>themes\\next\\source\\css\\_common\\components\\post\\</code>,打开<code>post.styl</code>文件，在文件中添加，如下字段：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ce257d62%22%2C%22code%22%3A%22.post-body%20p%20a%7B%5Cn%20%20%20%20%20%20color%3A%20%230593d3%3B%5Cn%20%20%20%20%20%20border-bottom%3A%20none%3B%5Cn%20%20%20%20%20%20%26%3Ahover%20%7B%5Cn%20%20%20%20%20%20%20%20color%3A%20%230477ab%3B%5Cn%20%20%20%20%20%20%20%20text-decoration%3A%20underline%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%22%7D\"></card><p><br /></p><h5 id=\"381bdc3c\">设置文章末尾”本文结束”标记</h5><p><br /></p><h5 id=\"bcfbbd85\">显示每篇文章字数</h5><p><br /></p><h5 id=\"07b3b5a4\">文章末尾添加版权说明</h5><p><br /></p><p>直接修改<code>主题配置文件</code>，定位到<code>post_copyright</code>，将<code>enable</code>由<code>false</code>改为<code>true</code>即可。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2208b85662%22%2C%22code%22%3A%22%23%20Declare%20license%20on%20posts%5Cnpost_copyright%3A%5Cn%20%20enable%3A%20true%5Cn%20%20license%3A%20CC%20BY-NC-SA%203.0%5Cn%20%20license_url%3A%20https%3A%2F%2Fcreativecommons.org%2Flicenses%2Fby-nc-sa%2F3.0%2F%22%7D\"></card><p><br /></p><h5 id=\"c9107f73\">实现fork me on github</h5><p><br /></p><p>在右上角或者左上角实现fork me on github。</p><p>点击<a href=\"https://blog.github.com/2008-12-19-github-ribbons/\" target=\"_blank\">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228de4b621%22%2C%22code%22%3A%22%3Ca%20href%3D%5C%22https%3A%2F%2Fgithub.com%2Fyou%5C%22%3E%3Cimg%20style%3D%5C%22position%3A%20absolute%3B%20top%3A%200%3B%20left%3A%200%3B%20border%3A%200%3B%5C%22%20src%3D%5C%22https%3A%2F%2Fs3.amazonaws.com%2Fgithub%2Fribbons%2Fforkme_left_darkblue_121621.png%5C%22%20alt%3D%5C%22Fork%20me%20on%20GitHub%5C%22%3E%3C%2Fa%3E%22%7D\"></card><p><br /></p><p>粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>标签改为github地址：</p><p><br /></p><h5 id=\"83c9f21d\">修改文章底部的#号标签</h5><p><br /></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将其中的 <code>#</code>换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p><br /></p><h5 id=\"bb66e963\">添加搜索功能</h5><p><br /></p><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bdb673f9%22%2C%22code%22%3A%22npm%20install%20hexo-generator-searchdb%20--save%22%7D\"></card><p><br /></p><p>编辑 <code>站点配置文件</code> （站点根目录下），新增以下内容到任意位置：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2286640abe%22%2C%22code%22%3A%22search%3A%5Cn%20%20path%3A%20search.xml%5Cn%20%20field%3A%20post%5Cn%20%20format%3A%20html%5Cn%20%20limit%3A%2010000%22%7D\"></card><p><br /></p><p>编辑 <code>主题配置文件</code> （主题目录下），启用本地搜索功能：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227e5efc16%22%2C%22code%22%3A%22%23%20Local%20search%5Cnlocal_search%3A%5Cn%20%20enable%3A%20true%22%7D\"></card><p><br /></p><h5 id=\"9d7e7da8\">图床修改</h5><p><br /></p><p>由于以前都是直接使用的github私人仓库做的图床，但是有时候就是访问不到，因为博客是采用双部署的，可能coding上的已经是外链了被屏蔽了，所以还是得想点别的办法了。</p><p>看到网上说的各种，其实都还是有点问题，最终发现最近的腾讯对象存储，发现还真的可以。</p><p>软件名：picgo</p><p>链接：<a href=\"https://sspai.com/post/42310\" target=\"_blank\">https://sspai.com/post/42310</a></p><p>使用方法：<a href=\"https://github.com/Molunerfinn/PicGo/wiki/%E8%AF%A6%E7%BB%86%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8#v5%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\" target=\"_blank\">https://github.com/Molunerfinn/PicGo/wiki/详细窗口的使用#v5版本说明</a></p><p><br /></p><h5 id=\"44054a16\">Next主题个性化之自动更换背景图片</h5><p><br /></p><p><a href=\"https://blog.csdn.net/mango_haoming/article/details/78473243\" target=\"_blank\">https://blog.csdn.net/mango_haoming/article/details/78473243</a></p><p><br /></p><h5 id=\"f95bcf01\">修改主题：yilia（已取消）</h5><p><br /></p><p><a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\">https://github.com/litten/hexo-theme-yilia</a></p><p><br /></p><h5 id=\"c0151d17\">2018-4-22 加入畅言评论（已取消）</h5><p><br /></p><p>详见：<a href=\"https://blog.csdn.net/lcyaiym/article/details/76762074\" target=\"_blank\">https://blog.csdn.net/lcyaiym/article/details/76762074</a></p><p><br /></p><h5 id=\"d6dd82fc\">2018-4-10 加入豆瓣读书和电影</h5><p><br /></p><p>详细见：<a href=\"https://github.com/mythsman/hexo-douban\" target=\"_blank\">https://github.com/mythsman/hexo-douban</a></p><p><br /></p><h5 id=\"b9b58a07\">页面中文无法显示的问题</h5><p><br /></p><p>这种中文问题，基本上都是编码的问题，但是开始各种都没找到原因，改了language里面的配置文件，最后发现是文件的编码，需要改成'无bom的utf-8的编码格式 '</p><p><br /></p><h5 id=\"53a898ea\">主界面无法显示categories和tags的问题</h5><p><br /></p><p>这个问题真的是搞的有点久，因为基本上都被人忽略了，也可能很多人都没遇到而我恰好遇到了吧，不懂前端的我只能对于这种玄学问题强行百度了。</p><p>解决办法：将categories和tags目录下的index文件分别改成：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223fe07bb1%22%2C%22code%22%3A%22categories%3A%5Cntype%3A%20%5C%22categories%5C%22%5Cnlayout%3A%20%5C%22categories%5C%22%5Cntags%3A%5Cntype%3A%20%5C%22tags%5C%22%5Cnlayout%3A%20%5C%22tags%5C%22%22%7D\"></card><p><br /></p><p>折腾完又不早了，希望以后好好看书，好好编程吧，最近没有什么特别大的梦想，只想安静的学习。。。</p><p><br /></p><h5 id=\"2f83833c\">绑定gitpages到自己的域名</h5><p><br /></p><p>打开<a href=\"https://education.github.com/\" target=\"_blank\">学生包</a>，通过教育邮箱申请之后，可以在package中找到那么namecheap，注册通过GitHub进入，可以直接申请域名，会自动绑定到我们的gitpage，不过还需要一点点修改，就是把cname的www改成我们的gitpage页面，就可以了。。</p><p><br /></p><h5 id=\"217a4820\">采用coding和gitpages双部署</h5><p><br /></p><p>采用双部署的原因是国内访问github的速度有时候太感人了，有些人直接打不开，搞得有点尴尬，于是看到了网上所说的双部署，将默认的国内地址解析到coding的pages服务上，其他的绑定到gitpage上，这样国内的访问速度就快了。</p><p>具体的coding pages的搭建就不写了，在coding网站中建好仓库后，在我们本地的config文件后面的push repository 加上coding page仓库的地址就可以了。</p><p>具体的cname记录和A记录如下图：</p><p><br /></p><p><strong> Reference: </strong></p><p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\">Hexo文档</a></p><p><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\">Next主题文档</a></p><p><a href=\"http://blog.csdn.net/dengnanyi/article/details/53969684\" target=\"_blank\">绑定到coding</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/33616481\" target=\"_blank\">Hexo搭建的GitHub博客之优化大全</a></p><p><a href=\"https://wafer.li/Hexo/%E8%A7%A3%E5%86%B3%20Travis%20CI%20%E6%80%BB%E6%98%AF%E6%9B%B4%E6%96%B0%E6%97%A7%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%97%AE%E9%A2%98/\" target=\"_blank\">解决 Travis CI 总是更新旧博客的问题</a></p><p><a href=\"http://www.tianguolangzi.com/2018/01/17/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/\" target=\"_blank\">修改背景图片</a></p><p><a href=\"https://xyzardq.github.io/2016/11/02/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8A%9F%E8%83%BD/\" target=\"_blank\">Hexo添加分类</a></p>",
    "body_draft_lake": "<!doctype lake><p><span>title: </span>MySQL相关概念总结</p><p>categories: 工具</p><p>tags: [Hexo,博客]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><p><br /></p><p><br /></p><blockquote><p>没错，这几天又开始折腾一下博客了，最近的节奏天天白天待在实验室怼论文，晚上看C++，时间安排比较紧凑，就觉得更需要阶段性的总结吧，所以又来写博客了，github始终是一个好的选择，于是入了Hexo的坑。。折腾的过程心情总是有些复杂，在激动和mmp之间徘徊，虽然很多问题在wiki和issue里都有，但还是想总结一下自己亲自踩的坑。</p></blockquote><h2 id=\"2018-12-24\">2019<cursor />-5-12</h2><p>修改语雀自动同步，不用再本地编辑和推送了，见：</p><p><a href=\"https://www.yuguocong.cn/yuque/mwklk2.html\" target=\"_blank\">https://www.yuguocong.cn/yuque/mwklk2.html</a> </p><p><br /></p><p>更换了主题：<a href=\"https://github.com/aircloud/hexo-theme-aircloud\" target=\"_blank\">Aircloud</a> </p><h2 id=\"QGomr\"><br /></h2><h2 id=\"FaAMw\">2018-12-24</h2><p><br /></p><h3 id=\"901461ce\">Hexo添加分类</h3><p><br /></p><p>在文件中使用<code>categories</code>，然后配置<code>themes/_config.yml</code>文件：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2249cda60b%22%2C%22code%22%3A%22menu%3A%5Cn%20%20home%3A%20%2F%5Cn%20%20%23categories%3A%20%2Fcategories%2F%5Cn%20%20archives%3A%20%2Farchives%2F%5Cn%20%20tags%3A%20%2Ftags%2F%5Cn%20%20books%3A%20%2Fbooks%20%20%20%5Cn%20%20movies%3A%20%2Fmovies%5Cn%20%20friends%3A%20%2Fcategories%2Ffriends%5Cn%20%20about%3A%20%2Fcategories%2Fabout%22%7D\"></card><p><br /></p><h3 id=\"63713917\">添加背景图片</h3><p><br /></p><p>使用插件jquery-backstretch，编辑文件<code>/themes/next/layout/_layout.swig</code>,将下面的代码添加到最后面body的前面:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228ffe379c%22%2C%22code%22%3A%22%3Cscript%20src%3D%5C%22https%3A%2F%2Fcdnjs.cloudflare.com%2Fajax%2Flibs%2Fjquery-backstretch%2F2.0.4%2Fjquery.backstretch.min.js%5C%22%3E%3C%2Fscript%3E%3B%5Cn%20%20%3Cscript%3E%5Cn%20%20%24(%5C%22body%5C%22).backstretch(%5C%22http%3A%2F%2Fblog-1252063226.cosbj.myqcloud.com%2Fnetwork%2F20181224194730.png%5C%22)%3B%5Cn%20%20%3C%2Fscript%3E%5Cn%5Cn%3C%2Fbody%3E%22%7D\"></card><p><br /></p><p>但是好像没有效果，于是在文件<code>themes\\next\\source\\css_custom\\custom.styl</code>中添加了如下：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d7e2c91e%22%2C%22code%22%3A%22body%20%7B%5Cn%20%20%20%20background%3Aurl(https%3A%2F%2Fsource.unsplash.com%2Frandom%2F1600x900)%3B%5Cn%20%20%20%20background-repeat%3A%20no-repeat%3B%5Cn%20%20%20%20background-attachment%3Afixed%3B%5Cn%20%20%20%20background-position%3A50%25%2050%25%3B%5Cn%7D%5Cn%5Cn%2F%2F%E4%BF%AE%E6%94%B9%E8%83%8C%E6%99%AF%E7%9A%84%E4%B8%8D%E9%80%8F%E6%98%8E%E5%BA%A6%5Cn.main-inner%20%7B%20%5Cn%20%20%20%20margin-top%3A%2060px%3B%5Cn%20%20%20%20padding%3A%2060px%2060px%2060px%2060px%3B%5Cn%20%20%20%20background%3A%20%23fff%3B%5Cn%20%20%20%20opacity%3A%200.8%3B%5Cn%20%20%20%20min-height%3A%20500px%3B%5Cn%7D%22%7D\"></card><p><br /></p><h3 id=\"b2c9d447\">使用hexo-neat进行压缩以增加页面速度</h3><p><br /></p><p>采用<code>hexo-neat</code>进行压缩，插件地址为：https://github.com/rozbo/hexo-neat，使用步骤为：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226b6de511%22%2C%22code%22%3A%22%23%E5%AE%89%E8%A3%85hexo-neat%5Cn%24%20npm%20install%20hexo-neat%20--save%22%7D\"></card><p><br /></p><p>添加配置到根目录下的<code>_config.yml</code>，在最后加上(这里跟别人的有一些改动，因为有一些配置出了问题，找了很久，但是还是没有解决，干脆就不折腾了):</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2233402a6e%22%2C%22code%22%3A%22%23%20hexo-neat%5Cn%23%20%E5%8D%9A%E6%96%87%E5%8E%8B%E7%BC%A9%5Cnneat_enable%3A%20true%5Cn%23%20%E5%8E%8B%E7%BC%A9html%5Cnneat_html%3A%5Cn%20%20enable%3A%20true%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.html'%5Cn%23%20%E5%8E%8B%E7%BC%A9css%20%20%5Cnneat_css%3A%5Cn%20%20enable%3A%20true%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.min.css'%5Cn%23%20%E5%8E%8B%E7%BC%A9js%5Cnneat_js%3A%5Cn%20%20enable%3A%20true%5Cn%20%20mangle%3A%20true%5Cn%20%20output%3A%5Cn%20%20compress%3A%5Cn%20%20exclude%3A%5Cn%20%20%20%20-%20'**%2F*.min.js'%5Cn%20%20%20%20-%20'**%2Fjquery.fancybox.pack.js'%5Cn%20%20%20%20-%20'**%2Findex.js'%22%7D\"></card><p><br /></p><p>不用再做其他的改动，压缩前后的对比为：</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F187932%2F1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png%22%2C%22originWidth%22%3A717%2C%22originHeight%22%3A179%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A717%2C%22height%22%3A179%7D\"></card></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fjpeg%2F187932%2F1557751534766-e8651cdc-63b9-40d7-979c-f796aabb328a.jpeg%22%2C%22originWidth%22%3A1117%2C%22originHeight%22%3A407%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1117%2C%22height%22%3A407%7D\"></card></p><h5 id=\"335aadcc\">主页文章添加阴影效果</h5><p><br /></p><h5 id=\"3ed7ceff\">在网站底部加上访问量</h5><p><br /></p><h5 id=\"7b90033a\">添加热度</h5><p><br /></p><h5 id=\"424f8c57\">网站底部字数统计</h5><p><br /></p><h5 id=\"a61da507\">修改``代码块自定义样式</h5><p><br /></p><p>打开<code>\\themes\\next\\source\\css\\_custom\\custom.styl</code>,向里面加入：(颜色可以自己定义):</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229949e79c%22%2C%22code%22%3A%22%2F%2F%20Custom%20styles.%5Cncode%20%7B%5Cn%20%20%20%20color%3A%20%23ff7600%3B%5Cn%20%20%20%20background%3A%20%23fbf7f8%3B%5Cn%20%20%20%20margin%3A%202px%3B%5Cn%7D%5Cn%2F%2F%20%E5%A4%A7%E4%BB%A3%E7%A0%81%E5%9D%97%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%5Cn.highlight%2C%20pre%20%7B%5Cn%20%20%20%20margin%3A%205px%200%3B%5Cn%20%20%20%20padding%3A%205px%3B%5Cn%20%20%20%20border-radius%3A%203px%3B%5Cn%7D%5Cn.highlight%2C%20code%2C%20pre%20%7B%5Cn%20%20%20%20border%3A%201px%20solid%20%23d6d6d6%3B%5Cn%7D%22%7D\"></card><p><br /></p><h5 id=\"67e9ff97\">添加访问量</h5><p><br /></p><p>打开<code>\\themes\\next\\layout\\_partials\\footer.swig</code>文件,搜索<code>&lt;div class=&quot;copyright&quot;&gt;</code>，在这个<code>div</code>标签前边加上如下代码:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2286aaf753%22%2C%22code%22%3A%22%3Cscript%20async%20src%3D%5C%22https%3A%2F%2Fdn-lbstatics.qbox.me%2Fbusuanzi%2F2.3%2Fbusuanzi.pure.mini.js%5C%22%3E%3C%2Fscript%3E%22%7D\"></card><p><br /></p><p>然后再在合适的位置添加如下代码，放在footer.swig文件的末尾:</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ecbeb2c5%22%2C%22code%22%3A%22%3Cdiv%20class%3D%5C%22powered-by%5C%22%3E%5Cn%3Ci%20class%3D%5C%22fa%20fa-user-md%5C%22%3E%3C%2Fi%3E%3Cspan%20id%3D%5C%22busuanzi_container_site_uv%5C%22%3E%5Cn%20%20%E6%9C%AC%E7%AB%99%E8%AE%BF%E5%AE%A2%E6%95%B0%3A%3Cspan%20id%3D%5C%22busuanzi_value_site_uv%5C%22%3E%3C%2Fspan%3E%5Cn%3C%2Fspan%3E%5Cn%3C%2Fdiv%3E%22%7D\"></card><p><br /></p><h5 id=\"96c6a927\">设置博文内链接为蓝色</h5><p><br /></p><p>通过路径：<code>themes\\next\\source\\css\\_common\\components\\post\\</code>,打开<code>post.styl</code>文件，在文件中添加，如下字段：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ce257d62%22%2C%22code%22%3A%22.post-body%20p%20a%7B%5Cn%20%20%20%20%20%20color%3A%20%230593d3%3B%5Cn%20%20%20%20%20%20border-bottom%3A%20none%3B%5Cn%20%20%20%20%20%20%26%3Ahover%20%7B%5Cn%20%20%20%20%20%20%20%20color%3A%20%230477ab%3B%5Cn%20%20%20%20%20%20%20%20text-decoration%3A%20underline%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%22%7D\"></card><p><br /></p><h5 id=\"381bdc3c\">设置文章末尾”本文结束”标记</h5><p><br /></p><h5 id=\"bcfbbd85\">显示每篇文章字数</h5><p><br /></p><h5 id=\"07b3b5a4\">文章末尾添加版权说明</h5><p><br /></p><p>直接修改<code>主题配置文件</code>，定位到<code>post_copyright</code>，将<code>enable</code>由<code>false</code>改为<code>true</code>即可。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2208b85662%22%2C%22code%22%3A%22%23%20Declare%20license%20on%20posts%5Cnpost_copyright%3A%5Cn%20%20enable%3A%20true%5Cn%20%20license%3A%20CC%20BY-NC-SA%203.0%5Cn%20%20license_url%3A%20https%3A%2F%2Fcreativecommons.org%2Flicenses%2Fby-nc-sa%2F3.0%2F%22%7D\"></card><p><br /></p><h5 id=\"c9107f73\">实现fork me on github</h5><p><br /></p><p>在右上角或者左上角实现fork me on github。</p><p>点击<a href=\"https://blog.github.com/2008-12-19-github-ribbons/\" target=\"_blank\">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228de4b621%22%2C%22code%22%3A%22%3Ca%20href%3D%5C%22https%3A%2F%2Fgithub.com%2Fyou%5C%22%3E%3Cimg%20style%3D%5C%22position%3A%20absolute%3B%20top%3A%200%3B%20left%3A%200%3B%20border%3A%200%3B%5C%22%20src%3D%5C%22https%3A%2F%2Fs3.amazonaws.com%2Fgithub%2Fribbons%2Fforkme_left_darkblue_121621.png%5C%22%20alt%3D%5C%22Fork%20me%20on%20GitHub%5C%22%3E%3C%2Fa%3E%22%7D\"></card><p><br /></p><p>粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>标签改为github地址：</p><p><br /></p><h5 id=\"83c9f21d\">修改文章底部的#号标签</h5><p><br /></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将其中的 <code>#</code>换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p><br /></p><h5 id=\"bb66e963\">添加搜索功能</h5><p><br /></p><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bdb673f9%22%2C%22code%22%3A%22npm%20install%20hexo-generator-searchdb%20--save%22%7D\"></card><p><br /></p><p>编辑 <code>站点配置文件</code> （站点根目录下），新增以下内容到任意位置：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2286640abe%22%2C%22code%22%3A%22search%3A%5Cn%20%20path%3A%20search.xml%5Cn%20%20field%3A%20post%5Cn%20%20format%3A%20html%5Cn%20%20limit%3A%2010000%22%7D\"></card><p><br /></p><p>编辑 <code>主题配置文件</code> （主题目录下），启用本地搜索功能：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227e5efc16%22%2C%22code%22%3A%22%23%20Local%20search%5Cnlocal_search%3A%5Cn%20%20enable%3A%20true%22%7D\"></card><p><br /></p><h5 id=\"9d7e7da8\">图床修改</h5><p><br /></p><p>由于以前都是直接使用的github私人仓库做的图床，但是有时候就是访问不到，因为博客是采用双部署的，可能coding上的已经是外链了被屏蔽了，所以还是得想点别的办法了。</p><p>看到网上说的各种，其实都还是有点问题，最终发现最近的腾讯对象存储，发现还真的可以。</p><p>软件名：picgo</p><p>链接：<a href=\"https://sspai.com/post/42310\" target=\"_blank\">https://sspai.com/post/42310</a></p><p>使用方法：<a href=\"https://github.com/Molunerfinn/PicGo/wiki/%E8%AF%A6%E7%BB%86%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8#v5%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\" target=\"_blank\">https://github.com/Molunerfinn/PicGo/wiki/详细窗口的使用#v5版本说明</a></p><p><br /></p><h5 id=\"44054a16\">Next主题个性化之自动更换背景图片</h5><p><br /></p><p><a href=\"https://blog.csdn.net/mango_haoming/article/details/78473243\" target=\"_blank\">https://blog.csdn.net/mango_haoming/article/details/78473243</a></p><p><br /></p><h5 id=\"f95bcf01\">修改主题：yilia（已取消）</h5><p><br /></p><p><a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\">https://github.com/litten/hexo-theme-yilia</a></p><p><br /></p><h5 id=\"c0151d17\">2018-4-22 加入畅言评论（已取消）</h5><p><br /></p><p>详见：<a href=\"https://blog.csdn.net/lcyaiym/article/details/76762074\" target=\"_blank\">https://blog.csdn.net/lcyaiym/article/details/76762074</a></p><p><br /></p><h5 id=\"d6dd82fc\">2018-4-10 加入豆瓣读书和电影</h5><p><br /></p><p>详细见：<a href=\"https://github.com/mythsman/hexo-douban\" target=\"_blank\">https://github.com/mythsman/hexo-douban</a></p><p><br /></p><h5 id=\"b9b58a07\">页面中文无法显示的问题</h5><p><br /></p><p>这种中文问题，基本上都是编码的问题，但是开始各种都没找到原因，改了language里面的配置文件，最后发现是文件的编码，需要改成'无bom的utf-8的编码格式 '</p><p><br /></p><h5 id=\"53a898ea\">主界面无法显示categories和tags的问题</h5><p><br /></p><p>这个问题真的是搞的有点久，因为基本上都被人忽略了，也可能很多人都没遇到而我恰好遇到了吧，不懂前端的我只能对于这种玄学问题强行百度了。</p><p>解决办法：将categories和tags目录下的index文件分别改成：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223fe07bb1%22%2C%22code%22%3A%22categories%3A%5Cntype%3A%20%5C%22categories%5C%22%5Cnlayout%3A%20%5C%22categories%5C%22%5Cntags%3A%5Cntype%3A%20%5C%22tags%5C%22%5Cnlayout%3A%20%5C%22tags%5C%22%22%7D\"></card><p><br /></p><p>折腾完又不早了，希望以后好好看书，好好编程吧，最近没有什么特别大的梦想，只想安静的学习。。。</p><p><br /></p><h5 id=\"2f83833c\">绑定gitpages到自己的域名</h5><p><br /></p><p>打开<a href=\"https://education.github.com/\" target=\"_blank\">学生包</a>，通过教育邮箱申请之后，可以在package中找到那么namecheap，注册通过GitHub进入，可以直接申请域名，会自动绑定到我们的gitpage，不过还需要一点点修改，就是把cname的www改成我们的gitpage页面，就可以了。。</p><p><br /></p><h5 id=\"217a4820\">采用coding和gitpages双部署</h5><p><br /></p><p>采用双部署的原因是国内访问github的速度有时候太感人了，有些人直接打不开，搞得有点尴尬，于是看到了网上所说的双部署，将默认的国内地址解析到coding的pages服务上，其他的绑定到gitpage上，这样国内的访问速度就快了。</p><p>具体的coding pages的搭建就不写了，在coding网站中建好仓库后，在我们本地的config文件后面的push repository 加上coding page仓库的地址就可以了。</p><p>具体的cname记录和A记录如下图：</p><p><br /></p><p><strong> Reference: </strong></p><p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\">Hexo文档</a></p><p><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\">Next主题文档</a></p><p><a href=\"http://blog.csdn.net/dengnanyi/article/details/53969684\" target=\"_blank\">绑定到coding</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/33616481\" target=\"_blank\">Hexo搭建的GitHub博客之优化大全</a></p><p><a href=\"https://wafer.li/Hexo/%E8%A7%A3%E5%86%B3%20Travis%20CI%20%E6%80%BB%E6%98%AF%E6%9B%B4%E6%96%B0%E6%97%A7%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%97%AE%E9%A2%98/\" target=\"_blank\">解决 Travis CI 总是更新旧博客的问题</a></p><p><a href=\"http://www.tianguolangzi.com/2018/01/17/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/\" target=\"_blank\">修改背景图片</a></p><p><a href=\"https://xyzardq.github.io/2016/11/02/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8A%9F%E8%83%BD/\" target=\"_blank\">Hexo添加分类</a></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-13T12:58:01.000Z",
    "deleted_at": null,
    "created_at": "2019-05-13T12:45:04.000Z",
    "updated_at": "2020-09-06T15:29:40.000Z",
    "published_at": "2019-05-13T12:58:01.000Z",
    "first_published_at": "2019-05-13T12:47:59.000Z",
    "word_count": 1951,
    "cover": "https://cdn.nlark.com/yuque/0/2019/png/187932/1557751534763-6f377175-946d-4f32-bc8e-1cbaf76c4355.png",
    "description": "title: MySQL相关概念总结categories: 工具tags: [Hexo,博客]没错，这几天又开始折腾一下博客了，最近的节奏天天白天待在实验室怼论文，晚上看C++，时间安排比较紧凑，就觉得更需要阶段性的总结吧，所以又来写博客了，github始终是一个好的选择，于是入了Hexo的坑...",
    "custom_description": null,
    "hits": 32,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1681608,
    "slug": "kmnquf",
    "title": "博客模板",
    "book_id": 172138,
    "book": {
      "id": 172138,
      "type": "Book",
      "slug": "gaqqwc",
      "name": "blog",
      "user_id": 187932,
      "description": "我的博客",
      "creator_id": 187932,
      "public": 1,
      "items_count": 29,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-07-11T15:53:43.074Z",
      "updated_at": "2020-07-11T15:53:43.000Z",
      "created_at": "2018-11-05T11:00:47.000Z",
      "namespace": "mianhk/gaqqwc",
      "user": {
        "id": 187932,
        "type": "User",
        "login": "mianhk",
        "name": "mianhk",
        "description": null,
        "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 4,
        "created_at": "2018-10-10T13:47:18.000Z",
        "updated_at": "2020-07-05T13:57:17.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 187932,
    "creator": {
      "id": 187932,
      "type": "User",
      "login": "mianhk",
      "name": "mianhk",
      "description": null,
      "avatar_url": "https://gw.alipayobjects.com/zos/rmsportal/wYnHWSXDmBhiEmuwXsym.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 4,
      "created_at": "2018-10-10T13:47:18.000Z",
      "updated_at": "2020-07-05T13:57:17.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "title: MySQL相关概念总结<br />date: 2019-1-20 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n",
    "body_draft": "title: MySQL相关概念总结<br />date: 2019-1-20 11:27:21<br />categories: MySQL<br />tags: [MySQL,学习]\n\n---\n\n\n",
    "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>title: </span>MySQL相关概念总结</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span>date: 2019-1-20 <span>11:27:21</span></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">categories: MySQL</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">tags: [MySQL,学习]</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"hr\" data-card-value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\" id=\"g3Deo\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br><span data-lake-element=\"cursor\"></span></p></div>",
    "body_lake": "<!doctype lake><p><span>title: </span>MySQL相关概念总结</p><p><span>date: 2019-1-20 <span>11:27:21</span></span></p><p>categories: MySQL</p><p>tags: [MySQL,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><p><br /><cursor /></p>",
    "body_draft_lake": "<!doctype lake><p><span>title: </span>MySQL相关概念总结</p><p><span>date: 2019-1-20 <span>11:27:21</span></span></p><p>categories: MySQL</p><p>tags: [MySQL,学习]</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22g3Deo%22%7D\"></card><p><br /><cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-13T12:44:08.000Z",
    "deleted_at": null,
    "created_at": "2019-05-13T12:43:29.000Z",
    "updated_at": "2020-09-06T15:29:40.000Z",
    "published_at": "2019-05-13T12:44:08.000Z",
    "first_published_at": "2019-05-13T12:44:08.000Z",
    "word_count": 21,
    "cover": null,
    "description": "title: MySQL相关概念总结date: 2019-1-20 11:27:21categories: MySQLtags: [MySQL,学习]",
    "custom_description": null,
    "hits": 3,
    "_serializer": "v2.doc_detail"
  }
]